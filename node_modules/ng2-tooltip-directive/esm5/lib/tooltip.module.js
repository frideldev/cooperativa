/**
 * @fileoverview added by tsickle
 * Generated from: lib/tooltip.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TooltipDirective } from './tooltip.directive';
import { TooltipComponent } from './tooltip.component';
import { TooltipOptionsService } from './tooltip-options.service';
import * as ɵngcc0 from '@angular/core';
var TooltipModule = /** @class */ (function () {
    function TooltipModule() {
    }
    /**
     * @param {?} initOptions
     * @return {?}
     */
    TooltipModule.forRoot = /**
     * @param {?} initOptions
     * @return {?}
     */
    function (initOptions) {
        return {
            ngModule: TooltipModule,
            providers: [
                {
                    provide: TooltipOptionsService,
                    useValue: initOptions
                }
            ]
        };
    };
TooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TooltipModule });
TooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TooltipModule_Factory(t) { return new (t || TooltipModule)(); }, imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TooltipModule, { declarations: function () { return [TooltipDirective,
        TooltipComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TooltipDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    TooltipDirective,
                    TooltipComponent
                ],
                imports: [
                    CommonModule
                ],
                exports: [
                    TooltipDirective
                ],
                entryComponents: [
                    TooltipComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return TooltipModule;
}());
export { TooltipModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZzItdG9vbHRpcC1kaXJlY3RpdmUvbGliL3Rvb2x0aXAubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXZELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDOztBQUVsRTtBQUVpQixJQUZqQjtBQUNlLElBMkJmLENBQUM7QUFDRDtBQUFRO0FBQThCO0FBQW1CO0FBQVEsSUFadEQscUJBQU87QUFBTztBQUE4QjtBQUNwRDtBQUFRLElBRFAsVUFBZSxXQUEyQjtBQUFJLFFBQzFDLE9BQU87QUFDZixZQUFZLFFBQVEsRUFBRSxhQUFhO0FBQ25DLFlBQVksU0FBUyxFQUFFO0FBQ3ZCLGdCQUFnQjtBQUNoQixvQkFBb0IsT0FBTyxFQUFFLHFCQUFxQjtBQUNsRCxvQkFBb0IsUUFBUSxFQUFFLFdBQVc7QUFDekMsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTLENBQUM7QUFDVixJQUFJLENBQUM7aURBM0JKLFFBQVEsU0FBQztpQkFDTixZQUFZLEVBQUUsMEJBQ1YsZ0JBQWdCLDBCQUNoQixnQkFBZ0Isc0JBQ25CO2lCQUNELE9BQU87Q0FBRTtZQUNMLFlBQVksc0JBQ2Ysc0JBQ0QsT0FBTyxFQUFFLDBCQUNMLGdCQUFnQixzQkFDbkI7QUFDRCxlQUFlLEVBQUUsMEJBQ2IsZ0JBQWdCLHNCQUNuQixrQkFDSjs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUNRO0FBQUMsSUFhVixvQkFBQztBQUNBLENBREEsQUE1QkQsSUE0QkM7QUFDRCxTQWRhLGFBQWE7QUFFMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBUb29sdGlwRGlyZWN0aXZlIH0gZnJvbSAnLi90b29sdGlwLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFRvb2x0aXBDb21wb25lbnQgfSBmcm9tICcuL3Rvb2x0aXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVG9vbHRpcE9wdGlvbnMgfSBmcm9tICcuL3Rvb2x0aXAtb3B0aW9ucy5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBUb29sdGlwT3B0aW9uc1NlcnZpY2UgfSBmcm9tICcuL3Rvb2x0aXAtb3B0aW9ucy5zZXJ2aWNlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBUb29sdGlwRGlyZWN0aXZlLFxyXG4gICAgICAgIFRvb2x0aXBDb21wb25lbnRcclxuICAgIF0sXHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIFRvb2x0aXBEaXJlY3RpdmVcclxuICAgIF0sXHJcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgICAgICBUb29sdGlwQ29tcG9uZW50XHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUb29sdGlwTW9kdWxlIHtcclxuXHJcbiAgICBzdGF0aWMgZm9yUm9vdChpbml0T3B0aW9uczogVG9vbHRpcE9wdGlvbnMpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuZ01vZHVsZTogVG9vbHRpcE1vZHVsZSxcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZTogVG9vbHRpcE9wdGlvbnNTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHVzZVZhbHVlOiBpbml0T3B0aW9uc1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG4iXX0=