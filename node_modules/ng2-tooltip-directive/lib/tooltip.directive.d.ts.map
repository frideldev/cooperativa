{"version":3,"file":"tooltip.directive.d.ts","sources":["tooltip.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ComponentFactoryResolver, ApplicationRef, Injector, EventEmitter } from '@angular/core';\r\nimport { TooltipOptions } from './tooltip-options.interface';\r\nexport interface AdComponent {\r\n    data: any;\r\n    show: boolean;\r\n    close: boolean;\r\n    events: any;\r\n}\r\nexport declare class TooltipDirective {\r\n    private initOptions;\r\n    private elementRef;\r\n    private componentFactoryResolver;\r\n    private appRef;\r\n    private injector;\r\n    hideTimeoutId: number;\r\n    destroyTimeoutId: number;\r\n    hideAfterClickTimeoutId: number;\r\n    createTimeoutId: number;\r\n    showTimeoutId: number;\r\n    componentRef: any;\r\n    elementPosition: any;\r\n    _showDelay: any;\r\n    _hideDelay: number;\r\n    _id: any;\r\n    _options: any;\r\n    _defaultOptions: any;\r\n    _destroyDelay: number;\r\n    componentSubscribe: any;\r\n    options: TooltipOptions;\r\n    tooltipValue: string;\r\n    placement: string;\r\n    autoPlacement: boolean;\r\n    contentType: string;\r\n    hideDelayMobile: number;\r\n    hideDelayTouchscreen: number;\r\n    zIndex: number;\r\n    animationDuration: number;\r\n    trigger: string;\r\n    tooltipClass: string;\r\n    display: boolean;\r\n    displayMobile: boolean;\r\n    displayTouchscreen: boolean;\r\n    shadow: boolean;\r\n    theme: boolean;\r\n    offset: number;\r\n    width: number;\r\n    maxWidth: number;\r\n    id: any;\r\n    showDelay: number;\r\n    hideDelay: number;\r\n    hideDelayAfterClick: number;\r\n    pointerEvents: 'auto' | 'none';\r\n    position: {\r\n        top: number;\r\n        left: number;\r\n    };\r\n    readonly isTooltipDestroyed: any;\r\n    destroyDelay: number;\r\n    readonly tooltipPosition: any;\r\n    events: EventEmitter<any>;\r\n    constructor(initOptions: any, elementRef: ElementRef, componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector);\r\n    onMouseEnter(): void;\r\n    onMouseLeave(): void;\r\n    onClick(): void;\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: any): void;\r\n    ngOnDestroy(): void;\r\n    getShowDelay(): any;\r\n    getHideDelay(): any;\r\n    getProperties(changes: any): {};\r\n    renameProperties(options: TooltipOptions): TooltipOptions;\r\n    getElementPosition(): void;\r\n    createTooltip(): void;\r\n    destroyTooltip(options?: {\r\n        fast: boolean;\r\n    }): void;\r\n    showTooltipElem(): void;\r\n    hideTooltip(): void;\r\n    appendComponentToBody(component: any, data?: any): void;\r\n    clearTimeouts(): void;\r\n    readonly isDisplayOnHover: boolean;\r\n    readonly isDisplayOnClick: boolean;\r\n    readonly isTouchScreen: boolean;\r\n    applyOptionsDefault(defaultOptions: any, options: any): void;\r\n    handleEvents(event: any): void;\r\n    show(): void;\r\n    hide(): void;\r\n}\r\n"]}