{"ast":null,"code":"import _inherits from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { InjectionToken, Injectable, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, Input, HostBinding, Component, forwardRef, EventEmitter, ContentChildren, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {string} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"*\"];\n\nfunction NgWizardComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_li_2_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var step_r3 = ctx.$implicit;\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5._showSelectedStep($event, step_r3);\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelement(3, \"br\");\n    ɵngcc0.ɵɵelementStart(4, \"small\");\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var step_r3 = ctx.$implicit;\n    var i_r4 = ctx.index;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._getStepCssClass(step_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"href\", \"#step-\", i_r4, \"\", ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(step_r3.title);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(step_r3.description);\n  }\n}\n\nfunction NgWizardComponent_div_3_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_button_2_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10._showPreviousStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r7.styles.previousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.config.lang.previous);\n  }\n}\n\nfunction NgWizardComponent_div_3_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_button_3_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r12._showNextStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r8.styles.nextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.config.lang.next);\n  }\n}\n\nfunction NgWizardComponent_div_3_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_div_4_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var button_r15 = ctx.$implicit;\n      var ctx_r17 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r17._extraButtonClicked(button_r15);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var button_r15 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", button_r15.class);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(button_r15.text);\n  }\n}\n\nfunction NgWizardComponent_div_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_3_div_4_button_1_Template, 2, 2, \"button\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r9.config.toolbarSettings.toolbarExtraButtons);\n  }\n}\n\nfunction NgWizardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_3_button_2_Template, 2, 2, \"button\", 8);\n    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_button_3_Template, 2, 2, \"button\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_3_div_4_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.styles.toolbarTop);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showPreviousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showNextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showExtraButtons);\n  }\n}\n\nfunction NgWizardComponent_div_6_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_button_2_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r22._showPreviousStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r19.styles.previousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r19.config.lang.previous);\n  }\n}\n\nfunction NgWizardComponent_div_6_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_button_3_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r24._showNextStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r20.styles.nextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r20.config.lang.next);\n  }\n}\n\nfunction NgWizardComponent_div_6_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r30 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_div_4_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r30);\n      var button_r27 = ctx.$implicit;\n      var ctx_r29 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r29._extraButtonClicked(button_r27);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var button_r27 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", button_r27.class);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(button_r27.text);\n  }\n}\n\nfunction NgWizardComponent_div_6_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_6_div_4_button_1_Template, 2, 2, \"button\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r21.config.toolbarSettings.toolbarExtraButtons);\n  }\n}\n\nfunction NgWizardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_6_button_2_Template, 2, 2, \"button\", 8);\n    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_6_button_3_Template, 2, 2, \"button\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_6_div_4_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.styles.toolbarBottom);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showPreviousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showNextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showExtraButtons);\n  }\n}\n\nvar TOOLBAR_POSITION = {\n  none: 'none',\n  top: 'top',\n  bottom: 'bottom',\n  both: 'both'\n};\n/** @enum {string} */\n\nvar TOOLBAR_BUTTON_POSITION = {\n  start: 'start',\n  end: 'end'\n};\n/** @enum {string} */\n\nvar THEME = {\n  default: 'default',\n  arrows: 'arrows',\n  circles: 'circles',\n  dots: 'dots'\n};\n/** @enum {string} */\n\nvar STEP_STATE = {\n  normal: 'normal',\n  disabled: 'disabled',\n  error: 'error',\n  hidden: 'hidden'\n};\n/** @enum {string} */\n\nvar STEP_STATUS = {\n  untouched: 'untouched',\n  done: 'done',\n  active: 'active'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar DEFAULT_CONFIG = {\n  selected: 0,\n  keyNavigation: true,\n  cycleSteps: false,\n  lang: {\n    next: 'Next',\n    previous: 'Previous'\n  },\n  toolbarSettings: {\n    toolbarPosition: TOOLBAR_POSITION.bottom,\n    toolbarButtonPosition: TOOLBAR_BUTTON_POSITION.end,\n    showNextButton: true,\n    showPreviousButton: true,\n    toolbarExtraButtons: []\n  },\n  anchorSettings: {\n    anchorClickable: true,\n    enableAllAnchors: false,\n    markDoneStep: true,\n    markAllPreviousStepsAsDone: true,\n    removeDoneStepOnNavigateBack: false,\n    enableAnchorOnDoneStep: true\n  },\n  theme: THEME.default\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar NG_WIZARD_CONFIG_TOKEN = /*@__PURE__*/new InjectionToken('ngWizardCustom.config');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// https://gist.github.com/ahtcx/0cd94e62691f539160b32ecda18af3d6\n// Merge a `source` object to a `target` recursively\n\n/**\n * @param {?} target\n * @param {?} source\n * @return {?}\n */\n\nfunction merge(target, source) {\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n  for (var _i = 0, _Object$keys = Object.keys(source); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (source[key] instanceof Object && key in target) {\n      Object.assign(source[key], merge(target[key], source[key]));\n    }\n  } // Join `target` and modified `source`\n\n\n  Object.assign(target || {}, source);\n  return target;\n}\n\nvar NgWizardService = /*@__PURE__*/function () {\n  var NgWizardService = /*#__PURE__*/function () {\n    /**\n     * @param {?} config\n     */\n    function NgWizardService(config) {\n      _classCallCheck(this, NgWizardService);\n\n      this.config = config;\n      this.defaultConfig = Object.assign({}, DEFAULT_CONFIG);\n\n      if (this.config) {\n        this.defaultConfig = merge(this.defaultConfig, this.config);\n      } // Observable sources\n\n\n      this.resetWizard = new Subject();\n      this.showNextStep = new Subject();\n      this.showPreviousStep = new Subject();\n      this.setTheme = new Subject(); // Observable streams\n\n      this.resetWizard$ = this.resetWizard.asObservable();\n      this.showNextStep$ = this.showNextStep.asObservable();\n      this.showPreviousStep$ = this.showPreviousStep.asObservable();\n      this.setTheme$ = this.setTheme.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(NgWizardService, [{\n      key: \"getDefaultConfig\",\n      value: function getDefaultConfig() {\n        return Object.assign({}, this.defaultConfig);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this.resetWizard.next();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"next\",\n      value: function next() {\n        this.showNextStep.next();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"previous\",\n      value: function previous() {\n        this.showPreviousStep.next();\n      }\n      /**\n       * @param {?} theme\n       * @return {?}\n       */\n\n    }, {\n      key: \"theme\",\n      value: function theme(_theme) {\n        this.setTheme.next(_theme);\n      }\n    }]);\n\n    return NgWizardService;\n  }();\n\n  NgWizardService.ɵfac = function NgWizardService_Factory(t) {\n    return new (t || NgWizardService)(ɵngcc0.ɵɵinject(NG_WIZARD_CONFIG_TOKEN, 8));\n  };\n\n  NgWizardService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NgWizardService,\n    factory: NgWizardService.ɵfac,\n    providedIn: 'root'\n  });\n  /** @nocollapse */\n\n  NgWizardService.ngInjectableDef = /*@__PURE__*/ɵɵdefineInjectable({\n    factory: function NgWizardService_Factory() {\n      return new NgWizardService(ɵɵinject(NG_WIZARD_CONFIG_TOKEN, 8));\n    },\n    token: NgWizardService,\n    providedIn: \"root\"\n  });\n  return NgWizardService;\n}();\n\nvar NgWizardStep = /*@__PURE__*/function () {\n  var NgWizardStep = /*#__PURE__*/function () {\n    function NgWizardStep() {\n      _classCallCheck(this, NgWizardStep);\n    }\n\n    _createClass(NgWizardStep, [{\n      key: \"hidden\",\n\n      /**\n       * @return {?}\n       */\n      get: function get() {\n        return this.status != STEP_STATUS.active;\n      }\n    }]);\n\n    return NgWizardStep;\n  }();\n\n  NgWizardStep.ɵfac = function NgWizardStep_Factory(t) {\n    return new (t || NgWizardStep)();\n  };\n\n  NgWizardStep.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NgWizardStep,\n    hostVars: 1,\n    hostBindings: function NgWizardStep_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"hidden\", ctx.hidden);\n      }\n    },\n    inputs: {\n      title: \"title\",\n      description: \"description\",\n      state: \"state\"\n    }\n  });\n  return NgWizardStep;\n}();\n\nvar NgWizardStepComponent = /*@__PURE__*/function () {\n  var NgWizardStepComponent = /*#__PURE__*/function (_NgWizardStep) {\n    _inherits(NgWizardStepComponent, _NgWizardStep);\n\n    var _super = _createSuper(NgWizardStepComponent);\n\n    function NgWizardStepComponent() {\n      _classCallCheck(this, NgWizardStepComponent);\n\n      return _super.apply(this, arguments);\n    }\n\n    return NgWizardStepComponent;\n  }(NgWizardStep);\n\n  NgWizardStepComponent.ɵfac = function NgWizardStepComponent_Factory(t) {\n    return ɵNgWizardStepComponent_BaseFactory(t || NgWizardStepComponent);\n  };\n\n  NgWizardStepComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgWizardStepComponent,\n    selectors: [[\"ng-wizard-step\"]],\n    features: [/*@__PURE__*/ɵngcc0.ɵɵProvidersFeature([{\n      provide: NgWizardStep,\n      useExisting: /*@__PURE__*/forwardRef(\n      /**\n      * @return {?}\n      */\n      function () {\n        return NgWizardStepComponent;\n      })\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"tab-pane\", \"step-content\", 2, \"display\", \"block\"]],\n    template: function NgWizardStepComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return NgWizardStepComponent;\n}();\n\nvar ɵNgWizardStepComponent_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgWizardStepComponent);\n\nvar NgWizardComponent = /*@__PURE__*/function () {\n  var NgWizardComponent = /*#__PURE__*/function () {\n    /**\n     * @param {?} ngService\n     */\n    function NgWizardComponent(ngService) {\n      _classCallCheck(this, NgWizardComponent);\n\n      this.ngService = ngService;\n      this.stepChanged = new EventEmitter();\n      this.themeChanged = new EventEmitter();\n      this.reseted = new EventEmitter();\n      this.styles = {};\n      this.showToolbarTop = false;\n      this.showPreviousButton = false;\n      this.showNextButton = false;\n      this.showToolbarBottom = false;\n      this.showExtraButtons = false;\n      this.current_index = null; // Active step index\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(NgWizardComponent, [{\n      key: \"ngAfterContentInit\",\n\n      /**\n       * @return {?}\n       */\n      value: function ngAfterContentInit() {\n        var _this = this;\n\n        this._backupStepStates();\n\n        this._init(); // Set toolbar\n\n\n        this._setToolbar(); // Assign plugin events\n\n\n        this._setEvents();\n\n        this.resetWizardWatcher = this.ngService.resetWizard$.subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this._reset();\n        });\n        this.showNextStepWatcher = this.ngService.showNextStep$.subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this._showNextStep();\n        });\n        this.showPreviousStepWatcher = this.ngService.showPreviousStep$.subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this._showPreviousStep();\n        });\n        this.setThemeWatcher = this.ngService.setTheme$.subscribe(\n        /**\n        * @param {?} theme\n        * @return {?}\n        */\n\n        /**\n        * @param {?} theme\n        * @return {?}\n        */\n        function (theme) {\n          _this._setTheme(theme);\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"_init\",\n      value: function _init() {\n        // set config\n\n        /** @type {?} */\n        var defaultConfig = this.ngService.getDefaultConfig();\n        this.config = merge(defaultConfig, this.pConfig); // set step states\n\n        this._initSteps(); // Set the elements\n\n\n        this._initStyles(); // Show the initial step\n\n\n        this._showStep(this.config.selected);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"_initSteps\",\n      value: function _initSteps() {\n        var _this2 = this;\n\n        this.steps.forEach(\n        /**\n        * @param {?} step\n        * @param {?} index\n        * @return {?}\n        */\n        function (step, index) {\n          step.index = index;\n          step.status = step.status || STEP_STATUS.untouched;\n          step.state = step.state || STEP_STATE.normal;\n        }); // Mark previous steps of the active step as done\n\n        if (this.config.selected > 0 && this.config.anchorSettings.markDoneStep && this.config.anchorSettings.markAllPreviousStepsAsDone) {\n          this.steps.forEach(\n          /**\n          * @param {?} step\n          * @return {?}\n          */\n\n          /**\n          * @param {?} step\n          * @return {?}\n          */\n          function (step) {\n            if (step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden) {\n              step.status = step.index < _this2.config.selected ? STEP_STATUS.done : step.status;\n            }\n          });\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"_backupStepStates\",\n      value: function _backupStepStates() {\n        this.steps.forEach(\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n        function (step) {\n          step.initialStatus = step.status;\n          step.initialState = step.state;\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"_restoreStepStates\",\n      value: function _restoreStepStates() {\n        this.steps.forEach(\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n        function (step) {\n          step.status = step.initialStatus;\n          step.state = step.initialState;\n        });\n      } // PRIVATE FUNCTIONS\n\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"_initStyles\",\n      value: function _initStyles() {\n        // Set the main element\n        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme; // Set anchor elements\n\n        this.styles.step = 'nav-item'; // li\n        // Make the anchor clickable\n\n        if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n          this.styles.step += ' clickable';\n        } // Set the toolbar styles\n\n\n        this.styles.toolbarTop = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-top justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;\n        this.styles.toolbarBottom = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-bottom justify-content-' + this.config.toolbarSettings.toolbarButtonPosition; // Set previous&next buttons \n\n        this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n        this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"_setToolbar\",\n      value: function _setToolbar() {\n        this.showToolbarTop = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.top || this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n        this.showToolbarBottom = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.bottom || this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n        this.showPreviousButton = this.config.toolbarSettings.showPreviousButton;\n        this.showNextButton = this.config.toolbarSettings.showNextButton;\n        this.showExtraButtons = this.config.toolbarSettings.toolbarExtraButtons && this.config.toolbarSettings.toolbarExtraButtons.length > 0;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"_setEvents\",\n      value: function _setEvents() {\n        //TODO: keyNavigation\n        // Keyboard navigation event\n        if (this.config.keyNavigation) ;\n      }\n      /**\n       * @param {?} selectedStep\n       * @return {?}\n       */\n\n    }, {\n      key: \"_getStepCssClass\",\n      value: function _getStepCssClass(selectedStep) {\n        /** @type {?} */\n        var stepClass = this.styles.step;\n\n        switch (selectedStep.state) {\n          case STEP_STATE.disabled:\n            stepClass += ' disabled';\n            break;\n\n          case STEP_STATE.error:\n            stepClass += ' danger';\n            break;\n\n          case STEP_STATE.hidden:\n            stepClass += ' hidden';\n            break;\n        }\n\n        switch (selectedStep.status) {\n          case STEP_STATUS.done:\n            stepClass += ' done';\n            break;\n\n          case STEP_STATUS.active:\n            stepClass += ' active';\n            break;\n        }\n\n        return stepClass;\n      }\n      /**\n       * @param {?} event\n       * @param {?} selectedStep\n       * @return {?}\n       */\n\n    }, {\n      key: \"_showSelectedStep\",\n      value: function _showSelectedStep(event, selectedStep) {\n        event.preventDefault();\n\n        if (!this.config.anchorSettings.anchorClickable) {\n          return;\n        }\n\n        if (!this.config.anchorSettings.enableAnchorOnDoneStep && selectedStep.status == STEP_STATUS.done) {\n          return true;\n        }\n\n        if (selectedStep.index != this.current_index) {\n          if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n            this._showStep(selectedStep.index);\n          } else {\n            if (selectedStep.status == STEP_STATUS.done) {\n              this._showStep(selectedStep.index);\n            }\n          }\n        }\n      }\n      /**\n       * @param {?=} event\n       * @return {?}\n       */\n\n    }, {\n      key: \"_showNextStep\",\n      value: function _showNextStep(event) {\n        var _this3 = this;\n\n        if (event) {\n          event.preventDefault();\n        } // Find the next not disabled & hidden step\n\n        /** @type {?} */\n\n\n        var filteredSteps = this.steps.filter(\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n        function (step) {\n          return step.index > (_this3.current_index == null ? -1 : _this3.current_index) && step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden;\n        });\n\n        if (filteredSteps.length == 0) {\n          if (!this.config.cycleSteps) {\n            return;\n          }\n\n          this._showStep(0);\n        } else {\n          this._showStep(filteredSteps.shift().index);\n        }\n      }\n      /**\n       * @param {?=} event\n       * @return {?}\n       */\n\n    }, {\n      key: \"_showPreviousStep\",\n      value: function _showPreviousStep(event) {\n        var _this4 = this;\n\n        if (event) {\n          event.preventDefault();\n        } // Find the previous not disabled & hidden step\n\n        /** @type {?} */\n\n\n        var filteredSteps = this.steps.filter(\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n        function (step) {\n          return step.index < (_this4.current_index == null && _this4.config.cycleSteps ? _this4.steps.length : _this4.current_index) && step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden;\n        });\n\n        if (filteredSteps.length == 0) {\n          if (!this.config.cycleSteps) {\n            return;\n          }\n\n          this._showStep(this.steps.length - 1);\n        } else {\n          this._showStep(filteredSteps.pop().index);\n        }\n      }\n      /**\n       * @param {?} index\n       * @return {?}\n       */\n\n    }, {\n      key: \"_showStep\",\n      value: function _showStep(index) {\n        // If step not found, skip\n        if (index >= this.steps.length || index < 0) {\n          return;\n        } // If current step is requested again, skip\n\n\n        if (index == this.current_index) {\n          return;\n        }\n        /** @type {?} */\n\n\n        var selectedStep = this.steps.toArray()[index]; // If it is a disabled or hidden step, skip\n\n        if (selectedStep.state == STEP_STATE.disabled || selectedStep.state == STEP_STATE.hidden) {\n          return;\n        } // Load step content\n\n\n        this._loadStepContent(selectedStep);\n      }\n      /**\n       * @param {?} selectedStep\n       * @return {?}\n       */\n\n    }, {\n      key: \"_loadStepContent\",\n      value: function _loadStepContent(selectedStep) {\n        // Get the direction of step navigation\n\n        /** @type {?} */\n        var stepDirection = this.current_index != null && this.current_index != selectedStep.index ? this.current_index < selectedStep.index ? \"forward\" : \"backward\" : '';\n        /** @type {?} */\n\n        var stepPosition = selectedStep.index == 0 ? 'first' : selectedStep.index == this.steps.length - 1 ? 'final' : 'middle'; // Update controls\n\n        this._setAnchor(selectedStep); // Set the buttons based on the step\n\n\n        this._setButtons(selectedStep.index); // Trigger \"stepChanged\" event\n\n\n        this.stepChanged.emit({\n          step: selectedStep,\n          previousStep: this.currentStep,\n          direction: stepDirection,\n          position: stepPosition\n        }); // Update the current index\n\n        this.current_index = selectedStep.index;\n        this.currentStep = selectedStep;\n      }\n      /**\n       * @param {?} selectedStep\n       * @return {?}\n       */\n\n    }, {\n      key: \"_setAnchor\",\n      value: function _setAnchor(selectedStep) {\n        // Current step anchor > Remove other classes and add done class\n        if (this.currentStep) {\n          this.currentStep.status = STEP_STATUS.untouched;\n\n          if (this.config.anchorSettings.markDoneStep) {\n            this.currentStep.status = STEP_STATUS.done;\n\n            if (this.config.anchorSettings.removeDoneStepOnNavigateBack) {\n              this.steps.forEach(\n              /**\n              * @param {?} step\n              * @return {?}\n              */\n\n              /**\n              * @param {?} step\n              * @return {?}\n              */\n              function (step) {\n                if (step.index > selectedStep.index) {\n                  step.status = STEP_STATUS.untouched;\n                }\n              });\n            }\n          }\n        } // Next step anchor > Remove other classes and add active class\n\n\n        selectedStep.status = STEP_STATUS.active;\n      }\n      /**\n       * @param {?} index\n       * @return {?}\n       */\n\n    }, {\n      key: \"_setButtons\",\n      value: function _setButtons(index) {\n        // Previous/Next Button enable/disable based on step\n        if (!this.config.cycleSteps) {\n          if (0 >= index) {\n            this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev disabled';\n          } else {\n            this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n          }\n\n          if (this.steps.length - 1 <= index) {\n            this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next disabled';\n          } else {\n            this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n          }\n        }\n      }\n      /**\n       * @param {?} button\n       * @return {?}\n       */\n\n    }, {\n      key: \"_extraButtonClicked\",\n      value: function _extraButtonClicked(button) {\n        if (button.event) {\n          button.event();\n        }\n      } // HELPER FUNCTIONS\n\n      /**\n       * @param {?} event\n       * @return {?}\n       */\n\n    }, {\n      key: \"_keyNav\",\n      value: function _keyNav(event) {\n        // Keyboard navigation\n        switch (event.which) {\n          case 37:\n            // left\n            this._showPreviousStep(event);\n\n            event.preventDefault();\n            break;\n\n          case 39:\n            // right\n            this._showNextStep(event);\n\n            event.preventDefault();\n            break;\n\n          default:\n            return;\n          // exit this handler for other keys\n        }\n      }\n      /*\n        _showLoader() {\n          this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';\n        }\n      \r\n        _hideLoader() {\n          this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n        }\n        */\n      // PUBLIC FUNCTIONS\n\n      /**\n       * @param {?} theme\n       * @return {?}\n       */\n\n    }, {\n      key: \"_setTheme\",\n      value: function _setTheme(theme) {\n        if (this.config.theme == theme) {\n          return false;\n        }\n\n        this.config.theme = theme;\n        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme; // Trigger \"themeChanged\" event\n\n        this.themeChanged.emit(this.config.theme);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"_reset\",\n      value: function _reset() {\n        // Reset all elements and classes\n        this.current_index = null;\n        this.currentStep = null;\n\n        this._restoreStepStates();\n\n        this._init(); // Trigger \"reseted\" event\n\n\n        this.reseted.emit();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.resetWizardWatcher) {\n          this.resetWizardWatcher.unsubscribe();\n        }\n\n        if (this.showNextStepWatcher) {\n          this.showNextStepWatcher.unsubscribe();\n        }\n\n        if (this.showPreviousStepWatcher) {\n          this.showPreviousStepWatcher.unsubscribe();\n        }\n\n        if (this.setThemeWatcher) {\n          this.setThemeWatcher.unsubscribe();\n        }\n      }\n    }, {\n      key: \"pConfig\",\n      get: function get() {\n        return this._pConfig || {};\n      }\n      /**\n       * @param {?} config\n       * @return {?}\n       */\n      ,\n      set: function set(config) {\n        this._pConfig = config;\n      }\n    }]);\n\n    return NgWizardComponent;\n  }();\n\n  NgWizardComponent.ɵfac = function NgWizardComponent_Factory(t) {\n    return new (t || NgWizardComponent)(ɵngcc0.ɵɵdirectiveInject(NgWizardService));\n  };\n\n  NgWizardComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgWizardComponent,\n    selectors: [[\"ng-wizard\"]],\n    contentQueries: function NgWizardComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgWizardStep, false);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.steps = _t);\n      }\n    },\n    inputs: {\n      pConfig: [\"config\", \"pConfig\"]\n    },\n    outputs: {\n      stepChanged: \"stepChanged\",\n      themeChanged: \"themeChanged\",\n      reseted: \"reseted\"\n    },\n    ngContentSelectors: _c0,\n    decls: 7,\n    vars: 4,\n    consts: [[\"id\", \"ngwizard\", 3, \"ngClass\"], [1, \"nav\", \"nav-tabs\", \"step-anchor\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"ng-wizard-container\", \"tab-content\"], [3, \"ngClass\"], [1, \"nav-link\", 3, \"href\", \"click\"], [\"role\", \"group\", 1, \"btn-group\", \"mr-2\", \"ng-wizard-btn-group\"], [\"type\", \"button\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"btn-group mr-2 ng-wizard-btn-group-extra\", \"role\", \"group\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"ngClass\", \"click\"], [\"role\", \"group\", 1, \"btn-group\", \"mr-2\", \"ng-wizard-btn-group-extra\"], [\"type\", \"button\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function NgWizardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"ul\", 1);\n        ɵngcc0.ɵɵtemplate(2, NgWizardComponent_li_2_Template, 6, 4, \"li\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_Template, 5, 4, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, NgWizardComponent_div_6_Template, 5, 4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.styles.main);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showToolbarTop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showToolbarBottom);\n      }\n    },\n    directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf],\n    styles: [\"\"]\n  });\n  return NgWizardComponent;\n}();\n\nvar NgWizardModule = /*@__PURE__*/function () {\n  var NgWizardModule = /*#__PURE__*/function () {\n    function NgWizardModule() {\n      _classCallCheck(this, NgWizardModule);\n    }\n\n    _createClass(NgWizardModule, null, [{\n      key: \"forRoot\",\n\n      /**\n       * forRoot\n       * @param {?} ngWizardConfig\n       * @return {?} A module with its provider dependencies\n       */\n      value: function forRoot(ngWizardConfig) {\n        return {\n          ngModule: NgWizardModule,\n          providers: [{\n            provide: NG_WIZARD_CONFIG_TOKEN,\n            useValue: ngWizardConfig\n          }]\n        };\n      }\n    }]);\n\n    return NgWizardModule;\n  }();\n\n  NgWizardModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgWizardModule\n  });\n  NgWizardModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    factory: function NgWizardModule_Factory(t) {\n      return new (t || NgWizardModule)();\n    },\n    imports: [[CommonModule]]\n  });\n  return NgWizardModule;\n}();\n/*@__PURE__*/\n\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgWizardModule, {\n    declarations: function declarations() {\n      return [NgWizardComponent, NgWizardStepComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgWizardComponent, NgWizardStepComponent];\n    }\n  });\n})();\n\nexport { NgWizardModule, NgWizardService, STEP_STATE, THEME, TOOLBAR_BUTTON_POSITION, TOOLBAR_POSITION, NgWizardStep as ɵa, NG_WIZARD_CONFIG_TOKEN as ɵb, NgWizardComponent as ɵc, NgWizardStepComponent as ɵd };","map":null,"metadata":{},"sourceType":"module"}