{"ast":null,"code":"import _classCallCheck from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ElementRef, Renderer2, Input, HostBinding, HostListener, InjectionToken, Directive, Optional, Inject, ComponentFactoryResolver, ApplicationRef, Injector, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/tooltip.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction TooltipComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 3);\n  }\n}\n\nfunction TooltipComponent_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TooltipComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, TooltipComponent_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.value);\n  }\n}\n\nfunction TooltipComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r3.value, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nvar TooltipComponent = /*@__PURE__*/function () {\n  var TooltipComponent = /*#__PURE__*/function () {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    function TooltipComponent(elementRef, renderer) {\n      _classCallCheck(this, TooltipComponent);\n\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this._show = false;\n      this.events = new EventEmitter();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n\n    _createClass(TooltipComponent, [{\n      key: \"transitionEnd\",\n      value: function transitionEnd(event) {\n        if (this.show) {\n          this.events.emit({\n            type: 'shown'\n          });\n        }\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnInit\",\n\n      /**\n       * @return {?}\n       */\n      value: function ngOnInit() {\n        this.setCustomClass();\n        this.setStyles();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"setPosition\",\n      value: function setPosition() {\n        if (this.setHostStyle(this.placement)) {\n          this.setPlacementClass(this.placement);\n          return;\n        } else {\n          /* Is tooltip outside the visible area */\n\n          /** @type {?} */\n          var placements = ['top', 'right', 'bottom', 'left'];\n          /** @type {?} */\n\n          var isPlacementSet;\n\n          for (var _i = 0, _placements = placements; _i < _placements.length; _i++) {\n            var placement = _placements[_i];\n\n            if (this.setHostStyle(placement)) {\n              this.setPlacementClass(placement);\n              isPlacementSet = true;\n              return;\n            }\n          }\n          /* Set original placement */\n\n\n          if (!isPlacementSet) {\n            this.setHostStyle(this.placement, true);\n            this.setPlacementClass(this.placement);\n          }\n        }\n      }\n      /**\n       * @param {?} placement\n       * @return {?}\n       */\n\n    }, {\n      key: \"setPlacementClass\",\n      value: function setPlacementClass(placement) {\n        this.renderer.addClass(this.elementRef.nativeElement, 'tooltip-' + placement);\n      }\n      /**\n       * @param {?} placement\n       * @param {?=} disableAutoPlacement\n       * @return {?}\n       */\n\n    }, {\n      key: \"setHostStyle\",\n      value: function setHostStyle(placement) {\n        var disableAutoPlacement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        /** @type {?} */\n        var isSvg = this.element instanceof SVGElement;\n        /** @type {?} */\n\n        var tooltip = this.elementRef.nativeElement;\n        /** @type {?} */\n\n        var isCustomPosition = !this.elementPosition.right;\n        /** @type {?} */\n\n        var elementHeight = isSvg ? this.element.getBoundingClientRect().height : this.element.offsetHeight;\n        /** @type {?} */\n\n        var elementWidth = isSvg ? this.element.getBoundingClientRect().width : this.element.offsetWidth;\n        /** @type {?} */\n\n        var tooltipHeight = tooltip.clientHeight;\n        /** @type {?} */\n\n        var tooltipWidth = tooltip.clientWidth;\n        /** @type {?} */\n\n        var scrollY = window.pageYOffset;\n\n        if (isCustomPosition) {\n          elementHeight = 0;\n          elementWidth = 0;\n        }\n        /** @type {?} */\n\n\n        var topStyle;\n        /** @type {?} */\n\n        var leftStyle;\n\n        if (placement === 'top') {\n          topStyle = this.elementPosition.top + scrollY - (tooltipHeight + this.tooltipOffset);\n        }\n\n        if (placement === 'bottom') {\n          topStyle = this.elementPosition.top + scrollY + elementHeight + this.tooltipOffset;\n        }\n\n        if (placement === 'top' || placement === 'bottom') {\n          leftStyle = this.elementPosition.left + elementWidth / 2 - tooltipWidth / 2;\n        }\n\n        if (placement === 'left') {\n          leftStyle = this.elementPosition.left - tooltipWidth - this.tooltipOffset;\n        }\n\n        if (placement === 'right') {\n          leftStyle = this.elementPosition.left + elementWidth + this.tooltipOffset;\n        }\n\n        if (placement === 'left' || placement === 'right') {\n          topStyle = this.elementPosition.top + scrollY + elementHeight / 2 - tooltip.clientHeight / 2;\n        }\n        /* Is tooltip outside the visible area */\n\n\n        if (this.autoPlacement && !disableAutoPlacement) {\n          /** @type {?} */\n          var topEdge = topStyle;\n          /** @type {?} */\n\n          var bottomEdge = topStyle + tooltipHeight;\n          /** @type {?} */\n\n          var leftEdge = leftStyle;\n          /** @type {?} */\n\n          var rightEdge = leftStyle + tooltipWidth;\n          /** @type {?} */\n\n          var bodyHeight = window.innerHeight + scrollY;\n          /** @type {?} */\n\n          var bodyWidth = document.body.clientWidth;\n\n          if (topEdge < 0 || bottomEdge > bodyHeight || leftEdge < 0 || rightEdge > bodyWidth) {\n            return false;\n          }\n        }\n\n        this.hostStyleTop = topStyle + 'px';\n        this.hostStyleLeft = leftStyle + 'px';\n        return true;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"setZIndex\",\n      value: function setZIndex() {\n        if (this.options['zIndex'] !== 0) {\n          this.hostStyleZIndex = this.options['zIndex'];\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"setPointerEvents\",\n      value: function setPointerEvents() {\n        if (this.options['pointerEvents']) {\n          this.hostStylePointerEvents = this.options['pointerEvents'];\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"setCustomClass\",\n      value: function setCustomClass() {\n        var _this = this;\n\n        if (this.options['tooltipClass']) {\n          this.options['tooltipClass'].split(' ').forEach(\n          /**\n          * @param {?} className\n          * @return {?}\n          */\n\n          /**\n          * @param {?} className\n          * @return {?}\n          */\n          function (className) {\n            _this.renderer.addClass(_this.elementRef.nativeElement, className);\n          });\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"setAnimationDuration\",\n      value: function setAnimationDuration() {\n        if (Number(this.options['animationDuration']) != this.options['animationDurationDefault']) {\n          this.hostStyleTransition = 'opacity ' + this.options['animationDuration'] + 'ms';\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"setStyles\",\n      value: function setStyles() {\n        this.setZIndex();\n        this.setPointerEvents();\n        this.setAnimationDuration();\n        this.hostClassShadow = this.options['shadow'];\n        this.hostClassLight = this.isThemeLight;\n        this.hostStyleMaxWidth = this.options['maxWidth'] + \"px\";\n        this.hostStyleWidth = this.options['width'] ? this.options['width'] + \"px\" : '';\n      }\n    }, {\n      key: \"show\",\n      set: function set(value) {\n        if (value) {\n          this.setPosition();\n        }\n\n        this._show = this.hostClassShow = value;\n      }\n      /**\n       * @return {?}\n       */\n      ,\n      get: function get() {\n        return this._show;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"placement\",\n      get: function get() {\n        return this.data.options.placement;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"autoPlacement\",\n      get: function get() {\n        return this.data.options.autoPlacement;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"element\",\n      get: function get() {\n        return this.data.element;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"elementPosition\",\n      get: function get() {\n        return this.data.elementPosition;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"options\",\n      get: function get() {\n        return this.data.options;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this.data.value;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"tooltipOffset\",\n      get: function get() {\n        return Number(this.data.options.offset);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"isThemeLight\",\n      get: function get() {\n        return this.options['theme'] === 'light';\n      }\n    }]);\n\n    return TooltipComponent;\n  }();\n\n  TooltipComponent.ɵfac = function TooltipComponent_Factory(t) {\n    return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  TooltipComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TooltipComponent,\n    selectors: [[\"tooltip\"]],\n    hostAttrs: [1, \"tooltip\"],\n    hostVars: 20,\n    hostBindings: function TooltipComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"transitionend\", function TooltipComponent_transitionend_HostBindingHandler($event) {\n          return ctx.transitionEnd($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.hostStyleTop)(\"left\", ctx.hostStyleLeft)(\"z-index\", ctx.hostStyleZIndex)(\"pointer-events\", ctx.hostStylePointerEvents)(\"transition\", ctx.hostStyleTransition)(\"max-width\", ctx.hostStyleMaxWidth)(\"width\", ctx.hostStyleWidth);\n        ɵngcc0.ɵɵclassProp(\"tooltip-show\", ctx.hostClassShow)(\"tooltip-shadow\", ctx.hostClassShadow)(\"tooltip-light\", ctx.hostClassLight);\n      }\n    },\n    inputs: {\n      show: \"show\",\n      data: \"data\"\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[\"class\", \"tooltip-arrow\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"htmlOrStringTemplate\", \"\"], [1, \"tooltip-arrow\"], [4, \"ngTemplateOutlet\"], [3, \"innerHTML\"]],\n    template: function TooltipComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TooltipComponent_div_0_Template, 1, 0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, TooltipComponent_div_1_Template, 2, 1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, TooltipComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        var _r2 = ɵngcc0.ɵɵreference(3);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isThemeLight);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options[\"contentType\"] === \"template\")(\"ngIfElse\", _r2);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n    styles: [\"[_nghost-%COMP%]{max-width:200px;background-color:#000;color:#fff;text-align:center;border-radius:6px;padding:5px 8px;position:absolute;pointer-events:none;z-index:1000;display:block;opacity:0;-webkit-transition:opacity .3s;transition:opacity .3s;top:0;left:0}.tooltip-show[_nghost-%COMP%]{opacity:1}.tooltip-shadow[_nghost-%COMP%]{box-shadow:0 7px 15px -5px rgba(0,0,0,.4)}.tooltip-light.tooltip-shadow[_nghost-%COMP%]{box-shadow:0 5px 15px -5px rgba(0,0,0,.4)}.tooltip[_nghost-%COMP%]::after{content:\\\"\\\";position:absolute;border-style:solid}.tooltip-top[_nghost-%COMP%]::after{top:100%;left:50%;margin-left:-5px;border-width:5px;border-color:#000 transparent transparent}.tooltip-bottom[_nghost-%COMP%]::after{bottom:100%;left:50%;margin-left:-5px;border-width:5px;border-color:transparent transparent #000}.tooltip-left[_nghost-%COMP%]::after{top:50%;left:100%;margin-top:-5px;border-width:5px;border-color:transparent transparent transparent #000}.tooltip-right[_nghost-%COMP%]::after{top:50%;right:100%;margin-top:-5px;border-width:5px;border-color:transparent #000 transparent transparent}.tooltip-light[_nghost-%COMP%]::after{display:none}.tooltip-light[_nghost-%COMP%]{border:1px solid rgba(0,0,0,.06);background-color:#fff;color:#000}.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]{position:absolute;width:10px;height:10px;-webkit-transform:rotate(135deg);transform:rotate(135deg);background-color:rgba(0,0,0,.07)}.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]::after{background-color:#fff;content:\\\"\\\";display:block;position:absolute;width:10px;height:10px}.tooltip-top.tooltip-light[_nghost-%COMP%]{margin-top:-2px}.tooltip-top.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]{top:100%;left:50%;margin-top:-4px;margin-left:-5px;background:-webkit-gradient(linear,right top,left bottom,color-stop(50%,rgba(0,0,0,.07)),color-stop(50%,transparent));background:linear-gradient(to bottom left,rgba(0,0,0,.07) 50%,transparent 50%)}.tooltip-top.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]::after{top:1px;right:1px}.tooltip-bottom.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]{bottom:100%;left:50%;margin-bottom:-4px;margin-left:-5px;background:-webkit-gradient(linear,left bottom,right top,color-stop(50%,rgba(0,0,0,.1)),color-stop(50%,transparent));background:linear-gradient(to top right,rgba(0,0,0,.1) 50%,transparent 50%)}.tooltip-bottom.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]::after{top:-1px;right:-1px}.tooltip-left.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]{top:50%;left:100%;margin-top:-5px;margin-left:-4px;background:-webkit-gradient(linear,left top,right bottom,color-stop(50%,rgba(0,0,0,.07)),color-stop(50%,transparent));background:linear-gradient(to bottom right,rgba(0,0,0,.07) 50%,transparent 50%)}.tooltip-left.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]::after{top:1px;right:-1px}.tooltip-right.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]{top:50%;right:100%;margin-top:-5px;margin-right:-4px;background:-webkit-gradient(linear,right bottom,left top,color-stop(50%,rgba(0,0,0,.07)),color-stop(50%,transparent));background:linear-gradient(to top left,rgba(0,0,0,.07) 50%,transparent 50%)}.tooltip-right.tooltip-light[_nghost-%COMP%]   .tooltip-arrow[_ngcontent-%COMP%]::after{top:-1px;right:1px}\"]\n  });\n  return TooltipComponent;\n}();\n\nif (false) {\n  /** @type {?} */\n  TooltipComponent.prototype._show;\n  /** @type {?} */\n\n  TooltipComponent.prototype.events;\n  /** @type {?} */\n\n  TooltipComponent.prototype.data;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostStyleTop;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostStyleLeft;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostStyleZIndex;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostStyleTransition;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostStyleWidth;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostStyleMaxWidth;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostStylePointerEvents;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostClassShow;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostClassShadow;\n  /** @type {?} */\n\n  TooltipComponent.prototype.hostClassLight;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipComponent.prototype.elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipComponent.prototype.renderer;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/tooltip-options.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * This is not a real service, but it looks like it from the outside.\n * It's just an InjectionToken used to import the config (initOptions) object, provided from the outside\n * @type {?}\n */\n\n\nvar TooltipOptionsService = /*@__PURE__*/new InjectionToken('TooltipOptions');\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar defaultOptions = {\n  'placement': 'top',\n  'autoPlacement': true,\n  'contentType': 'string',\n  'showDelay': 0,\n  'hideDelay': 300,\n  'hideDelayMobile': 0,\n  'hideDelayTouchscreen': 0,\n  'zIndex': 0,\n  'animationDuration': 300,\n  'animationDurationDefault': 300,\n  'trigger': 'hover',\n  'tooltipClass': '',\n  'display': true,\n  'displayMobile': true,\n  'displayTouchscreen': true,\n  'shadow': true,\n  'theme': 'dark',\n  'offset': 8,\n  'maxWidth': '',\n  'id': false,\n  'hideDelayAfterClick': 2000\n};\n/** @type {?} */\n\nvar backwardCompatibilityOptions = {\n  'delay': 'showDelay',\n  'show-delay': 'showDelay',\n  'hide-delay': 'hideDelay',\n  'hide-delay-mobile': 'hideDelayTouchscreen',\n  'hideDelayMobile': 'hideDelayTouchscreen',\n  'z-index': 'zIndex',\n  'animation-duration': 'animationDuration',\n  'animation-duration-default': 'animationDurationDefault',\n  'tooltip-class': 'tooltipClass',\n  'display-mobile': 'displayTouchscreen',\n  'displayMobile': 'displayTouchscreen',\n  'max-width': 'maxWidth'\n};\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/tooltip.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\nfunction AdComponent() {}\n\nif (false) {\n  /** @type {?} */\n  AdComponent.prototype.data;\n  /** @type {?} */\n\n  AdComponent.prototype.show;\n  /** @type {?} */\n\n  AdComponent.prototype.close;\n  /** @type {?} */\n\n  AdComponent.prototype.events;\n}\n\nvar TooltipDirective = /*@__PURE__*/function () {\n  var TooltipDirective = /*#__PURE__*/function () {\n    /**\n     * @param {?} initOptions\n     * @param {?} elementRef\n     * @param {?} componentFactoryResolver\n     * @param {?} appRef\n     * @param {?} injector\n     */\n    function TooltipDirective(initOptions, elementRef, componentFactoryResolver, appRef, injector) {\n      _classCallCheck(this, TooltipDirective);\n\n      this.initOptions = initOptions;\n      this.elementRef = elementRef;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.appRef = appRef;\n      this.injector = injector;\n      this._showDelay = 0;\n      this._hideDelay = 300;\n      this._options = {};\n      this.events = new EventEmitter();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    _createClass(TooltipDirective, [{\n      key: \"onMouseEnter\",\n\n      /**\n       * @return {?}\n       */\n      value: function onMouseEnter() {\n        if (this.isDisplayOnHover == false) {\n          return;\n        }\n\n        this.show();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"onMouseLeave\",\n      value: function onMouseLeave() {\n        if (this.options['trigger'] === 'hover') {\n          this.destroyTooltip();\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"onClick\",\n      value: function onClick() {\n        var _this2 = this;\n\n        if (this.isDisplayOnClick == false) {\n          return;\n        }\n\n        this.show();\n        this.hideAfterClickTimeoutId = window.setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this2.destroyTooltip();\n        }, this.options['hideDelayAfterClick']);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n      /**\n       * @param {?} changes\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        this.initOptions = this.renameProperties(this.initOptions);\n        /** @type {?} */\n\n        var changedOptions = this.getProperties(changes);\n        changedOptions = this.renameProperties(changedOptions);\n        this.applyOptionsDefault(defaultOptions, changedOptions);\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.destroyTooltip({\n          fast: true\n        });\n\n        if (this.componentSubscribe) {\n          this.componentSubscribe.unsubscribe();\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"getShowDelay\",\n      value: function getShowDelay() {\n        return this.options['showDelay'];\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"getHideDelay\",\n      value: function getHideDelay() {\n        /** @type {?} */\n        var hideDelay = this.options['hideDelay'];\n        /** @type {?} */\n\n        var hideDelayTouchscreen = this.options['hideDelayTouchscreen'];\n        return this.isTouchScreen ? hideDelayTouchscreen : hideDelay;\n      }\n      /**\n       * @param {?} changes\n       * @return {?}\n       */\n\n    }, {\n      key: \"getProperties\",\n      value: function getProperties(changes) {\n        /** @type {?} */\n        var properties = {};\n\n        for (var prop in changes) {\n          if (prop !== 'options' && prop !== 'tooltipValue') {\n            properties[prop] = changes[prop].currentValue;\n          }\n\n          if (prop === 'options') {\n            properties = changes[prop].currentValue;\n          }\n        }\n\n        return properties;\n      }\n      /**\n       * @param {?} options\n       * @return {?}\n       */\n\n    }, {\n      key: \"renameProperties\",\n      value: function renameProperties(options) {\n        for (var prop in options) {\n          if (backwardCompatibilityOptions[prop]) {\n            options[backwardCompatibilityOptions[prop]] = options[prop];\n            delete options[prop];\n          }\n        }\n\n        return options;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"getElementPosition\",\n      value: function getElementPosition() {\n        this.elementPosition = this.elementRef.nativeElement.getBoundingClientRect();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"createTooltip\",\n      value: function createTooltip() {\n        var _this3 = this;\n\n        this.clearTimeouts();\n        this.getElementPosition();\n        this.createTimeoutId = window.setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this3.appendComponentToBody(TooltipComponent);\n        }, this.getShowDelay());\n        this.showTimeoutId = window.setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this3.showTooltipElem();\n        }, this.getShowDelay());\n      }\n      /**\n       * @param {?=} options\n       * @return {?}\n       */\n\n    }, {\n      key: \"destroyTooltip\",\n      value: function destroyTooltip() {\n        var _this4 = this;\n\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          fast: false\n        };\n        this.clearTimeouts();\n\n        if (this.isTooltipDestroyed == false) {\n          this.hideTimeoutId = window.setTimeout(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this4.hideTooltip();\n          }, options.fast ? 0 : this.getHideDelay());\n          this.destroyTimeoutId = window.setTimeout(\n          /**\n          * @return {?}\n          */\n          function () {\n            if (!_this4.componentRef || _this4.isTooltipDestroyed) {\n              return;\n            }\n\n            _this4.appRef.detachView(_this4.componentRef.hostView);\n\n            _this4.componentRef.destroy();\n\n            _this4.events.emit({\n              type: 'hidden',\n              position: _this4.tooltipPosition\n            });\n          }, options.fast ? 0 : this.destroyDelay);\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"showTooltipElem\",\n      value: function showTooltipElem() {\n        this.clearTimeouts();\n\n        /** @type {?} */\n        this.componentRef.instance.show = true;\n        this.events.emit({\n          type: 'show',\n          position: this.tooltipPosition\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"hideTooltip\",\n      value: function hideTooltip() {\n        if (!this.componentRef || this.isTooltipDestroyed) {\n          return;\n        }\n\n        /** @type {?} */\n        this.componentRef.instance.show = false;\n        this.events.emit({\n          type: 'hide',\n          position: this.tooltipPosition\n        });\n      }\n      /**\n       * @param {?} component\n       * @param {?=} data\n       * @return {?}\n       */\n\n    }, {\n      key: \"appendComponentToBody\",\n      value: function appendComponentToBody(component) {\n        var _this5 = this;\n\n        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.componentRef = this.componentFactoryResolver.resolveComponentFactory(component).create(this.injector);\n\n        /** @type {?} */\n        this.componentRef.instance.data = {\n          value: this.tooltipValue,\n          element: this.elementRef.nativeElement,\n          elementPosition: this.tooltipPosition,\n          options: this.options\n        };\n        this.appRef.attachView(this.componentRef.hostView);\n        /** @type {?} */\n\n        var domElem =\n        /** @type {?} */\n\n        /** @type {?} */\n        this.componentRef.hostView.rootNodes[0];\n        document.body.appendChild(domElem);\n        this.componentSubscribe =\n        /** @type {?} */\n        this.componentRef.instance.events.subscribe(\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        function (event) {\n          _this5.handleEvents(event);\n        });\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"clearTimeouts\",\n      value: function clearTimeouts() {\n        if (this.createTimeoutId) {\n          clearTimeout(this.createTimeoutId);\n        }\n\n        if (this.showTimeoutId) {\n          clearTimeout(this.showTimeoutId);\n        }\n\n        if (this.hideTimeoutId) {\n          clearTimeout(this.hideTimeoutId);\n        }\n\n        if (this.destroyTimeoutId) {\n          clearTimeout(this.destroyTimeoutId);\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"applyOptionsDefault\",\n\n      /**\n       * @param {?} defaultOptions\n       * @param {?} options\n       * @return {?}\n       */\n      value: function applyOptionsDefault(defaultOptions, options) {\n        this.options = Object.assign({}, defaultOptions, this.initOptions || {}, options);\n      }\n      /**\n       * @param {?} event\n       * @return {?}\n       */\n\n    }, {\n      key: \"handleEvents\",\n      value: function handleEvents(event) {\n        if (event.type === 'shown') {\n          this.events.emit({\n            type: 'shown',\n            position: this.tooltipPosition\n          });\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"show\",\n      value: function show() {\n        if (!this.componentRef || this.isTooltipDestroyed) {\n          this.createTooltip();\n        } else if (!this.isTooltipDestroyed) {\n          this.showTooltipElem();\n        }\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        this.destroyTooltip();\n      }\n    }, {\n      key: \"options\",\n      set: function set(value) {\n        if (value && defaultOptions) {\n          this._options = value;\n        }\n      }\n      /**\n       * @return {?}\n       */\n      ,\n      get: function get() {\n        return this._options;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"isTooltipDestroyed\",\n      get: function get() {\n        return this.componentRef && this.componentRef.hostView.destroyed;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"destroyDelay\",\n      get: function get() {\n        if (this._destroyDelay) {\n          return this._destroyDelay;\n        } else {\n          return Number(this.getHideDelay()) + Number(this.options['animationDuration']);\n        }\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        this._destroyDelay = value;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"tooltipPosition\",\n      get: function get() {\n        if (this.options['position']) {\n          return this.options['position'];\n        } else {\n          return this.elementPosition;\n        }\n      }\n    }, {\n      key: \"isDisplayOnHover\",\n      get: function get() {\n        if (this.options['display'] == false) {\n          return false;\n        }\n\n        if (this.options['displayTouchscreen'] == false && this.isTouchScreen) {\n          return false;\n        }\n\n        if (this.options['trigger'] !== 'hover') {\n          return false;\n        }\n\n        return true;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"isDisplayOnClick\",\n      get: function get() {\n        if (this.options['display'] == false) {\n          return false;\n        }\n\n        if (this.options['displayTouchscreen'] == false && this.isTouchScreen) {\n          return false;\n        }\n\n        if (this.options['trigger'] != 'click') {\n          return false;\n        }\n\n        return true;\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"isTouchScreen\",\n      get: function get() {\n        /** @type {?} */\n        var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n        /** @type {?} */\n\n        var mq =\n        /**\n        * @param {?} query\n        * @return {?}\n        */\n        function mq(query) {\n          return window.matchMedia(query).matches;\n        };\n\n        if ('ontouchstart' in window) {\n          return true;\n        } // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n        // https://git.io/vznFH\n\n        /** @type {?} */\n\n\n        var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n        return mq(query);\n      }\n    }]);\n\n    return TooltipDirective;\n  }();\n\n  TooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n    return new (t || TooltipDirective)(ɵngcc0.ɵɵdirectiveInject(TooltipOptionsService, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector));\n  };\n\n  TooltipDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TooltipDirective,\n    selectors: [[\"\", \"tooltip\", \"\"]],\n    hostBindings: function TooltipDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function TooltipDirective_focusin_HostBindingHandler() {\n          return ctx.onMouseEnter();\n        })(\"mouseenter\", function TooltipDirective_mouseenter_HostBindingHandler() {\n          return ctx.onMouseEnter();\n        })(\"focusout\", function TooltipDirective_focusout_HostBindingHandler() {\n          return ctx.onMouseLeave();\n        })(\"mouseleave\", function TooltipDirective_mouseleave_HostBindingHandler() {\n          return ctx.onMouseLeave();\n        })(\"click\", function TooltipDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    },\n    inputs: {\n      options: \"options\",\n      tooltipValue: [\"tooltip\", \"tooltipValue\"],\n      placement: \"placement\",\n      autoPlacement: \"autoPlacement\",\n      contentType: [\"content-type\", \"contentType\"],\n      hideDelayMobile: [\"hide-delay-mobile\", \"hideDelayMobile\"],\n      hideDelayTouchscreen: \"hideDelayTouchscreen\",\n      zIndex: [\"z-index\", \"zIndex\"],\n      animationDuration: [\"animation-duration\", \"animationDuration\"],\n      trigger: \"trigger\",\n      tooltipClass: [\"tooltip-class\", \"tooltipClass\"],\n      display: \"display\",\n      displayMobile: [\"display-mobile\", \"displayMobile\"],\n      displayTouchscreen: \"displayTouchscreen\",\n      shadow: \"shadow\",\n      theme: \"theme\",\n      offset: \"offset\",\n      width: \"width\",\n      maxWidth: [\"max-width\", \"maxWidth\"],\n      id: \"id\",\n      showDelay: [\"show-delay\", \"showDelay\"],\n      hideDelay: [\"hide-delay\", \"hideDelay\"],\n      hideDelayAfterClick: \"hideDelayAfterClick\",\n      pointerEvents: \"pointerEvents\",\n      position: \"position\"\n    },\n    outputs: {\n      events: \"events\"\n    },\n    exportAs: [\"tooltip\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return TooltipDirective;\n}();\n\nif (false) {\n  /** @type {?} */\n  TooltipDirective.prototype.hideTimeoutId;\n  /** @type {?} */\n\n  TooltipDirective.prototype.destroyTimeoutId;\n  /** @type {?} */\n\n  TooltipDirective.prototype.hideAfterClickTimeoutId;\n  /** @type {?} */\n\n  TooltipDirective.prototype.createTimeoutId;\n  /** @type {?} */\n\n  TooltipDirective.prototype.showTimeoutId;\n  /** @type {?} */\n\n  TooltipDirective.prototype.componentRef;\n  /** @type {?} */\n\n  TooltipDirective.prototype.elementPosition;\n  /** @type {?} */\n\n  TooltipDirective.prototype._showDelay;\n  /** @type {?} */\n\n  TooltipDirective.prototype._hideDelay;\n  /** @type {?} */\n\n  TooltipDirective.prototype._id;\n  /** @type {?} */\n\n  TooltipDirective.prototype._options;\n  /** @type {?} */\n\n  TooltipDirective.prototype._defaultOptions;\n  /** @type {?} */\n\n  TooltipDirective.prototype._destroyDelay;\n  /** @type {?} */\n\n  TooltipDirective.prototype.componentSubscribe;\n  /** @type {?} */\n\n  TooltipDirective.prototype.tooltipValue;\n  /** @type {?} */\n\n  TooltipDirective.prototype.placement;\n  /** @type {?} */\n\n  TooltipDirective.prototype.autoPlacement;\n  /** @type {?} */\n\n  TooltipDirective.prototype.contentType;\n  /** @type {?} */\n\n  TooltipDirective.prototype.hideDelayMobile;\n  /** @type {?} */\n\n  TooltipDirective.prototype.hideDelayTouchscreen;\n  /** @type {?} */\n\n  TooltipDirective.prototype.zIndex;\n  /** @type {?} */\n\n  TooltipDirective.prototype.animationDuration;\n  /** @type {?} */\n\n  TooltipDirective.prototype.trigger;\n  /** @type {?} */\n\n  TooltipDirective.prototype.tooltipClass;\n  /** @type {?} */\n\n  TooltipDirective.prototype.display;\n  /** @type {?} */\n\n  TooltipDirective.prototype.displayMobile;\n  /** @type {?} */\n\n  TooltipDirective.prototype.displayTouchscreen;\n  /** @type {?} */\n\n  TooltipDirective.prototype.shadow;\n  /** @type {?} */\n\n  TooltipDirective.prototype.theme;\n  /** @type {?} */\n\n  TooltipDirective.prototype.offset;\n  /** @type {?} */\n\n  TooltipDirective.prototype.width;\n  /** @type {?} */\n\n  TooltipDirective.prototype.maxWidth;\n  /** @type {?} */\n\n  TooltipDirective.prototype.id;\n  /** @type {?} */\n\n  TooltipDirective.prototype.showDelay;\n  /** @type {?} */\n\n  TooltipDirective.prototype.hideDelay;\n  /** @type {?} */\n\n  TooltipDirective.prototype.hideDelayAfterClick;\n  /** @type {?} */\n\n  TooltipDirective.prototype.pointerEvents;\n  /** @type {?} */\n\n  TooltipDirective.prototype.position;\n  /** @type {?} */\n\n  TooltipDirective.prototype.events;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype.initOptions;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype.elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype.componentFactoryResolver;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype.appRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TooltipDirective.prototype.injector;\n}\n\nvar TooltipModule = /*@__PURE__*/function () {\n  var TooltipModule = /*#__PURE__*/function () {\n    function TooltipModule() {\n      _classCallCheck(this, TooltipModule);\n    }\n\n    _createClass(TooltipModule, null, [{\n      key: \"forRoot\",\n\n      /**\n       * @param {?} initOptions\n       * @return {?}\n       */\n      value: function forRoot(initOptions) {\n        return {\n          ngModule: TooltipModule,\n          providers: [{\n            provide: TooltipOptionsService,\n            useValue: initOptions\n          }]\n        };\n      }\n    }]);\n\n    return TooltipModule;\n  }();\n\n  TooltipModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TooltipModule\n  });\n  TooltipModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    factory: function TooltipModule_Factory(t) {\n      return new (t || TooltipModule)();\n    },\n    imports: [[CommonModule]]\n  });\n  return TooltipModule;\n}();\n/*@__PURE__*/\n\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TooltipModule, {\n    declarations: function declarations() {\n      return [TooltipDirective, TooltipComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [TooltipDirective];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/tooltip-options.interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction TooltipOptions() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  TooltipOptions.prototype.placement;\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.autoPlacement;\n  /* Skipping unnamed member:\n  'content-type'?: 'string' | 'html' | 'template';*/\n\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.delay;\n  /* Skipping unnamed member:\n  'show-delay'?: number;*/\n\n  /* Skipping unnamed member:\n  'hide-delay'?: number;*/\n\n  /* Skipping unnamed member:\n  'hide-delay-mobile'?: number;*/\n\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.hideDelayTouchscreen;\n  /* Skipping unnamed member:\n  'z-index'?: number;*/\n\n  /* Skipping unnamed member:\n  'animation-duration'?: number;*/\n\n  /* Skipping unnamed member:\n  'animation-duration-default'?: number;*/\n\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.trigger;\n  /* Skipping unnamed member:\n  'tooltip-class'?: string;*/\n\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.display;\n  /* Skipping unnamed member:\n  'display-mobile'?: boolean;*/\n\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.displayTouchscreen;\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.shadow;\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.theme;\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.offset;\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.width;\n  /* Skipping unnamed member:\n  'max-width'?: number;*/\n\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.id;\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.hideDelayAfterClick;\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.pointerEvents;\n  /** @type {?|undefined} */\n\n  TooltipOptions.prototype.position;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng2-tooltip-directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { TooltipComponent, TooltipDirective, TooltipModule, TooltipOptionsService as ɵa };","map":null,"metadata":{},"sourceType":"module"}