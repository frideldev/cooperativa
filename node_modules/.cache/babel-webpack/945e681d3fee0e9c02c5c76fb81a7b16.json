{"ast":null,"code":"import _get from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _toConsumableArray from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _inherits from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Sitemym/frontend04/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license Angular v7.2.13\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵparseCookieValue, DOCUMENT, PlatformLocation, isPlatformServer, ɵPLATFORM_BROWSER_ID, CommonModule } from '@angular/common';\nimport { ɵglobal, Injectable, Inject, InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, NgProbeToken, Optional, ApplicationRef, NgZone, getDebugNode, ViewEncapsulation, APP_ID, RendererStyleFlags2, PLATFORM_ID, ɵConsole, SecurityContext, ɵ_sanitizeHtml, ɵ_sanitizeStyle, ɵ_sanitizeUrl, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ErrorHandler, ɵAPP_ROOT, RendererFactory2, Testability, NgModule, ApplicationModule, SkipSelf, inject, defineInjectable, Version } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nvar _DOM =\n/** @type {?} */\nnull;\n/**\n * @return {?}\n */\n\nfunction getDOM() {\n  return _DOM;\n}\n/**\n * @param {?} adapter\n * @return {?}\n */\n\n\nfunction setRootDomAdapter(adapter) {\n  if (!_DOM) {\n    _DOM = adapter;\n  }\n}\n/* tslint:disable:requireParameterType */\n\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\n\n\nvar DomAdapter = /*#__PURE__*/function () {\n  function DomAdapter() {\n    _classCallCheck(this, DomAdapter);\n\n    this.resourceLoaderType =\n    /** @type {?} */\n    null;\n  }\n  /**\n   * Maps attribute names to their corresponding property names for cases\n   * where attribute name doesn't match property name.\n   * @return {?}\n   */\n\n\n  _createClass(DomAdapter, [{\n    key: \"attrToPropMap\",\n    get: function get() {\n      return this._attrToPropMap;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._attrToPropMap = value;\n    }\n  }]);\n\n  return DomAdapter;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\n\n\nvar GenericBrowserDomAdapter = /*#__PURE__*/function (_DomAdapter) {\n  _inherits(GenericBrowserDomAdapter, _DomAdapter);\n\n  var _super = _createSuper(GenericBrowserDomAdapter);\n\n  function GenericBrowserDomAdapter() {\n    var _this;\n\n    _classCallCheck(this, GenericBrowserDomAdapter);\n\n    _this = _super.call(this);\n    _this._animationPrefix = null;\n    _this._transitionEnd = null;\n\n    try {\n      /** @type {?} */\n      var element = _this.createElement('div', document);\n\n      if (_this.getStyle(element, 'animationName') != null) {\n        _this._animationPrefix = '';\n      } else {\n        /** @type {?} */\n        var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (_this.getStyle(element, domPrefixes[i] + 'AnimationName') != null) {\n            _this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n            break;\n          }\n        }\n      }\n      /** @type {?} */\n\n\n      var transEndEventNames = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend'\n      };\n      Object.keys(transEndEventNames).forEach(function (key) {\n        if (_this.getStyle(element, key) != null) {\n          _this._transitionEnd = transEndEventNames[key];\n        }\n      });\n    } catch (_a) {\n      _this._animationPrefix = null;\n      _this._transitionEnd = null;\n    }\n\n    return _this;\n  }\n  /**\n   * @param {?} el\n   * @return {?}\n   */\n\n\n  _createClass(GenericBrowserDomAdapter, [{\n    key: \"getDistributedNodes\",\n    value: function getDistributedNodes(el) {\n      return (\n        /** @type {?} */\n        el.getDistributedNodes()\n      );\n    }\n    /**\n     * @param {?} el\n     * @param {?} baseUrl\n     * @param {?} href\n     * @return {?}\n     */\n\n  }, {\n    key: \"resolveAndSetHref\",\n    value: function resolveAndSetHref(el, baseUrl, href) {\n      el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"supportsDOMEvents\",\n    value: function supportsDOMEvents() {\n      return true;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"supportsNativeShadowDOM\",\n    value: function supportsNativeShadowDOM() {\n      return typeof\n      /** @type {?} */\n      document.body.createShadowRoot === 'function';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getAnimationPrefix\",\n    value: function getAnimationPrefix() {\n      return this._animationPrefix ? this._animationPrefix : '';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getTransitionEnd\",\n    value: function getTransitionEnd() {\n      return this._transitionEnd ? this._transitionEnd : '';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"supportsAnimation\",\n    value: function supportsAnimation() {\n      return this._animationPrefix != null && this._transitionEnd != null;\n    }\n  }]);\n\n  return GenericBrowserDomAdapter;\n}(DomAdapter);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar _attrToPropMap = {\n  'class': 'className',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex'\n};\n/** @type {?} */\n\nvar DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\n/** @type {?} */\n\nvar _keyMap = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n}; // There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\n\n/** @type {?} */\n\nvar _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n/** @type {?} */\n\nvar nodeContains;\n\nif (ɵglobal['Node']) {\n  nodeContains = ɵglobal['Node'].prototype.contains || function (node) {\n    return !!(this.compareDocumentPosition(node) & 16);\n  };\n}\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\n\n\nvar BrowserDomAdapter = /*#__PURE__*/function (_GenericBrowserDomAda) {\n  _inherits(BrowserDomAdapter, _GenericBrowserDomAda);\n\n  var _super2 = _createSuper(BrowserDomAdapter);\n\n  function BrowserDomAdapter() {\n    _classCallCheck(this, BrowserDomAdapter);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BrowserDomAdapter, [{\n    key: \"parse\",\n\n    /**\n     * @param {?} templateHtml\n     * @return {?}\n     */\n    value: function parse(templateHtml) {\n      throw new Error('parse not implemented');\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasProperty\",\n\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    value: function hasProperty(element, name) {\n      return name in element;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      /** @type {?} */\n      el[name] = value;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"getProperty\",\n    value: function getProperty(el, name) {\n      return (\n        /** @type {?} */\n        el[name]\n      );\n    }\n    /**\n     * @param {?} el\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n\n  }, {\n    key: \"invoke\",\n    value: function invoke(el, methodName, args) {\n      /** @type {?} */\n      el[methodName].apply(el, _toConsumableArray(args));\n    } // TODO(tbosch): move this into a separate environment class once we have it\n\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n\n  }, {\n    key: \"logError\",\n    value: function logError(error) {\n      if (window.console) {\n        if (console.error) {\n          console.error(error);\n        } else {\n          console.log(error);\n        }\n      }\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n\n  }, {\n    key: \"log\",\n    value: function log(error) {\n      if (window.console) {\n        window.console.log && window.console.log(error);\n      }\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n\n  }, {\n    key: \"logGroup\",\n    value: function logGroup(error) {\n      if (window.console) {\n        window.console.group && window.console.group(error);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"logGroupEnd\",\n    value: function logGroupEnd() {\n      if (window.console) {\n        window.console.groupEnd && window.console.groupEnd();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"contains\",\n\n    /**\n     * @param {?} nodeA\n     * @param {?} nodeB\n     * @return {?}\n     */\n    value: function contains(nodeA, nodeB) {\n      return nodeContains.call(nodeA, nodeB);\n    }\n    /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n\n  }, {\n    key: \"querySelector\",\n    value: function querySelector(el, selector) {\n      return el.querySelector(selector);\n    }\n    /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n\n  }, {\n    key: \"querySelectorAll\",\n    value: function querySelectorAll(el, selector) {\n      return el.querySelectorAll(selector);\n    }\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(el, evt, listener) {\n      el.addEventListener(evt, listener, false);\n    }\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n\n  }, {\n    key: \"onAndCancel\",\n    value: function onAndCancel(el, evt, listener) {\n      el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of\n      // https://code.google.com/p/dart/issues/detail?id=17406\n\n      return function () {\n        el.removeEventListener(evt, listener, false);\n      };\n    }\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @return {?}\n     */\n\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(el, evt) {\n      el.dispatchEvent(evt);\n    }\n    /**\n     * @param {?} eventType\n     * @return {?}\n     */\n\n  }, {\n    key: \"createMouseEvent\",\n    value: function createMouseEvent(eventType) {\n      /** @type {?} */\n      var evt = this.getDefaultDocument().createEvent('MouseEvent');\n      evt.initEvent(eventType, true, true);\n      return evt;\n    }\n    /**\n     * @param {?} eventType\n     * @return {?}\n     */\n\n  }, {\n    key: \"createEvent\",\n    value: function createEvent(eventType) {\n      /** @type {?} */\n      var evt = this.getDefaultDocument().createEvent('Event');\n      evt.initEvent(eventType, true, true);\n      return evt;\n    }\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault(evt) {\n      evt.preventDefault();\n      evt.returnValue = false;\n    }\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n\n  }, {\n    key: \"isPrevented\",\n    value: function isPrevented(evt) {\n      return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getInnerHTML\",\n    value: function getInnerHTML(el) {\n      return el.innerHTML;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getTemplateContent\",\n    value: function getTemplateContent(el) {\n      return 'content' in el && this.isTemplateElement(el) ?\n      /** @type {?} */\n      el.content : null;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getOuterHTML\",\n    value: function getOuterHTML(el) {\n      return el.outerHTML;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"nodeName\",\n    value: function nodeName(node) {\n      return node.nodeName;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"nodeValue\",\n    value: function nodeValue(node) {\n      return node.nodeValue;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"type\",\n    value: function type(node) {\n      return node.type;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"content\",\n    value: function content(node) {\n      if (this.hasProperty(node, 'content')) {\n        return (\n          /** @type {?} */\n          node.content\n        );\n      } else {\n        return node;\n      }\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"firstChild\",\n    value: function firstChild(el) {\n      return el.firstChild;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(el) {\n      return el.nextSibling;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"parentElement\",\n    value: function parentElement(el) {\n      return el.parentNode;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"childNodes\",\n    value: function childNodes(el) {\n      return el.childNodes;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"childNodesAsList\",\n    value: function childNodesAsList(el) {\n      /** @type {?} */\n      var childNodes = el.childNodes;\n      /** @type {?} */\n\n      var res = new Array(childNodes.length);\n\n      for (var i = 0; i < childNodes.length; i++) {\n        res[i] = childNodes[i];\n      }\n\n      return res;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearNodes\",\n    value: function clearNodes(el) {\n      while (el.firstChild) {\n        el.removeChild(el.firstChild);\n      }\n    }\n    /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(el, node) {\n      el.appendChild(node);\n    }\n    /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(el, node) {\n      el.removeChild(node);\n    }\n    /**\n     * @param {?} el\n     * @param {?} newChild\n     * @param {?} oldChild\n     * @return {?}\n     */\n\n  }, {\n    key: \"replaceChild\",\n    value: function replaceChild(el, newChild, oldChild) {\n      el.replaceChild(newChild, oldChild);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n\n      return node;\n    }\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, ref, node) {\n      parent.insertBefore(node, ref);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} nodes\n     * @return {?}\n     */\n\n  }, {\n    key: \"insertAllBefore\",\n    value: function insertAllBefore(parent, ref, nodes) {\n      nodes.forEach(function (n) {\n        return parent.insertBefore(n, ref);\n      });\n    }\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(parent, ref, node) {\n      parent.insertBefore(node, ref.nextSibling);\n    }\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setInnerHTML\",\n    value: function setInnerHTML(el, value) {\n      el.innerHTML = value;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getText\",\n    value: function getText(el) {\n      return el.textContent;\n    }\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setText\",\n    value: function setText(el, value) {\n      el.textContent = value;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue(el) {\n      return el.value;\n    }\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(el, value) {\n      el.value = value;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getChecked\",\n    value: function getChecked(el) {\n      return el.checked;\n    }\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setChecked\",\n    value: function setChecked(el, value) {\n      el.checked = value;\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n\n  }, {\n    key: \"createComment\",\n    value: function createComment(text) {\n      return this.getDefaultDocument().createComment(text);\n    }\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n\n  }, {\n    key: \"createTemplate\",\n    value: function createTemplate(html) {\n      /** @type {?} */\n      var t = this.getDefaultDocument().createElement('template');\n      t.innerHTML = html;\n      return t;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n\n  }, {\n    key: \"createElement\",\n    value: function createElement(tagName, doc) {\n      doc = doc || this.getDefaultDocument();\n      return doc.createElement(tagName);\n    }\n    /**\n     * @param {?} ns\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n\n  }, {\n    key: \"createElementNS\",\n    value: function createElementNS(ns, tagName, doc) {\n      doc = doc || this.getDefaultDocument();\n      return doc.createElementNS(ns, tagName);\n    }\n    /**\n     * @param {?} text\n     * @param {?=} doc\n     * @return {?}\n     */\n\n  }, {\n    key: \"createTextNode\",\n    value: function createTextNode(text, doc) {\n      doc = doc || this.getDefaultDocument();\n      return doc.createTextNode(text);\n    }\n    /**\n     * @param {?} attrName\n     * @param {?} attrValue\n     * @param {?=} doc\n     * @return {?}\n     */\n\n  }, {\n    key: \"createScriptTag\",\n    value: function createScriptTag(attrName, attrValue, doc) {\n      doc = doc || this.getDefaultDocument();\n      /** @type {?} */\n\n      var el =\n      /** @type {?} */\n      doc.createElement('SCRIPT');\n      el.setAttribute(attrName, attrValue);\n      return el;\n    }\n    /**\n     * @param {?} css\n     * @param {?=} doc\n     * @return {?}\n     */\n\n  }, {\n    key: \"createStyleElement\",\n    value: function createStyleElement(css, doc) {\n      doc = doc || this.getDefaultDocument();\n      /** @type {?} */\n\n      var style =\n      /** @type {?} */\n      doc.createElement('style');\n      this.appendChild(style, this.createTextNode(css, doc));\n      return style;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"createShadowRoot\",\n    value: function createShadowRoot(el) {\n      return (\n        /** @type {?} */\n        el.createShadowRoot()\n      );\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getShadowRoot\",\n    value: function getShadowRoot(el) {\n      return (\n        /** @type {?} */\n        el.shadowRoot\n      );\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getHost\",\n    value: function getHost(el) {\n      return (\n        /** @type {?} */\n        el.host\n      );\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone(node) {\n      return node.cloneNode(true);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"getElementsByClassName\",\n    value: function getElementsByClassName(element, name) {\n      return element.getElementsByClassName(name);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"getElementsByTagName\",\n    value: function getElementsByTagName(element, name) {\n      return element.getElementsByTagName(name);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"classList\",\n    value: function classList(element) {\n      return Array.prototype.slice.call(element.classList, 0);\n    }\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(element, className) {\n      element.classList.add(className);\n    }\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(element, className) {\n      element.classList.remove(className);\n    }\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(element, className) {\n      return element.classList.contains(className);\n    }\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(element, styleName, styleValue) {\n      element.style[styleName] = styleValue;\n    }\n    /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(element, stylename) {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      element.style[stylename] = '';\n    }\n    /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(element, stylename) {\n      return element.style[stylename];\n    }\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasStyle\",\n    value: function hasStyle(element, styleName, styleValue) {\n      /** @type {?} */\n      var value = this.getStyle(element, styleName) || '';\n      return styleValue ? value == styleValue : value.length > 0;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"tagName\",\n    value: function tagName(element) {\n      return element.tagName;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"attributeMap\",\n    value: function attributeMap(element) {\n      /** @type {?} */\n      var res = new Map();\n      /** @type {?} */\n\n      var elAttrs = element.attributes;\n\n      for (var i = 0; i < elAttrs.length; i++) {\n        /** @type {?} */\n        var attrib = elAttrs.item(i);\n        res.set(attrib.name, attrib.value);\n      }\n\n      return res;\n    }\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(element, attribute) {\n      return element.hasAttribute(attribute);\n    }\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} attribute\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasAttributeNS\",\n    value: function hasAttributeNS(element, ns, attribute) {\n      return element.hasAttributeNS(ns, attribute);\n    }\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(element, attribute) {\n      return element.getAttribute(attribute);\n    }\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"getAttributeNS\",\n    value: function getAttributeNS(element, ns, name) {\n      return element.getAttributeNS(ns, name);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(element, name, value) {\n      element.setAttribute(name, value);\n    }\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setAttributeNS\",\n    value: function setAttributeNS(element, ns, name, value) {\n      element.setAttributeNS(ns, name, value);\n    }\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(element, attribute) {\n      element.removeAttribute(attribute);\n    }\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeAttributeNS\",\n    value: function removeAttributeNS(element, ns, name) {\n      element.removeAttributeNS(ns, name);\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"templateAwareRoot\",\n    value: function templateAwareRoot(el) {\n      return this.isTemplateElement(el) ? this.content(el) : el;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"createHtmlDocument\",\n    value: function createHtmlDocument() {\n      return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDefaultDocument\",\n    value: function getDefaultDocument() {\n      return document;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getBoundingClientRect\",\n    value: function getBoundingClientRect(el) {\n      try {\n        return el.getBoundingClientRect();\n      } catch (_a) {\n        return {\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          width: 0,\n          height: 0\n        };\n      }\n    }\n    /**\n     * @param {?} doc\n     * @return {?}\n     */\n\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(doc) {\n      return doc.title;\n    }\n    /**\n     * @param {?} doc\n     * @param {?} newTitle\n     * @return {?}\n     */\n\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(doc, newTitle) {\n      doc.title = newTitle || '';\n    }\n    /**\n     * @param {?} n\n     * @param {?} selector\n     * @return {?}\n     */\n\n  }, {\n    key: \"elementMatches\",\n    value: function elementMatches(n, selector) {\n      if (this.isElementNode(n)) {\n        return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n      }\n\n      return false;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"isTemplateElement\",\n    value: function isTemplateElement(el) {\n      return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"isTextNode\",\n    value: function isTextNode(node) {\n      return node.nodeType === Node.TEXT_NODE;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"isCommentNode\",\n    value: function isCommentNode(node) {\n      return node.nodeType === Node.COMMENT_NODE;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"isElementNode\",\n    value: function isElementNode(node) {\n      return node.nodeType === Node.ELEMENT_NODE;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasShadowRoot\",\n    value: function hasShadowRoot(node) {\n      return node.shadowRoot != null && node instanceof HTMLElement;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"isShadowRoot\",\n    value: function isShadowRoot(node) {\n      return node instanceof DocumentFragment;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"importIntoDoc\",\n    value: function importIntoDoc(node) {\n      return document.importNode(this.templateAwareRoot(node), true);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"adoptNode\",\n    value: function adoptNode(node) {\n      return document.adoptNode(node);\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"getHref\",\n    value: function getHref(el) {\n      return (\n        /** @type {?} */\n        el.getAttribute('href')\n      );\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"getEventKey\",\n    value: function getEventKey(event) {\n      /** @type {?} */\n      var key = event.key;\n\n      if (key == null) {\n        key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n        // Safari cf\n        // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\n        if (key == null) {\n          return 'Unidentified';\n        }\n\n        if (key.startsWith('U+')) {\n          key = String.fromCharCode(parseInt(key.substring(2), 16));\n\n          if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n            // There is a bug in Chrome for numeric keypad keys:\n            // https://code.google.com/p/chromium/issues/detail?id=155654\n            // 1, 2, 3 ... are reported as A, B, C ...\n            key =\n            /** @type {?} */\n            _chromeNumKeyPadMap[key];\n          }\n        }\n      }\n\n      return _keyMap[key] || key;\n    }\n    /**\n     * @param {?} doc\n     * @param {?} target\n     * @return {?}\n     */\n\n  }, {\n    key: \"getGlobalEventTarget\",\n    value: function getGlobalEventTarget(doc, target) {\n      if (target === 'window') {\n        return window;\n      }\n\n      if (target === 'document') {\n        return doc;\n      }\n\n      if (target === 'body') {\n        return doc.body;\n      }\n\n      return null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getHistory\",\n    value: function getHistory() {\n      return window.history;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getLocation\",\n    value: function getLocation() {\n      return window.location;\n    }\n    /**\n     * @param {?} doc\n     * @return {?}\n     */\n\n  }, {\n    key: \"getBaseHref\",\n    value: function getBaseHref(doc) {\n      /** @type {?} */\n      var href = getBaseElementHref();\n      return href == null ? null : relativePath(href);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"resetBaseElement\",\n    value: function resetBaseElement() {\n      baseElement = null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return window.navigator.userAgent;\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setData\",\n    value: function setData(element, name, value) {\n      this.setAttribute(element, 'data-' + name, value);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"getData\",\n    value: function getData(element, name) {\n      return this.getAttribute(element, 'data-' + name);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"getComputedStyle\",\n    value: function (_getComputedStyle) {\n      function getComputedStyle(_x) {\n        return _getComputedStyle.apply(this, arguments);\n      }\n\n      getComputedStyle.toString = function () {\n        return _getComputedStyle.toString();\n      };\n\n      return getComputedStyle;\n    }(function (element) {\n      return getComputedStyle(element);\n    }) // TODO(tbosch): move this into a separate environment class once we have it\n\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"supportsWebAnimation\",\n    value: function supportsWebAnimation() {\n      return typeof\n      /** @type {?} */\n      Element.prototype['animate'] === 'function';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"performanceNow\",\n    value: function performanceNow() {\n      // performance.now() is not available in all browsers, see\n      // http://caniuse.com/#search=performance.now\n      return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"supportsCookies\",\n    value: function supportsCookies() {\n      return true;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(name) {\n      return ɵparseCookieValue(document.cookie, name);\n    }\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setCookie\",\n    value: function setCookie(name, value) {\n      // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n      // not clear other cookies.\n      document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    }\n  }, {\n    key: \"attrToPropMap\",\n    get: function get() {\n      return _attrToPropMap;\n    }\n  }], [{\n    key: \"makeCurrent\",\n    value: function makeCurrent() {\n      setRootDomAdapter(new BrowserDomAdapter());\n    }\n  }]);\n\n  return BrowserDomAdapter;\n}(GenericBrowserDomAdapter);\n/** @type {?} */\n\n\nvar baseElement = null;\n/**\n * @return {?}\n */\n\nfunction getBaseElementHref() {\n  if (!baseElement) {\n    baseElement =\n    /** @type {?} */\n    document.querySelector('base');\n\n    if (!baseElement) {\n      return null;\n    }\n  }\n\n  return baseElement.getAttribute('href');\n} // based on urlUtils.js in AngularJS 1\n\n/** @type {?} */\n\n\nvar urlParsingNode;\n/**\n * @param {?} url\n * @return {?}\n */\n\nfunction relativePath(url) {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n\n  urlParsingNode.setAttribute('href', url);\n  return urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @deprecated import from `\\@angular/common` instead.\n * \\@publicApi\n * @type {?}\n */\n\n\nvar DOCUMENT$1 = DOCUMENT;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @return {?}\n */\n\nfunction supportsState() {\n  return !!window.history.pushState;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n */\n\n\nvar BrowserPlatformLocation = /*#__PURE__*/function (_PlatformLocation) {\n  _inherits(BrowserPlatformLocation, _PlatformLocation);\n\n  var _super3 = _createSuper(BrowserPlatformLocation);\n\n  /**\n   * @param {?} _doc\n   */\n  function BrowserPlatformLocation(_doc) {\n    var _this2;\n\n    _classCallCheck(this, BrowserPlatformLocation);\n\n    _this2 = _super3.call(this);\n    _this2._doc = _doc;\n\n    _this2._init();\n\n    return _this2;\n  } // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n\n  /**\n   * \\@internal\n   * @return {?}\n   */\n\n\n  _createClass(BrowserPlatformLocation, [{\n    key: \"_init\",\n    value: function _init() {\n      /** @type {?} */\n      this.location = getDOM().getLocation();\n      this._history = getDOM().getHistory();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getBaseHrefFromDOM\",\n    value: function getBaseHrefFromDOM() {\n      return (\n        /** @type {?} */\n        getDOM().getBaseHref(this._doc)\n      );\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"onPopState\",\n    value: function onPopState(fn) {\n      getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"onHashChange\",\n    value: function onHashChange(fn) {\n      getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"pushState\",\n\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    value: function pushState(state, title, url) {\n      if (supportsState()) {\n        this._history.pushState(state, title, url);\n      } else {\n        this.location.hash = url;\n      }\n    }\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n\n  }, {\n    key: \"replaceState\",\n    value: function replaceState(state, title, url) {\n      if (supportsState()) {\n        this._history.replaceState(state, title, url);\n      } else {\n        this.location.hash = url;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"forward\",\n    value: function forward() {\n      this._history.forward();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      this._history.back();\n    }\n  }, {\n    key: \"pathname\",\n    get: function get() {\n      return this.location.pathname;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n\n    /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    set: function set(newPath) {\n      this.location.pathname = newPath;\n    }\n  }, {\n    key: \"search\",\n    get: function get() {\n      return this.location.search;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return this.location.hash;\n    }\n  }]);\n\n  return BrowserPlatformLocation;\n}(PlatformLocation);\n\nBrowserPlatformLocation.ɵfac = function BrowserPlatformLocation_Factory(t) {\n  return new (t || BrowserPlatformLocation)(ɵngcc0.ɵɵinject(DOCUMENT$1));\n};\n\nBrowserPlatformLocation.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: BrowserPlatformLocation,\n  factory: BrowserPlatformLocation.ɵfac\n});\n/** @nocollapse */\n\nBrowserPlatformLocation.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT$1]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BrowserPlatformLocation, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT$1]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n * @type {?}\n */\n\n\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n/**\n * @param {?} transitionId\n * @param {?} document\n * @param {?} injector\n * @return {?}\n */\n\nfunction appInitializerFactory(transitionId, document, injector) {\n  return function () {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(function () {\n      /** @type {?} */\n      var dom = getDOM();\n      /** @type {?} */\n\n      var styles = Array.prototype.slice.apply(dom.querySelectorAll(document, \"style[ng-transition]\"));\n      styles.filter(function (el) {\n        return dom.getAttribute(el, 'ng-transition') === transitionId;\n      }).forEach(function (el) {\n        return dom.remove(el);\n      });\n    });\n  };\n}\n/** @type {?} */\n\n\nvar SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT$1, Injector],\n  multi: true\n}];\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar BrowserGetTestability = /*#__PURE__*/function () {\n  function BrowserGetTestability() {\n    _classCallCheck(this, BrowserGetTestability);\n  }\n\n  _createClass(BrowserGetTestability, [{\n    key: \"addToWindow\",\n\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    value: function addToWindow(registry) {\n      ɵglobal['getAngularTestability'] = function (elem) {\n        var findInAncestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        /** @type {?} */\n        var testability = registry.findTestabilityInTree(elem, findInAncestors);\n\n        if (testability == null) {\n          throw new Error('Could not find testability for element.');\n        }\n\n        return testability;\n      };\n\n      ɵglobal['getAllAngularTestabilities'] = function () {\n        return registry.getAllTestabilities();\n      };\n\n      ɵglobal['getAllAngularRootElements'] = function () {\n        return registry.getAllRootElements();\n      };\n      /** @type {?} */\n\n\n      var whenAllStable = function whenAllStable(callback\n      /** TODO #9100 */\n      ) {\n        /** @type {?} */\n        var testabilities = ɵglobal['getAllAngularTestabilities']();\n        /** @type {?} */\n\n        var count = testabilities.length;\n        /** @type {?} */\n\n        var didWork = false;\n        /** @type {?} */\n\n        var decrement = function decrement(didWork_\n        /** TODO #9100 */\n        ) {\n          didWork = didWork || didWork_;\n          count--;\n\n          if (count == 0) {\n            callback(didWork);\n          }\n        };\n\n        testabilities.forEach(function (testability\n        /** TODO #9100 */\n        ) {\n          testability.whenStable(decrement);\n        });\n      };\n\n      if (!ɵglobal['frameworkStabilizers']) {\n        ɵglobal['frameworkStabilizers'] = [];\n      }\n\n      ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n\n  }, {\n    key: \"findTestabilityInTree\",\n    value: function findTestabilityInTree(registry, elem, findInAncestors) {\n      if (elem == null) {\n        return null;\n      }\n      /** @type {?} */\n\n\n      var t = registry.getTestability(elem);\n\n      if (t != null) {\n        return t;\n      } else if (!findInAncestors) {\n        return null;\n      }\n\n      if (getDOM().isShadowRoot(elem)) {\n        return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n      }\n\n      return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n    }\n  }], [{\n    key: \"init\",\n\n    /**\n     * @return {?}\n     */\n    value: function init() {\n      setTestabilityGetter(new BrowserGetTestability());\n    }\n  }]);\n\n  return BrowserGetTestability;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param {?} name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param {?} value The value to export.\n * @return {?}\n */\n\n\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n\n    /** @type {?} */\n    var ng = ɵglobal['ng'] =\n    /** @type {?} */\n    ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar CORE_TOKENS = {\n  'ApplicationRef': ApplicationRef,\n  'NgZone': NgZone\n};\n/** @type {?} */\n\nvar INSPECT_GLOBAL_NAME = 'probe';\n/** @type {?} */\n\nvar CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {\\@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n * @param {?} element\n * @return {?}\n */\n\nfunction inspectNativeElement(element) {\n  return getDebugNode(element);\n}\n/**\n * @param {?} coreTokens\n * @return {?}\n */\n\n\nfunction _createNgProbe(coreTokens) {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign({}, CORE_TOKENS, _ngProbeTokensToMap(coreTokens || [])));\n  return function () {\n    return inspectNativeElement;\n  };\n}\n/**\n * @param {?} tokens\n * @return {?}\n */\n\n\nfunction _ngProbeTokensToMap(tokens) {\n  return tokens.reduce(function (prev, t) {\n    return prev[t.name] = t.token, prev;\n  }, {});\n}\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n * @type {?}\n */\n\n\nvar ELEMENT_PROBE_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: _createNgProbe,\n  deps: [[NgProbeToken, new Optional()]],\n  multi: true\n}];\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * \\@publicApi\n * @type {?}\n */\n\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * \\@publicApi\n */\n\nvar EventManager = /*#__PURE__*/function () {\n  /**\n   * Initializes an instance of the event-manager service.\n   * @param {?} plugins\n   * @param {?} _zone\n   */\n  function EventManager(plugins, _zone) {\n    var _this3 = this;\n\n    _classCallCheck(this, EventManager);\n\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(function (p) {\n      return p.manager = _this3;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param {?} element The HTML element to receive event notifications.\n   * @param {?} eventName The name of the event to listen for.\n   * @param {?} handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @return {?} A callback function that can be used to remove the handler.\n   */\n\n\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      /** @type {?} */\n      var plugin = this._findPluginFor(eventName);\n\n      return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param {?} target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param {?} eventName The name of the event to listen for.\n     * @param {?} handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @return {?} A callback function that can be used to remove the handler.\n     */\n\n  }, {\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(target, eventName, handler) {\n      /** @type {?} */\n      var plugin = this._findPluginFor(eventName);\n\n      return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     * @return {?}\n     */\n\n  }, {\n    key: \"getZone\",\n    value: function getZone() {\n      return this._zone;\n    }\n    /**\n     * \\@internal\n     * @param {?} eventName\n     * @return {?}\n     */\n\n  }, {\n    key: \"_findPluginFor\",\n    value: function _findPluginFor(eventName) {\n      /** @type {?} */\n      var plugin = this._eventNameToPlugin.get(eventName);\n\n      if (plugin) {\n        return plugin;\n      }\n      /** @type {?} */\n\n\n      var plugins = this._plugins;\n\n      for (var i = 0; i < plugins.length; i++) {\n        /** @type {?} */\n        var _plugin = plugins[i];\n\n        if (_plugin.supports(eventName)) {\n          this._eventNameToPlugin.set(eventName, _plugin);\n\n          return _plugin;\n        }\n      }\n\n      throw new Error(\"No event manager plugin found for event \".concat(eventName));\n    }\n  }]);\n\n  return EventManager;\n}();\n\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nEventManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\n/** @nocollapse */\n\nEventManager.ctorParameters = function () {\n  return [{\n    type: Array,\n    decorators: [{\n      type: Inject,\n      args: [EVENT_MANAGER_PLUGINS]\n    }]\n  }, {\n    type: NgZone\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @abstract\n */\n\n\nvar EventManagerPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {?} _doc\n   */\n  function EventManagerPlugin(_doc) {\n    _classCallCheck(this, EventManagerPlugin);\n\n    this._doc = _doc;\n  }\n  /**\n   * @param {?} element\n   * @param {?} eventName\n   * @param {?} handler\n   * @return {?}\n   */\n\n\n  _createClass(EventManagerPlugin, [{\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(element, eventName, handler) {\n      /** @type {?} */\n      var target = getDOM().getGlobalEventTarget(this._doc, element);\n\n      if (!target) {\n        throw new Error(\"Unsupported event target \".concat(target, \" for event \").concat(eventName));\n      }\n\n      return this.addEventListener(target, eventName, handler);\n    }\n  }]);\n\n  return EventManagerPlugin;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar SharedStylesHost = /*#__PURE__*/function () {\n  function SharedStylesHost() {\n    _classCallCheck(this, SharedStylesHost);\n\n    /**\n     * \\@internal\n     */\n    this._stylesSet = new Set();\n  }\n  /**\n   * @param {?} styles\n   * @return {?}\n   */\n\n\n  _createClass(SharedStylesHost, [{\n    key: \"addStyles\",\n    value: function addStyles(styles) {\n      var _this4 = this;\n\n      /** @type {?} */\n      var additions = new Set();\n      styles.forEach(function (style) {\n        if (!_this4._stylesSet.has(style)) {\n          _this4._stylesSet.add(style);\n\n          additions.add(style);\n        }\n      });\n      this.onStylesAdded(additions);\n    }\n    /**\n     * @param {?} additions\n     * @return {?}\n     */\n\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {}\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getAllStyles\",\n    value: function getAllStyles() {\n      return Array.from(this._stylesSet);\n    }\n  }]);\n\n  return SharedStylesHost;\n}();\n\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\n\nSharedStylesHost.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar DomSharedStylesHost = /*#__PURE__*/function (_SharedStylesHost) {\n  _inherits(DomSharedStylesHost, _SharedStylesHost);\n\n  var _super4 = _createSuper(DomSharedStylesHost);\n\n  /**\n   * @param {?} _doc\n   */\n  function DomSharedStylesHost(_doc) {\n    var _this5;\n\n    _classCallCheck(this, DomSharedStylesHost);\n\n    _this5 = _super4.call(this);\n    _this5._doc = _doc;\n    _this5._hostNodes = new Set();\n    _this5._styleNodes = new Set();\n\n    _this5._hostNodes.add(_doc.head);\n\n    return _this5;\n  }\n  /**\n   * @private\n   * @param {?} styles\n   * @param {?} host\n   * @return {?}\n   */\n\n\n  _createClass(DomSharedStylesHost, [{\n    key: \"_addStylesToHost\",\n    value: function _addStylesToHost(styles, host) {\n      var _this6 = this;\n\n      styles.forEach(function (style) {\n        /** @type {?} */\n        var styleEl = _this6._doc.createElement('style');\n\n        styleEl.textContent = style;\n\n        _this6._styleNodes.add(host.appendChild(styleEl));\n      });\n    }\n    /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n\n  }, {\n    key: \"addHost\",\n    value: function addHost(hostNode) {\n      this._addStylesToHost(this._stylesSet, hostNode);\n\n      this._hostNodes.add(hostNode);\n    }\n    /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeHost\",\n    value: function removeHost(hostNode) {\n      this._hostNodes.delete(hostNode);\n    }\n    /**\n     * @param {?} additions\n     * @return {?}\n     */\n\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {\n      var _this7 = this;\n\n      this._hostNodes.forEach(function (hostNode) {\n        return _this7._addStylesToHost(additions, hostNode);\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._styleNodes.forEach(function (styleNode) {\n        return getDOM().remove(styleNode);\n      });\n    }\n  }]);\n\n  return DomSharedStylesHost;\n}(SharedStylesHost);\n\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT$1));\n};\n\nDomSharedStylesHost.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\n/** @nocollapse */\n\nDomSharedStylesHost.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT$1]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT$1]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/'\n};\n/** @type {?} */\n\nvar COMPONENT_REGEX = /%COMP%/g;\n/** @type {?} */\n\nvar COMPONENT_VARIABLE = '%COMP%';\n/** @type {?} */\n\nvar HOST_ATTR = \"_nghost-\".concat(COMPONENT_VARIABLE);\n/** @type {?} */\n\nvar CONTENT_ATTR = \"_ngcontent-\".concat(COMPONENT_VARIABLE);\n/**\n * @param {?} componentShortId\n * @return {?}\n */\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} componentShortId\n * @return {?}\n */\n\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} compId\n * @param {?} styles\n * @param {?} target\n * @return {?}\n */\n\n\nfunction flattenStyles(compId, styles, target) {\n  for (var i = 0; i < styles.length; i++) {\n    /** @type {?} */\n    var style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n\n  return target;\n}\n/**\n * @param {?} eventHandler\n * @return {?}\n */\n\n\nfunction decoratePreventDefault(eventHandler) {\n  return function (event) {\n    /** @type {?} */\n    var allowDefaultBehavior = eventHandler(event);\n\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n  };\n}\n\nvar DomRendererFactory2 = /*#__PURE__*/function () {\n  /**\n   * @param {?} eventManager\n   * @param {?} sharedStylesHost\n   * @param {?} appId\n   */\n  function DomRendererFactory2(eventManager, sharedStylesHost, appId) {\n    _classCallCheck(this, DomRendererFactory2);\n\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n  /**\n   * @param {?} element\n   * @param {?} type\n   * @return {?}\n   */\n\n\n  _createClass(DomRendererFactory2, [{\n    key: \"createRenderer\",\n    value: function createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          {\n            /** @type {?} */\n            var renderer = this.rendererByCompId.get(type.id);\n\n            if (!renderer) {\n              renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n              this.rendererByCompId.set(type.id, renderer);\n            }\n\n            /** @type {?} */\n            renderer.applyToHost(element);\n            return renderer;\n          }\n\n        case ViewEncapsulation.Native:\n        case ViewEncapsulation.ShadowDom:\n          return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n\n        default:\n          {\n            if (!this.rendererByCompId.has(type.id)) {\n              /** @type {?} */\n              var styles = flattenStyles(type.id, type.styles, []);\n              this.sharedStylesHost.addStyles(styles);\n              this.rendererByCompId.set(type.id, this.defaultRenderer);\n            }\n\n            return this.defaultRenderer;\n          }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"begin\",\n    value: function begin() {}\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"end\",\n    value: function end() {}\n  }]);\n\n  return DomRendererFactory2;\n}();\n\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID));\n};\n\nDomRendererFactory2.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\n/** @nocollapse */\n\nDomRendererFactory2.ctorParameters = function () {\n  return [{\n    type: EventManager\n  }, {\n    type: DomSharedStylesHost\n  }, {\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [APP_ID]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\n\nvar DefaultDomRenderer2 = /*#__PURE__*/function () {\n  /**\n   * @param {?} eventManager\n   */\n  function DefaultDomRenderer2(eventManager) {\n    _classCallCheck(this, DefaultDomRenderer2);\n\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(DefaultDomRenderer2, [{\n    key: \"destroy\",\n    value: function destroy() {}\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, namespace) {\n      if (namespace) {\n        return document.createElementNS(NAMESPACE_URIS[namespace], name);\n      }\n\n      return document.createElement(name);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"createComment\",\n    value: function createComment(value) {\n      return document.createComment(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"createText\",\n    value: function createText(value) {\n      return document.createTextNode(value);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      parent.appendChild(newChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      if (parent) {\n        parent.insertBefore(newChild, refChild);\n      }\n    }\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      if (parent) {\n        parent.removeChild(oldChild);\n      }\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @param {?=} preserveContent\n     * @return {?}\n     */\n\n  }, {\n    key: \"selectRootElement\",\n    value: function selectRootElement(selectorOrNode, preserveContent) {\n      /** @type {?} */\n      var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n\n      if (!el) {\n        throw new Error(\"The selector \\\"\".concat(selectorOrNode, \"\\\" did not match any elements\"));\n      }\n\n      if (!preserveContent) {\n        el.textContent = '';\n      }\n\n      return el;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return node.parentNode;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(node) {\n      return node.nextSibling;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(el, name, value, namespace) {\n      if (namespace) {\n        name = \"\".concat(namespace, \":\").concat(name);\n        /** @type {?} */\n\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.setAttributeNS(namespaceUri, name, value);\n        } else {\n          el.setAttribute(name, value);\n        }\n      } else {\n        el.setAttribute(name, value);\n      }\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(el, name, namespace) {\n      if (namespace) {\n        /** @type {?} */\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.removeAttributeNS(namespaceUri, name);\n        } else {\n          el.removeAttribute(\"\".concat(namespace, \":\").concat(name));\n        }\n      } else {\n        el.removeAttribute(name);\n      }\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(el, name) {\n      el.classList.add(name);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(el, name) {\n      el.classList.remove(name);\n    }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(el, style, value, flags) {\n      if (flags & RendererStyleFlags2.DashCase) {\n        el.style.setProperty(style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n      } else {\n        el.style[style] = value;\n      }\n    }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(el, style, flags) {\n      if (flags & RendererStyleFlags2.DashCase) {\n        el.style.removeProperty(style);\n      } else {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        el.style[style] = '';\n      }\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      checkNoSyntheticProp(name, 'property');\n      el[name] = value;\n    }\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(node, value) {\n      node.nodeValue = value;\n    }\n    /**\n     * @param {?} target\n     * @param {?} event\n     * @param {?} callback\n     * @return {?}\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(target, event, callback) {\n      checkNoSyntheticProp(event, 'listener');\n\n      if (typeof target === 'string') {\n        return (\n          /** @type {?} */\n          this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback))\n        );\n      }\n\n      return (\n        /** @type {?} */\n\n        /** @type {?} */\n        this.eventManager.addEventListener(target, event, decoratePreventDefault(callback))\n      );\n    }\n  }]);\n\n  return DefaultDomRenderer2;\n}();\n/** @type {?} */\n\n\nvar AT_CHARCODE = '@'.charCodeAt(0);\n/**\n * @param {?} name\n * @param {?} nameKind\n * @return {?}\n */\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\"Found the synthetic \".concat(nameKind, \" \").concat(name, \". Please include either \\\"BrowserAnimationsModule\\\" or \\\"NoopAnimationsModule\\\" in your application.\"));\n  }\n}\n\nvar EmulatedEncapsulationDomRenderer2 = /*#__PURE__*/function (_DefaultDomRenderer) {\n  _inherits(EmulatedEncapsulationDomRenderer2, _DefaultDomRenderer);\n\n  var _super5 = _createSuper(EmulatedEncapsulationDomRenderer2);\n\n  /**\n   * @param {?} eventManager\n   * @param {?} sharedStylesHost\n   * @param {?} component\n   * @param {?} appId\n   */\n  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {\n    var _this8;\n\n    _classCallCheck(this, EmulatedEncapsulationDomRenderer2);\n\n    _this8 = _super5.call(this, eventManager);\n    _this8.component = component;\n    /** @type {?} */\n\n    var styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    _this8.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    _this8.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    return _this8;\n  }\n  /**\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  _createClass(EmulatedEncapsulationDomRenderer2, [{\n    key: \"applyToHost\",\n    value: function applyToHost(element) {\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, element, this.hostAttr, '');\n    }\n    /**\n     * @param {?} parent\n     * @param {?} name\n     * @return {?}\n     */\n\n  }, {\n    key: \"createElement\",\n    value: function createElement(parent, name) {\n      /** @type {?} */\n      var el = _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"createElement\", this).call(this, parent, name);\n\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, el, this.contentAttr, '');\n\n      return el;\n    }\n  }]);\n\n  return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2);\n\nvar ShadowDomRenderer = /*#__PURE__*/function (_DefaultDomRenderer2) {\n  _inherits(ShadowDomRenderer, _DefaultDomRenderer2);\n\n  var _super6 = _createSuper(ShadowDomRenderer);\n\n  /**\n   * @param {?} eventManager\n   * @param {?} sharedStylesHost\n   * @param {?} hostEl\n   * @param {?} component\n   */\n  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n    var _this9;\n\n    _classCallCheck(this, ShadowDomRenderer);\n\n    _this9 = _super6.call(this, eventManager);\n    _this9.sharedStylesHost = sharedStylesHost;\n    _this9.hostEl = hostEl;\n    _this9.component = component;\n\n    if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n      _this9.shadowRoot =\n      /** @type {?} */\n      hostEl.attachShadow({\n        mode: 'open'\n      });\n    } else {\n      _this9.shadowRoot =\n      /** @type {?} */\n      hostEl.createShadowRoot();\n    }\n\n    _this9.sharedStylesHost.addHost(_this9.shadowRoot);\n    /** @type {?} */\n\n\n    var styles = flattenStyles(component.id, component.styles, []);\n\n    for (var i = 0; i < styles.length; i++) {\n      /** @type {?} */\n      var styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n\n      _this9.shadowRoot.appendChild(styleEl);\n    }\n\n    return _this9;\n  }\n  /**\n   * @private\n   * @param {?} node\n   * @return {?}\n   */\n\n\n  _createClass(ShadowDomRenderer, [{\n    key: \"nodeOrShadowRoot\",\n    value: function nodeOrShadowRoot(node) {\n      return node === this.hostEl ? this.shadowRoot : node;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"appendChild\", this).call(this, this.nodeOrShadowRoot(parent), newChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"insertBefore\", this).call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"removeChild\", this).call(this, this.nodeOrShadowRoot(parent), oldChild);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return this.nodeOrShadowRoot(_get(_getPrototypeOf(ShadowDomRenderer.prototype), \"parentNode\", this).call(this, this.nodeOrShadowRoot(node)));\n    }\n  }]);\n\n  return ShadowDomRenderer;\n}(DefaultDomRenderer2);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ɵ0 = function ɵ0(v) {\n  return '__zone_symbol__' + v;\n};\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n * @type {?}\n */\n\n\nvar __symbol__ = typeof Zone !== 'undefined' &&\n/** @type {?} */\nZone['__symbol__'] || ɵ0;\n/** @type {?} */\n\n\nvar ADD_EVENT_LISTENER = __symbol__('addEventListener');\n/** @type {?} */\n\n\nvar REMOVE_EVENT_LISTENER = __symbol__('removeEventListener');\n/** @type {?} */\n\n\nvar symbolNames = {};\n/** @type {?} */\n\nvar FALSE = 'FALSE';\n/** @type {?} */\n\nvar ANGULAR = 'ANGULAR';\n/** @type {?} */\n\nvar NATIVE_ADD_LISTENER = 'addEventListener';\n/** @type {?} */\n\nvar NATIVE_REMOVE_LISTENER = 'removeEventListener'; // use the same symbol string which is used in zone.js\n\n/** @type {?} */\n\nvar stopSymbol = '__zone_symbol__propagationStopped';\n/** @type {?} */\n\nvar stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\n/** @type {?} */\n\nvar blackListedEvents = typeof Zone !== 'undefined' &&\n/** @type {?} */\nZone[__symbol__('BLACK_LISTED_EVENTS')];\n/** @type {?} */\n\n\nvar blackListedMap;\n\nif (blackListedEvents) {\n  blackListedMap = {};\n  blackListedEvents.forEach(function (eventName) {\n    blackListedMap[eventName] = eventName;\n  });\n}\n/** @type {?} */\n\n\nvar isBlackListedEvent = function isBlackListedEvent(eventName) {\n  if (!blackListedMap) {\n    return false;\n  }\n\n  return blackListedMap.hasOwnProperty(eventName);\n}; // a global listener to handle all dom event,\n// so we do not need to create a closure every time\n\n/** @type {?} */\n\n\nvar globalListener = function globalListener(event) {\n  /** @type {?} */\n  var symbolName = symbolNames[event.type];\n\n  if (!symbolName) {\n    return;\n  }\n  /** @type {?} */\n\n\n  var taskDatas = this[symbolName];\n\n  if (!taskDatas) {\n    return;\n  }\n  /** @type {?} */\n\n\n  var args = [event];\n\n  if (taskDatas.length === 1) {\n    // if taskDatas only have one element, just invoke it\n\n    /** @type {?} */\n    var taskData = taskDatas[0];\n\n    if (taskData.zone !== Zone.current) {\n      // only use Zone.run when Zone.current not equals to stored zone\n      return taskData.zone.run(taskData.handler, this, args);\n    } else {\n      return taskData.handler.apply(this, args);\n    }\n  } else {\n    // copy tasks as a snapshot to avoid event handlers remove\n    // itself or others\n\n    /** @type {?} */\n    var copiedTasks = taskDatas.slice();\n\n    for (var i = 0; i < copiedTasks.length; i++) {\n      // if other listener call event.stopImmediatePropagation\n      // just break\n      if (\n      /** @type {?} */\n      event[stopSymbol] === true) {\n        break;\n      }\n      /** @type {?} */\n\n\n      var _taskData = copiedTasks[i];\n\n      if (_taskData.zone !== Zone.current) {\n        // only use Zone.run when Zone.current not equals to stored zone\n        _taskData.zone.run(_taskData.handler, this, args);\n      } else {\n        _taskData.handler.apply(this, args);\n      }\n    }\n  }\n};\n\nvar DomEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin) {\n  _inherits(DomEventsPlugin, _EventManagerPlugin);\n\n  var _super7 = _createSuper(DomEventsPlugin);\n\n  /**\n   * @param {?} doc\n   * @param {?} ngZone\n   * @param {?} platformId\n   */\n  function DomEventsPlugin(doc, ngZone, platformId) {\n    var _this10;\n\n    _classCallCheck(this, DomEventsPlugin);\n\n    _this10 = _super7.call(this, doc);\n    _this10.ngZone = ngZone;\n\n    if (!platformId || !isPlatformServer(platformId)) {\n      _this10.patchEvent();\n    }\n\n    return _this10;\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  _createClass(DomEventsPlugin, [{\n    key: \"patchEvent\",\n    value: function patchEvent() {\n      if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n        return;\n      }\n\n      if (\n      /** @type {?} */\n      Event.prototype[stopMethodSymbol]) {\n        // already patched by zone.js\n        return;\n      }\n      /** @type {?} */\n\n\n      var delegate =\n      /** @type {?} */\n      Event.prototype[stopMethodSymbol] = Event.prototype.stopImmediatePropagation;\n\n      Event.prototype.stopImmediatePropagation = function () {\n        if (this) {\n          this[stopSymbol] = true;\n        } // should call native delegate in case\n        // in some environment part of the application\n        // will not use the patched Event\n\n\n        delegate && delegate.apply(this, arguments);\n      };\n    } // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n\n  }, {\n    key: \"supports\",\n    value: function supports(eventName) {\n      return true;\n    }\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this11 = this;\n\n      /** @type {?} */\n      var zoneJsLoaded = element[ADD_EVENT_LISTENER];\n      /** @type {?} */\n\n      var callback =\n      /** @type {?} */\n      handler; // if zonejs is loaded and current zone is not ngZone\n      // we keep Zone.current on target for later restoration.\n\n      if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n        /** @type {?} */\n        var symbolName = symbolNames[eventName];\n\n        if (!symbolName) {\n          symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n        }\n        /** @type {?} */\n\n\n        var taskDatas =\n        /** @type {?} */\n        element[symbolName];\n        /** @type {?} */\n\n        var globalListenerRegistered = taskDatas && taskDatas.length > 0;\n\n        if (!taskDatas) {\n          taskDatas =\n          /** @type {?} */\n          element[symbolName] = [];\n        }\n        /** @type {?} */\n\n\n        var zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n\n        if (taskDatas.length === 0) {\n          taskDatas.push({\n            zone: zone,\n            handler: callback\n          });\n        } else {\n          /** @type {?} */\n          var callbackRegistered = false;\n\n          for (var i = 0; i < taskDatas.length; i++) {\n            if (taskDatas[i].handler === callback) {\n              callbackRegistered = true;\n              break;\n            }\n          }\n\n          if (!callbackRegistered) {\n            taskDatas.push({\n              zone: zone,\n              handler: callback\n            });\n          }\n        }\n\n        if (!globalListenerRegistered) {\n          element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n        }\n      } else {\n        element[NATIVE_ADD_LISTENER](eventName, callback, false);\n      }\n\n      return function () {\n        return _this11.removeEventListener(element, eventName, callback);\n      };\n    }\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(target, eventName, callback) {\n      /** @type {?} */\n      var underlyingRemove = target[REMOVE_EVENT_LISTENER]; // zone.js not loaded, use native removeEventListener\n\n      if (!underlyingRemove) {\n        return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n      }\n      /** @type {?} */\n\n\n      var symbolName = symbolNames[eventName];\n      /** @type {?} */\n\n      var taskDatas = symbolName && target[symbolName];\n\n      if (!taskDatas) {\n        // addEventListener not using patched version\n        // just call native removeEventListener\n        return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n      } // fix issue 20532, should be able to remove\n      // listener which was added inside of ngZone\n\n      /** @type {?} */\n\n\n      var found = false;\n\n      for (var i = 0; i < taskDatas.length; i++) {\n        // remove listener from taskDatas if the callback equals\n        if (taskDatas[i].handler === callback) {\n          found = true;\n          taskDatas.splice(i, 1);\n          break;\n        }\n      }\n\n      if (found) {\n        if (taskDatas.length === 0) {\n          // all listeners are removed, we can remove the globalListener from target\n          underlyingRemove.apply(target, [eventName, globalListener, false]);\n        }\n      } else {\n        // not found in taskDatas, the callback may be added inside of ngZone\n        // use native remove listener to remove the callback\n        target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n      }\n    }\n  }]);\n\n  return DomEventsPlugin;\n}(EventManagerPlugin);\n\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT$1), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PLATFORM_ID, 8));\n};\n\nDomEventsPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\n/** @nocollapse */\n\nDomEventsPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT$1]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT$1]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Supported HammerJS recognizer event names.\n * @type {?}\n */\n\n\nvar EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true\n};\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * \\@publicApi\n * @type {?}\n */\n\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {\\@link HammerLoader} to Angular.\n *\n * \\@publicApi\n * @type {?}\n */\n\nvar HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * \\@publicApi\n */\n\nvar HammerGestureConfig = /*#__PURE__*/function () {\n  function HammerGestureConfig() {\n    _classCallCheck(this, HammerGestureConfig);\n\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](http://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](http://hammerjs.github.io/).\n     *\n     */\n\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n   * and attaches it to a given HTML element.\n   * @param {?} element The element that will recognize gestures.\n   * @return {?} A HammerJS event-manager object.\n   */\n\n\n  _createClass(HammerGestureConfig, [{\n    key: \"buildHammer\",\n    value: function buildHammer(element) {\n      /** @type {?} */\n      var mc = new\n      /** @type {?} */\n      Hammer(element, this.options);\n      mc.get('pinch').set({\n        enable: true\n      });\n      mc.get('rotate').set({\n        enable: true\n      });\n\n      for (var eventName in this.overrides) {\n        mc.get(eventName).set(this.overrides[eventName]);\n      }\n\n      return mc;\n    }\n  }]);\n\n  return HammerGestureConfig;\n}();\n\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\n\nHammerGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar HammerGesturesPlugin = /*#__PURE__*/function (_EventManagerPlugin2) {\n  _inherits(HammerGesturesPlugin, _EventManagerPlugin2);\n\n  var _super8 = _createSuper(HammerGesturesPlugin);\n\n  /**\n   * @param {?} doc\n   * @param {?} _config\n   * @param {?} console\n   * @param {?=} loader\n   */\n  function HammerGesturesPlugin(doc, _config, console, loader) {\n    var _this12;\n\n    _classCallCheck(this, HammerGesturesPlugin);\n\n    _this12 = _super8.call(this, doc);\n    _this12._config = _config;\n    _this12.console = console;\n    _this12.loader = loader;\n    return _this12;\n  }\n  /**\n   * @param {?} eventName\n   * @return {?}\n   */\n\n\n  _createClass(HammerGesturesPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n        return false;\n      }\n\n      if (!\n      /** @type {?} */\n      window.Hammer && !this.loader) {\n        this.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because Hammer.JS is not \") + \"loaded and no custom loader has been specified.\");\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this13 = this;\n\n      /** @type {?} */\n      var zone = this.manager.getZone();\n      eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener\n      // until Hammer is loaded.\n\n      if (!\n      /** @type {?} */\n      window.Hammer && this.loader) {\n        // This `addEventListener` method returns a function to remove the added listener.\n        // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n        // than remove anything.\n\n        /** @type {?} */\n        var cancelRegistration = false;\n        /** @type {?} */\n\n        var deregister = function deregister() {\n          cancelRegistration = true;\n        };\n\n        this.loader().then(function () {\n          // If Hammer isn't actually loaded when the custom loader resolves, give up.\n          if (!\n          /** @type {?} */\n          window.Hammer) {\n            _this13.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n\n            deregister = function deregister() {};\n\n            return;\n          }\n\n          if (!cancelRegistration) {\n            // Now that Hammer is loaded and the listener is being loaded for real,\n            // the deregistration function changes from canceling registration to removal.\n            deregister = _this13.addEventListener(element, eventName, handler);\n          }\n        }).catch(function () {\n          _this13.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because the custom \") + \"Hammer.JS loader failed.\");\n\n          deregister = function deregister() {};\n        }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n        // can change the behavior of `deregister` once the listener is added. Using a closure in\n        // this way allows us to avoid any additional data structures to track listener removal.\n\n        return function () {\n          deregister();\n        };\n      }\n\n      return zone.runOutsideAngular(function () {\n        // Creating the manager bind events, must be done outside of angular\n\n        /** @type {?} */\n        var mc = _this13._config.buildHammer(element);\n        /** @type {?} */\n\n\n        var callback = function callback(eventObj) {\n          zone.runGuarded(function () {\n            handler(eventObj);\n          });\n        };\n\n        mc.on(eventName, callback);\n        return function () {\n          mc.off(eventName, callback); // destroy mc to prevent memory leak\n\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        };\n      });\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n\n  }, {\n    key: \"isCustomEvent\",\n    value: function isCustomEvent(eventName) {\n      return this._config.events.indexOf(eventName) > -1;\n    }\n  }]);\n\n  return HammerGesturesPlugin;\n}(EventManagerPlugin);\n\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT$1), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n};\n\nHammerGesturesPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\n/** @nocollapse */\n\nHammerGesturesPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT$1]\n    }]\n  }, {\n    type: HammerGestureConfig,\n    decorators: [{\n      type: Inject,\n      args: [HAMMER_GESTURE_CONFIG]\n    }]\n  }, {\n    type: ɵConsole\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [HAMMER_LOADER]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT$1]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: ɵngcc0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Defines supported modifiers for key events.\n * @type {?}\n */\n\n\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\nvar ɵ0$1 = function ɵ0$1(event) {\n  return event.altKey;\n},\n    ɵ1$1 = function ɵ1$1(event) {\n  return event.ctrlKey;\n},\n    ɵ2$1 = function ɵ2$1(event) {\n  return event.metaKey;\n},\n    ɵ3 = function ɵ3(event) {\n  return event.shiftKey;\n};\n/**\n * Retrieves modifiers from key-event objects.\n * @type {?}\n */\n\n\nvar MODIFIER_KEY_GETTERS = {\n  'alt': ɵ0$1,\n  'control': ɵ1$1,\n  'meta': ɵ2$1,\n  'shift': ɵ3\n};\n/**\n * \\@publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n\nvar KeyEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin3) {\n  _inherits(KeyEventsPlugin, _EventManagerPlugin3);\n\n  var _super9 = _createSuper(KeyEventsPlugin);\n\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param {?} doc The document in which key events will be detected.\n   */\n  function KeyEventsPlugin(doc) {\n    _classCallCheck(this, KeyEventsPlugin);\n\n    return _super9.call(this, doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param {?} eventName The event name to query.\n   * @return {?} True if the named key event is supported.\n   */\n\n\n  _createClass(KeyEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param {?} element The HTML element to receive event notifications.\n     * @param {?} eventName The name of the key event to listen for.\n     * @param {?} handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @return {?} The key event that was registered.\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      /** @type {?} */\n      var parsedEvent =\n      /** @type {?} */\n      KeyEventsPlugin.parseEventName(eventName);\n      /** @type {?} */\n\n      var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n      return this.manager.getZone().runOutsideAngular(function () {\n        return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n      });\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n\n  }], [{\n    key: \"parseEventName\",\n    value: function parseEventName(eventName) {\n      /** @type {?} */\n      var parts = eventName.toLowerCase().split('.');\n      /** @type {?} */\n\n      var domEventName = parts.shift();\n\n      if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n        return null;\n      }\n      /** @type {?} */\n\n\n      var key = KeyEventsPlugin._normalizeKey(\n      /** @type {?} */\n      parts.pop());\n      /** @type {?} */\n\n\n      var fullKey = '';\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        /** @type {?} */\n        var index = parts.indexOf(modifierName);\n\n        if (index > -1) {\n          parts.splice(index, 1);\n          fullKey += modifierName + '.';\n        }\n      });\n      fullKey += key;\n\n      if (parts.length != 0 || key.length === 0) {\n        // returning null instead of throwing to let another plugin process the event\n        return null;\n      }\n      /** @type {?} */\n\n\n      var result = {};\n      result['domEventName'] = domEventName;\n      result['fullKey'] = fullKey;\n      return result;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"getEventFullKey\",\n    value: function getEventFullKey(event) {\n      /** @type {?} */\n      var fullKey = '';\n      /** @type {?} */\n\n      var key = getDOM().getEventKey(event);\n      key = key.toLowerCase();\n\n      if (key === ' ') {\n        key = 'space'; // for readability\n      } else if (key === '.') {\n        key = 'dot'; // because '.' is used as a separator in event names\n      }\n\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        if (modifierName != key) {\n          /** @type {?} */\n          var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\n          if (modifierGetter(event)) {\n            fullKey += modifierName + '.';\n          }\n        }\n      });\n      fullKey += key;\n      return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param {?} fullKey The event name that combines all simultaneous keystrokes.\n     * @param {?} handler The function that responds to the key event.\n     * @param {?} zone The zone in which the event occurred.\n     * @return {?} A callback function.\n     */\n\n  }, {\n    key: \"eventCallback\",\n    value: function eventCallback(fullKey, handler, zone) {\n      return function (event\n      /** TODO #9100 */\n      ) {\n        if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n          zone.runGuarded(function () {\n            return handler(event);\n          });\n        }\n      };\n    }\n    /**\n     * \\@internal\n     * @param {?} keyName\n     * @return {?}\n     */\n\n  }, {\n    key: \"_normalizeKey\",\n    value: function _normalizeKey(keyName) {\n      // TODO: switch to a Map if the mapping grows too much\n      switch (keyName) {\n        case 'esc':\n          return 'escape';\n\n        default:\n          return keyName;\n      }\n    }\n  }]);\n\n  return KeyEventsPlugin;\n}(EventManagerPlugin);\n\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT$1));\n};\n\nKeyEventsPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\n/** @nocollapse */\n\nKeyEventsPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT$1]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT$1]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * \\@publicApi\n * @abstract\n */\n\n\nvar DomSanitizer = function DomSanitizer() {\n  _classCallCheck(this, DomSanitizer);\n};\n\nvar DomSanitizerImpl = /*#__PURE__*/function (_DomSanitizer) {\n  _inherits(DomSanitizerImpl, _DomSanitizer);\n\n  var _super10 = _createSuper(DomSanitizerImpl);\n\n  /**\n   * @param {?} _doc\n   */\n  function DomSanitizerImpl(_doc) {\n    var _this14;\n\n    _classCallCheck(this, DomSanitizerImpl);\n\n    _this14 = _super10.call(this);\n    _this14._doc = _doc;\n    return _this14;\n  }\n  /**\n   * @param {?} ctx\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(DomSanitizerImpl, [{\n    key: \"sanitize\",\n    value: function sanitize(ctx, value) {\n      if (value == null) return null;\n\n      switch (ctx) {\n        case SecurityContext.NONE:\n          return (\n            /** @type {?} */\n            value\n          );\n\n        case SecurityContext.HTML:\n          if (value instanceof SafeHtmlImpl) return value.changingThisBreaksApplicationSecurity;\n          this.checkNotSafeValue(value, 'HTML');\n          return ɵ_sanitizeHtml(this._doc, String(value));\n\n        case SecurityContext.STYLE:\n          if (value instanceof SafeStyleImpl) return value.changingThisBreaksApplicationSecurity;\n          this.checkNotSafeValue(value, 'Style');\n          return ɵ_sanitizeStyle(\n          /** @type {?} */\n          value);\n\n        case SecurityContext.SCRIPT:\n          if (value instanceof SafeScriptImpl) return value.changingThisBreaksApplicationSecurity;\n          this.checkNotSafeValue(value, 'Script');\n          throw new Error('unsafe value used in a script context');\n\n        case SecurityContext.URL:\n          if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n            // Allow resource URLs in URL contexts, they are strictly more trusted.\n            return value.changingThisBreaksApplicationSecurity;\n          }\n\n          this.checkNotSafeValue(value, 'URL');\n          return ɵ_sanitizeUrl(String(value));\n\n        case SecurityContext.RESOURCE_URL:\n          if (value instanceof SafeResourceUrlImpl) {\n            return value.changingThisBreaksApplicationSecurity;\n          }\n\n          this.checkNotSafeValue(value, 'ResourceURL');\n          throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n\n        default:\n          throw new Error(\"Unexpected SecurityContext \".concat(ctx, \" (see http://g.co/ng/security#xss)\"));\n      }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @param {?} expectedType\n     * @return {?}\n     */\n\n  }, {\n    key: \"checkNotSafeValue\",\n    value: function checkNotSafeValue(value, expectedType) {\n      if (value instanceof SafeValueImpl) {\n        throw new Error(\"Required a safe \".concat(expectedType, \", got a \").concat(value.getTypeName(), \" \") + \"(see http://g.co/ng/security#xss)\");\n      }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"bypassSecurityTrustHtml\",\n    value: function bypassSecurityTrustHtml(value) {\n      return new SafeHtmlImpl(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"bypassSecurityTrustStyle\",\n    value: function bypassSecurityTrustStyle(value) {\n      return new SafeStyleImpl(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"bypassSecurityTrustScript\",\n    value: function bypassSecurityTrustScript(value) {\n      return new SafeScriptImpl(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"bypassSecurityTrustUrl\",\n    value: function bypassSecurityTrustUrl(value) {\n      return new SafeUrlImpl(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"bypassSecurityTrustResourceUrl\",\n    value: function bypassSecurityTrustResourceUrl(value) {\n      return new SafeResourceUrlImpl(value);\n    }\n  }]);\n\n  return DomSanitizerImpl;\n}(DomSanitizer);\n\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT$1));\n};\n\nDomSanitizerImpl.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomSanitizerImpl,\n  factory: DomSanitizerImpl.ɵfac\n});\n/** @nocollapse */\n\nDomSanitizerImpl.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT$1]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT$1]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @abstract\n */\n\n\nvar SafeValueImpl = /*#__PURE__*/function () {\n  /**\n   * @param {?} changingThisBreaksApplicationSecurity\n   */\n  function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n    _classCallCheck(this, SafeValueImpl);\n\n    this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity; // empty\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(SafeValueImpl, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"SafeValue must use [property]=binding: \".concat(this.changingThisBreaksApplicationSecurity) + \" (see http://g.co/ng/security#xss)\";\n    }\n  }]);\n\n  return SafeValueImpl;\n}();\n\nvar SafeHtmlImpl = /*#__PURE__*/function (_SafeValueImpl) {\n  _inherits(SafeHtmlImpl, _SafeValueImpl);\n\n  var _super11 = _createSuper(SafeHtmlImpl);\n\n  function SafeHtmlImpl() {\n    _classCallCheck(this, SafeHtmlImpl);\n\n    return _super11.apply(this, arguments);\n  }\n\n  _createClass(SafeHtmlImpl, [{\n    key: \"getTypeName\",\n\n    /**\n     * @return {?}\n     */\n    value: function getTypeName() {\n      return 'HTML';\n    }\n  }]);\n\n  return SafeHtmlImpl;\n}(SafeValueImpl);\n\nvar SafeStyleImpl = /*#__PURE__*/function (_SafeValueImpl2) {\n  _inherits(SafeStyleImpl, _SafeValueImpl2);\n\n  var _super12 = _createSuper(SafeStyleImpl);\n\n  function SafeStyleImpl() {\n    _classCallCheck(this, SafeStyleImpl);\n\n    return _super12.apply(this, arguments);\n  }\n\n  _createClass(SafeStyleImpl, [{\n    key: \"getTypeName\",\n\n    /**\n     * @return {?}\n     */\n    value: function getTypeName() {\n      return 'Style';\n    }\n  }]);\n\n  return SafeStyleImpl;\n}(SafeValueImpl);\n\nvar SafeScriptImpl = /*#__PURE__*/function (_SafeValueImpl3) {\n  _inherits(SafeScriptImpl, _SafeValueImpl3);\n\n  var _super13 = _createSuper(SafeScriptImpl);\n\n  function SafeScriptImpl() {\n    _classCallCheck(this, SafeScriptImpl);\n\n    return _super13.apply(this, arguments);\n  }\n\n  _createClass(SafeScriptImpl, [{\n    key: \"getTypeName\",\n\n    /**\n     * @return {?}\n     */\n    value: function getTypeName() {\n      return 'Script';\n    }\n  }]);\n\n  return SafeScriptImpl;\n}(SafeValueImpl);\n\nvar SafeUrlImpl = /*#__PURE__*/function (_SafeValueImpl4) {\n  _inherits(SafeUrlImpl, _SafeValueImpl4);\n\n  var _super14 = _createSuper(SafeUrlImpl);\n\n  function SafeUrlImpl() {\n    _classCallCheck(this, SafeUrlImpl);\n\n    return _super14.apply(this, arguments);\n  }\n\n  _createClass(SafeUrlImpl, [{\n    key: \"getTypeName\",\n\n    /**\n     * @return {?}\n     */\n    value: function getTypeName() {\n      return 'URL';\n    }\n  }]);\n\n  return SafeUrlImpl;\n}(SafeValueImpl);\n\nvar SafeResourceUrlImpl = /*#__PURE__*/function (_SafeValueImpl5) {\n  _inherits(SafeResourceUrlImpl, _SafeValueImpl5);\n\n  var _super15 = _createSuper(SafeResourceUrlImpl);\n\n  function SafeResourceUrlImpl() {\n    _classCallCheck(this, SafeResourceUrlImpl);\n\n    return _super15.apply(this, arguments);\n  }\n\n  _createClass(SafeResourceUrlImpl, [{\n    key: \"getTypeName\",\n\n    /**\n     * @return {?}\n     */\n    value: function getTypeName() {\n      return 'ResourceURL';\n    }\n  }]);\n\n  return SafeResourceUrlImpl;\n}(SafeValueImpl);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: PlatformLocation,\n  useClass: BrowserPlatformLocation,\n  deps: [DOCUMENT$1]\n}, {\n  provide: DOCUMENT$1,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * \\@security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * \\@publicApi\n * @type {?}\n */\n\nvar BROWSER_SANITIZATION_PROVIDERS = [{\n  provide: Sanitizer,\n  useExisting: DomSanitizer\n}, {\n  provide: DomSanitizer,\n  useClass: DomSanitizerImpl,\n  deps: [DOCUMENT$1]\n}];\n/**\n * \\@publicApi\n * @type {?}\n */\n\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n/**\n * @return {?}\n */\n\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\n\n\nfunction _document() {\n  return document;\n}\n/** @type {?} */\n\n\nvar BROWSER_MODULE_PROVIDERS = [BROWSER_SANITIZATION_PROVIDERS, {\n  provide: ɵAPP_ROOT,\n  useValue: true\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT$1, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT$1]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: HammerGesturesPlugin,\n  multi: true,\n  deps: [DOCUMENT$1, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n}, {\n  provide: HAMMER_GESTURE_CONFIG,\n  useClass: HammerGestureConfig,\n  deps: []\n}, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT$1]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, ELEMENT_PROBE_PROVIDERS];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * \\@publicApi\n */\n\nvar BrowserModule = /*#__PURE__*/function () {\n  /**\n   * @param {?} parentModule\n   */\n  function BrowserModule(parentModule) {\n    _classCallCheck(this, BrowserModule);\n\n    if (parentModule) {\n      throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param {?} params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @return {?} The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n\n\n  _createClass(BrowserModule, null, [{\n    key: \"withServerTransition\",\n    value: function withServerTransition(params) {\n      return {\n        ngModule: BrowserModule,\n        providers: [{\n          provide: APP_ID,\n          useValue: params.appId\n        }, {\n          provide: TRANSITION_ID,\n          useExisting: APP_ID\n        }, SERVER_TRANSITION_PROVIDERS]\n      };\n    }\n  }]);\n\n  return BrowserModule;\n}();\n\nBrowserModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function BrowserModule_Factory(t) {\n    return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12));\n  },\n  providers: BROWSER_MODULE_PROVIDERS,\n  imports: [CommonModule, ApplicationModule]\n});\n/** @nocollapse */\n\nBrowserModule.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [BrowserModule]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, {\n    exports: function exports() {\n      return [CommonModule, ApplicationModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: BROWSER_MODULE_PROVIDERS,\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BrowserModule]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Factory to create Meta service.\n * @return {?}\n */\n\n\nfunction createMeta() {\n  return new Meta(inject(DOCUMENT$1));\n}\n/**\n * A service that can be used to get and add meta tags.\n *\n * \\@publicApi\n */\n\n\nvar Meta = /*#__PURE__*/function () {\n  /**\n   * @param {?} _doc\n   */\n  function Meta(_doc) {\n    _classCallCheck(this, Meta);\n\n    this._doc = _doc;\n    this._dom = getDOM();\n  }\n  /**\n   * @param {?} tag\n   * @param {?=} forceCreation\n   * @return {?}\n   */\n\n\n  _createClass(Meta, [{\n    key: \"addTag\",\n    value: function addTag(tag) {\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tag) return null;\n      return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * @param {?} tags\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n\n  }, {\n    key: \"addTags\",\n    value: function addTags(tags) {\n      var _this15 = this;\n\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tags) return [];\n      return tags.reduce(function (result, tag) {\n        if (tag) {\n          result.push(_this15._getOrCreateElement(tag, forceCreation));\n        }\n\n        return result;\n      }, []);\n    }\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n\n  }, {\n    key: \"getTag\",\n    value: function getTag(attrSelector) {\n      if (!attrSelector) return null;\n      return this._dom.querySelector(this._doc, \"meta[\".concat(attrSelector, \"]\")) || null;\n    }\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n\n  }, {\n    key: \"getTags\",\n    value: function getTags(attrSelector) {\n      if (!attrSelector) return [];\n      /** @type {?} */\n\n      var list\n      /*NodeList*/\n      = this._dom.querySelectorAll(this._doc, \"meta[\".concat(attrSelector, \"]\"));\n\n      return list ? [].slice.call(list) : [];\n    }\n    /**\n     * @param {?} tag\n     * @param {?=} selector\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateTag\",\n    value: function updateTag(tag, selector) {\n      if (!tag) return null;\n      selector = selector || this._parseSelector(tag);\n      /** @type {?} */\n\n      var meta =\n      /** @type {?} */\n      this.getTag(selector);\n\n      if (meta) {\n        return this._setMetaElementAttributes(tag, meta);\n      }\n\n      return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeTag\",\n    value: function removeTag(attrSelector) {\n      this.removeTagElement(\n      /** @type {?} */\n      this.getTag(attrSelector));\n    }\n    /**\n     * @param {?} meta\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeTagElement\",\n    value: function removeTagElement(meta) {\n      if (meta) {\n        this._dom.remove(meta);\n      }\n    }\n    /**\n     * @private\n     * @param {?} meta\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getOrCreateElement\",\n    value: function _getOrCreateElement(meta) {\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!forceCreation) {\n        /** @type {?} */\n        var selector = this._parseSelector(meta);\n        /** @type {?} */\n\n\n        var elem =\n        /** @type {?} */\n        this.getTag(selector); // It's allowed to have multiple elements with the same name so it's not enough to\n        // just check that element with the same name already present on the page. We also need to\n        // check if element has tag attributes\n\n        if (elem && this._containsAttributes(meta, elem)) return elem;\n      }\n      /** @type {?} */\n\n\n      var element =\n      /** @type {?} */\n      this._dom.createElement('meta');\n\n      this._setMetaElementAttributes(meta, element);\n      /** @type {?} */\n\n\n      var head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n\n      this._dom.appendChild(head, element);\n\n      return element;\n    }\n    /**\n     * @private\n     * @param {?} tag\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setMetaElementAttributes\",\n    value: function _setMetaElementAttributes(tag, el) {\n      var _this16 = this;\n\n      Object.keys(tag).forEach(function (prop) {\n        return _this16._dom.setAttribute(el, prop, tag[prop]);\n      });\n      return el;\n    }\n    /**\n     * @private\n     * @param {?} tag\n     * @return {?}\n     */\n\n  }, {\n    key: \"_parseSelector\",\n    value: function _parseSelector(tag) {\n      /** @type {?} */\n      var attr = tag.name ? 'name' : 'property';\n      return \"\".concat(attr, \"=\\\"\").concat(tag[attr], \"\\\"\");\n    }\n    /**\n     * @private\n     * @param {?} tag\n     * @param {?} elem\n     * @return {?}\n     */\n\n  }, {\n    key: \"_containsAttributes\",\n    value: function _containsAttributes(tag, elem) {\n      var _this17 = this;\n\n      return Object.keys(tag).every(function (key) {\n        return _this17._dom.getAttribute(elem, key) === tag[key];\n      });\n    }\n  }]);\n\n  return Meta;\n}();\n\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT$1));\n};\n\nMeta.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: Meta,\n  factory: function Meta_Factory(t) {\n    var r = null;\n\n    if (t) {\n      r = new t();\n    } else {\n      r = createMeta();\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nMeta.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT$1]\n    }]\n  }];\n};\n/** @nocollapse */\n\n\nMeta.ngInjectableDef = defineInjectable({\n  factory: createMeta,\n  token: Meta,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT$1]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Factory to create Title service.\n * @return {?}\n */\n\n\nfunction createTitle() {\n  return new Title(inject(DOCUMENT$1));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * \\@publicApi\n */\n\n\nvar Title = /*#__PURE__*/function () {\n  /**\n   * @param {?} _doc\n   */\n  function Title(_doc) {\n    _classCallCheck(this, Title);\n\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   * @return {?}\n   */\n\n\n  _createClass(Title, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      return getDOM().getTitle(this._doc);\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param {?} newTitle\n     * @return {?}\n     */\n\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(newTitle) {\n      getDOM().setTitle(this._doc, newTitle);\n    }\n  }]);\n\n  return Title;\n}();\n\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT$1));\n};\n\nTitle.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: Title,\n  factory: function Title_Factory(t) {\n    var r = null;\n\n    if (t) {\n      r = new t();\n    } else {\n      r = createTitle();\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nTitle.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT$1]\n    }]\n  }];\n};\n/** @nocollapse */\n\n\nTitle.ngInjectableDef = defineInjectable({\n  factory: createTitle,\n  token: Title,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT$1]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @type {?} */\n\n\nvar win = typeof window !== 'undefined' && window ||\n/** @type {?} */\n{};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar ChangeDetectionPerfRecord =\n/**\n * @param {?} msPerTick\n * @param {?} numTicks\n */\nfunction ChangeDetectionPerfRecord(msPerTick, numTicks) {\n  _classCallCheck(this, ChangeDetectionPerfRecord);\n\n  this.msPerTick = msPerTick;\n  this.numTicks = numTicks;\n};\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\n\n\nvar AngularProfiler = /*#__PURE__*/function () {\n  /**\n   * @param {?} ref\n   */\n  function AngularProfiler(ref) {\n    _classCallCheck(this, AngularProfiler);\n\n    this.appRef = ref.injector.get(ApplicationRef);\n  } // tslint:disable:no-console\n\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  _createClass(AngularProfiler, [{\n    key: \"timeChangeDetection\",\n    value: function timeChangeDetection(config) {\n      /** @type {?} */\n      var record = config && config['record'];\n      /** @type {?} */\n\n      var profileName = 'Change Detection'; // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n\n      /** @type {?} */\n\n      var isProfilerAvailable = win.console.profile != null;\n\n      if (record && isProfilerAvailable) {\n        win.console.profile(profileName);\n      }\n      /** @type {?} */\n\n\n      var start = getDOM().performanceNow();\n      /** @type {?} */\n\n      var numTicks = 0;\n\n      while (numTicks < 5 || getDOM().performanceNow() - start < 500) {\n        this.appRef.tick();\n        numTicks++;\n      }\n      /** @type {?} */\n\n\n      var end = getDOM().performanceNow();\n\n      if (record && isProfilerAvailable) {\n        win.console.profileEnd(profileName);\n      }\n      /** @type {?} */\n\n\n      var msPerTick = (end - start) / numTicks;\n      win.console.log(\"ran \".concat(numTicks, \" change detection cycles\"));\n      win.console.log(\"\".concat(msPerTick.toFixed(2), \" ms per check\"));\n      return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n  }]);\n\n  return AngularProfiler;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * \\@publicApi\n * @template T\n * @param {?} ref\n * @return {?}\n */\n\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * \\@publicApi\n * @return {?}\n */\n\n\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} text\n * @return {?}\n */\n\n\nfunction escapeHtml(text) {\n  /** @type {?} */\n  var escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, function (s) {\n    return escapedText[s];\n  });\n}\n/**\n * @param {?} text\n * @return {?}\n */\n\n\nfunction unescapeHtml(text) {\n  /** @type {?} */\n  var unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, function (s) {\n    return unescapedText[s];\n  });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * \\@publicApi\n * @template T\n * @param {?} key\n * @return {?}\n */\n\n\nfunction makeStateKey(key) {\n  return (\n    /** @type {?} */\n    key\n  );\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * \\@publicApi\n */\n\n\nvar TransferState = /*#__PURE__*/function () {\n  function TransferState() {\n    _classCallCheck(this, TransferState);\n\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /**\n   * \\@internal\n   * @param {?} initState\n   * @return {?}\n   */\n\n\n  _createClass(TransferState, [{\n    key: \"get\",\n\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     * @template T\n     * @param {?} key\n     * @param {?} defaultValue\n     * @return {?}\n     */\n    value: function get(key, defaultValue) {\n      return this.store[key] !== undefined ?\n      /** @type {?} */\n      this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     * @template T\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     * @template T\n     * @param {?} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     * @template T\n     * @param {?} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasKey\",\n    value: function hasKey(key) {\n      return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     * @template T\n     * @param {?} key\n     * @param {?} callback\n     * @return {?}\n     */\n\n  }, {\n    key: \"onSerialize\",\n    value: function onSerialize(key, callback) {\n      this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     * @return {?}\n     */\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      // Call the onSerialize callbacks and put those values into the store.\n      for (var key in this.onSerializeCallbacks) {\n        if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n          try {\n            this.store[key] = this.onSerializeCallbacks[key]();\n          } catch (e) {\n            console.warn('Exception in onSerialize callback: ', e);\n          }\n        }\n      }\n\n      return JSON.stringify(this.store);\n    }\n  }], [{\n    key: \"init\",\n    value: function init(initState) {\n      /** @type {?} */\n      var transferState = new TransferState();\n      transferState.store = initState;\n      return transferState;\n    }\n  }]);\n\n  return TransferState;\n}();\n\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\n\nTransferState.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: TransferState.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @param {?} doc\n * @param {?} appId\n * @return {?}\n */\n\n\nfunction initTransferState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n\n  /** @type {?} */\n  var script = doc.getElementById(appId + '-state');\n  /** @type {?} */\n\n  var initialState = {};\n\n  if (script && script.textContent) {\n    try {\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n\n  return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * \\@publicApi\n */\n\n\nvar BrowserTransferStateModule = function BrowserTransferStateModule() {\n  _classCallCheck(this, BrowserTransferStateModule);\n};\n\nBrowserTransferStateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function BrowserTransferStateModule_Factory(t) {\n    return new (t || BrowserTransferStateModule)();\n  },\n  providers: [{\n    provide: TransferState,\n    useFactory: initTransferState,\n    deps: [DOCUMENT$1, APP_ID]\n  }]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: TransferState,\n        useFactory: initTransferState,\n        deps: [DOCUMENT$1, APP_ID]\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Predicates for use with {\\@link DebugElement}'s query functions.\n *\n * \\@publicApi\n */\n\n\nvar By = /*#__PURE__*/function () {\n  function By() {\n    _classCallCheck(this, By);\n  }\n\n  _createClass(By, null, [{\n    key: \"all\",\n\n    /**\n     * Match all elements.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     * @return {?}\n     */\n    value: function all() {\n      return function (debugElement) {\n        return true;\n      };\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     * @param {?} selector\n     * @return {?}\n     */\n\n  }, {\n    key: \"css\",\n    value: function css(selector) {\n      return function (debugElement) {\n        return debugElement.nativeElement != null ? getDOM().elementMatches(debugElement.nativeElement, selector) : false;\n      };\n    }\n    /**\n     * Match elements that have the given directive present.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     * @param {?} type\n     * @return {?}\n     */\n\n  }, {\n    key: \"directive\",\n    value: function directive(type) {\n      return function (debugElement) {\n        return (\n          /** @type {?} */\n          debugElement.providerTokens.indexOf(type) !== -1\n        );\n      };\n    }\n  }]);\n\n  return By;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@publicApi\n * @type {?}\n */\n\n\nvar VERSION = new Version('7.2.13');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, _document as ɵangular_packages_platform_browser_platform_browser_b, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_k, createMeta as ɵangular_packages_platform_browser_platform_browser_d, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_h, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, _createNgProbe as ɵangular_packages_platform_browser_platform_browser_j, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, BrowserModule, platformBrowser, Meta, Title, disableDebugTools, enableDebugTools, BrowserTransferStateModule, TransferState, makeStateKey, By, DOCUMENT$1 as DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, DomSanitizer, VERSION, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, initDomAdapter as ɵinitDomAdapter, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserPlatformLocation as ɵBrowserPlatformLocation, TRANSITION_ID as ɵTRANSITION_ID, BrowserGetTestability as ɵBrowserGetTestability, escapeHtml as ɵescapeHtml, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, DomAdapter as ɵDomAdapter, getDOM as ɵgetDOM, setRootDomAdapter as ɵsetRootDomAdapter, DomRendererFactory2 as ɵDomRendererFactory2, NAMESPACE_URIS as ɵNAMESPACE_URIS, flattenStyles as ɵflattenStyles, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute, DomEventsPlugin as ɵDomEventsPlugin, HammerGesturesPlugin as ɵHammerGesturesPlugin, KeyEventsPlugin as ɵKeyEventsPlugin, DomSharedStylesHost as ɵDomSharedStylesHost, SharedStylesHost as ɵSharedStylesHost, DomSanitizerImpl as ɵDomSanitizerImpl };","map":{"version":3,"sources":["../src/dom/dom_adapter.ts","../src/browser/generic_browser_adapter.ts","../src/browser/browser_adapter.ts","../src/dom/dom_tokens.ts","../src/browser/location/history.ts","../src/browser/location/browser_platform_location.ts","../src/browser/server-transition.ts","../src/browser/testability.ts","../src/dom/util.ts","../src/dom/debug/ng_probe.ts","../src/dom/events/event_manager.ts","../src/dom/shared_styles_host.ts","../src/dom/dom_renderer.ts","../src/dom/events/dom_events.ts","../src/dom/events/hammer_gestures.ts","../src/dom/events/key_events.ts","../src/security/dom_sanitization_service.ts","../src/browser.ts","../src/browser/meta.ts","../src/browser/title.ts","../src/browser/tools/browser.ts","../src/browser/tools/common_tools.ts","../src/browser/tools/tools.ts","../src/browser/transfer_state.ts","../src/dom/debug/by.ts","../src/version.ts","../platform-browser.ts"],"names":["global","parseCookieValue","DOCUMENT","commonDOCUMENT","core.ApplicationRef","core.NgZone","core.getDebugNode","core.APP_INITIALIZER","core.NgProbeToken","core.Optional","Console","_sanitizeHtml","_sanitizeStyle","_sanitizeUrl","PLATFORM_BROWSER_ID","APP_ROOT","window"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\n\nlet _DOM: DomAdapter = null !;\n\nexport function getDOM() {\n  return _DOM;\n}\n\nexport function setDOM(adapter: DomAdapter) {\n  _DOM = adapter;\n}\n\nexport function setRootDomAdapter(adapter: DomAdapter) {\n  if (!_DOM) {\n    _DOM = adapter;\n  }\n}\n\n/* tslint:disable:requireParameterType */\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class DomAdapter {\n  public resourceLoaderType: Type<any> = null !;\n  abstract hasProperty(element: any, name: string): boolean;\n  abstract setProperty(el: Element, name: string, value: any): any;\n  abstract getProperty(el: Element, name: string): any;\n  abstract invoke(el: Element, methodName: string, args: any[]): any;\n\n  abstract logError(error: any): any;\n  abstract log(error: any): any;\n  abstract logGroup(error: any): any;\n  abstract logGroupEnd(): any;\n\n  /**\n   * Maps attribute names to their corresponding property names for cases\n   * where attribute name doesn't match property name.\n   */\n  get attrToPropMap(): {[key: string]: string} { return this._attrToPropMap; }\n  set attrToPropMap(value: {[key: string]: string}) { this._attrToPropMap = value; }\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _attrToPropMap !: {[key: string]: string};\n\n  abstract contains(nodeA: any, nodeB: any): boolean;\n  abstract parse(templateHtml: string): any;\n  abstract querySelector(el: any, selector: string): any;\n  abstract querySelectorAll(el: any, selector: string): any[];\n  abstract on(el: any, evt: any, listener: any): any;\n  abstract onAndCancel(el: any, evt: any, listener: any): Function;\n  abstract dispatchEvent(el: any, evt: any): any;\n  abstract createMouseEvent(eventType: any): any;\n  abstract createEvent(eventType: string): any;\n  abstract preventDefault(evt: any): any;\n  abstract isPrevented(evt: any): boolean;\n  abstract getInnerHTML(el: any): string;\n  /** Returns content if el is a <template> element, null otherwise. */\n  abstract getTemplateContent(el: any): any;\n  abstract getOuterHTML(el: any): string;\n  abstract nodeName(node: any): string;\n  abstract nodeValue(node: any): string|null;\n  abstract type(node: any): string;\n  abstract content(node: any): any;\n  abstract firstChild(el: any): Node|null;\n  abstract nextSibling(el: any): Node|null;\n  abstract parentElement(el: any): Node|null;\n  abstract childNodes(el: any): Node[];\n  abstract childNodesAsList(el: any): Node[];\n  abstract clearNodes(el: any): any;\n  abstract appendChild(el: any, node: any): any;\n  abstract removeChild(el: any, node: any): any;\n  abstract replaceChild(el: any, newNode: any, oldNode: any): any;\n  abstract remove(el: any): Node;\n  abstract insertBefore(parent: any, ref: any, node: any): any;\n  abstract insertAllBefore(parent: any, ref: any, nodes: any): any;\n  abstract insertAfter(parent: any, el: any, node: any): any;\n  abstract setInnerHTML(el: any, value: any): any;\n  abstract getText(el: any): string|null;\n  abstract setText(el: any, value: string): any;\n  abstract getValue(el: any): string;\n  abstract setValue(el: any, value: string): any;\n  abstract getChecked(el: any): boolean;\n  abstract setChecked(el: any, value: boolean): any;\n  abstract createComment(text: string): any;\n  abstract createTemplate(html: any): HTMLElement;\n  abstract createElement(tagName: any, doc?: any): HTMLElement;\n  abstract createElementNS(ns: string, tagName: string, doc?: any): Element;\n  abstract createTextNode(text: string, doc?: any): Text;\n  abstract createScriptTag(attrName: string, attrValue: string, doc?: any): HTMLElement;\n  abstract createStyleElement(css: string, doc?: any): HTMLStyleElement;\n  abstract createShadowRoot(el: any): any;\n  abstract getShadowRoot(el: any): any;\n  abstract getHost(el: any): any;\n  abstract getDistributedNodes(el: any): Node[];\n  abstract clone /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract getElementsByClassName(element: any, name: string): HTMLElement[];\n  abstract getElementsByTagName(element: any, name: string): HTMLElement[];\n  abstract classList(element: any): any[];\n  abstract addClass(element: any, className: string): any;\n  abstract removeClass(element: any, className: string): any;\n  abstract hasClass(element: any, className: string): boolean;\n  abstract setStyle(element: any, styleName: string, styleValue: string): any;\n  abstract removeStyle(element: any, styleName: string): any;\n  abstract getStyle(element: any, styleName: string): string;\n  abstract hasStyle(element: any, styleName: string, styleValue?: string): boolean;\n  abstract tagName(element: any): string;\n  abstract attributeMap(element: any): Map<string, string>;\n  abstract hasAttribute(element: any, attribute: string): boolean;\n  abstract hasAttributeNS(element: any, ns: string, attribute: string): boolean;\n  abstract getAttribute(element: any, attribute: string): string|null;\n  abstract getAttributeNS(element: any, ns: string, attribute: string): string|null;\n  abstract setAttribute(element: any, name: string, value: string): any;\n  abstract setAttributeNS(element: any, ns: string, name: string, value: string): any;\n  abstract removeAttribute(element: any, attribute: string): any;\n  abstract removeAttributeNS(element: any, ns: string, attribute: string): any;\n  abstract templateAwareRoot(el: any): any;\n  abstract createHtmlDocument(): HTMLDocument;\n  abstract getDefaultDocument(): Document;\n  abstract getBoundingClientRect(el: any): any;\n  abstract getTitle(doc: Document): string;\n  abstract setTitle(doc: Document, newTitle: string): any;\n  abstract elementMatches(n: any, selector: string): boolean;\n  abstract isTemplateElement(el: any): boolean;\n  abstract isTextNode(node: any): boolean;\n  abstract isCommentNode(node: any): boolean;\n  abstract isElementNode(node: any): boolean;\n  abstract hasShadowRoot(node: any): boolean;\n  abstract isShadowRoot(node: any): boolean;\n  abstract importIntoDoc /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract adoptNode /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract getHref(element: any): string;\n  abstract getEventKey(event: any): string;\n  abstract resolveAndSetHref(element: any, baseUrl: string, href: string): any;\n  abstract supportsDOMEvents(): boolean;\n  abstract supportsNativeShadowDOM(): boolean;\n  abstract getGlobalEventTarget(doc: Document, target: string): any;\n  abstract getHistory(): History;\n  abstract getLocation(): Location;\n  abstract getBaseHref(doc: Document): string|null;\n  abstract resetBaseElement(): void;\n  abstract getUserAgent(): string;\n  abstract setData(element: any, name: string, value: string): any;\n  abstract getComputedStyle(element: any): any;\n  abstract getData(element: any, name: string): string|null;\n  abstract supportsWebAnimation(): boolean;\n  abstract performanceNow(): number;\n  abstract getAnimationPrefix(): string;\n  abstract getTransitionEnd(): string;\n  abstract supportsAnimation(): boolean;\n\n  abstract supportsCookies(): boolean;\n  abstract getCookie(name: string): string|null;\n  abstract setCookie(name: string, value: string): any;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DomAdapter} from '../dom/dom_adapter';\n\n\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\n  private _animationPrefix: string|null = null;\n  private _transitionEnd: string|null = null;\n  constructor() {\n    super();\n    try {\n      const element = this.createElement('div', document);\n      if (this.getStyle(element, 'animationName') != null) {\n        this._animationPrefix = '';\n      } else {\n        const domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\n        for (let i = 0; i < domPrefixes.length; i++) {\n          if (this.getStyle(element, domPrefixes[i] + 'AnimationName') != null) {\n            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n            break;\n          }\n        }\n      }\n\n      const transEndEventNames: {[key: string]: string} = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend'\n      };\n\n      Object.keys(transEndEventNames).forEach((key: string) => {\n        if (this.getStyle(element, key) != null) {\n          this._transitionEnd = transEndEventNames[key];\n        }\n      });\n    } catch {\n      this._animationPrefix = null;\n      this._transitionEnd = null;\n    }\n  }\n\n  getDistributedNodes(el: HTMLElement): Node[] { return (<any>el).getDistributedNodes(); }\n  resolveAndSetHref(el: HTMLAnchorElement, baseUrl: string, href: string) {\n    el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n  }\n  supportsDOMEvents(): boolean { return true; }\n  supportsNativeShadowDOM(): boolean {\n    return typeof(<any>document.body).createShadowRoot === 'function';\n  }\n  getAnimationPrefix(): string { return this._animationPrefix ? this._animationPrefix : ''; }\n  getTransitionEnd(): string { return this._transitionEnd ? this._transitionEnd : ''; }\n  supportsAnimation(): boolean {\n    return this._animationPrefix != null && this._transitionEnd != null;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ÉµparseCookieValue as parseCookieValue} from '@angular/common';\nimport {Éµglobal as global} from '@angular/core';\n\nimport {setRootDomAdapter} from '../dom/dom_adapter';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\nconst _attrToPropMap = {\n  'class': 'className',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex',\n};\n\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap: {[k: string]: string} = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nlet nodeContains: (a: any, b: any) => boolean;\n\nif (global['Node']) {\n  nodeContains = global['Node'].prototype.contains || function(node) {\n    return !!(this.compareDocumentPosition(node) & 16);\n  };\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n  parse(templateHtml: string) { throw new Error('parse not implemented'); }\n  static makeCurrent() { setRootDomAdapter(new BrowserDomAdapter()); }\n  hasProperty(element: Node, name: string): boolean { return name in element; }\n  setProperty(el: Node, name: string, value: any) { (<any>el)[name] = value; }\n  getProperty(el: Node, name: string): any { return (<any>el)[name]; }\n  invoke(el: Node, methodName: string, args: any[]): any { (<any>el)[methodName](...args); }\n\n  // TODO(tbosch): move this into a separate environment class once we have it\n  logError(error: string): void {\n    if (window.console) {\n      if (console.error) {\n        console.error(error);\n      } else {\n        console.log(error);\n      }\n    }\n  }\n\n  log(error: string): void {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n\n  logGroup(error: string): void {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n\n  logGroupEnd(): void {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n\n  get attrToPropMap(): any { return _attrToPropMap; }\n\n  contains(nodeA: any, nodeB: any): boolean { return nodeContains.call(nodeA, nodeB); }\n  querySelector(el: HTMLElement, selector: string): any { return el.querySelector(selector); }\n  querySelectorAll(el: any, selector: string): any[] { return el.querySelectorAll(selector); }\n  on(el: Node, evt: any, listener: any) { el.addEventListener(evt, listener, false); }\n  onAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => { el.removeEventListener(evt, listener, false); };\n  }\n  dispatchEvent(el: Node, evt: any) { el.dispatchEvent(evt); }\n  createMouseEvent(eventType: string): MouseEvent {\n    const evt: MouseEvent = this.getDefaultDocument().createEvent('MouseEvent');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  createEvent(eventType: any): Event {\n    const evt: Event = this.getDefaultDocument().createEvent('Event');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  preventDefault(evt: Event) {\n    evt.preventDefault();\n    evt.returnValue = false;\n  }\n  isPrevented(evt: Event): boolean {\n    return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n  }\n  getInnerHTML(el: HTMLElement): string { return el.innerHTML; }\n  getTemplateContent(el: Node): Node|null {\n    return 'content' in el && this.isTemplateElement(el) ? (<any>el).content : null;\n  }\n  getOuterHTML(el: HTMLElement): string { return el.outerHTML; }\n  nodeName(node: Node): string { return node.nodeName; }\n  nodeValue(node: Node): string|null { return node.nodeValue; }\n  type(node: HTMLInputElement): string { return node.type; }\n  content(node: Node): Node {\n    if (this.hasProperty(node, 'content')) {\n      return (<any>node).content;\n    } else {\n      return node;\n    }\n  }\n  firstChild(el: Node): Node|null { return el.firstChild; }\n  nextSibling(el: Node): Node|null { return el.nextSibling; }\n  parentElement(el: Node): Node|null { return el.parentNode; }\n  childNodes(el: any): Node[] { return el.childNodes; }\n  childNodesAsList(el: Node): any[] {\n    const childNodes = el.childNodes;\n    const res = new Array(childNodes.length);\n    for (let i = 0; i < childNodes.length; i++) {\n      res[i] = childNodes[i];\n    }\n    return res;\n  }\n  clearNodes(el: Node) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n  appendChild(el: Node, node: Node) { el.appendChild(node); }\n  removeChild(el: Node, node: Node) { el.removeChild(node); }\n  replaceChild(el: Node, newChild: Node, oldChild: Node) { el.replaceChild(newChild, oldChild); }\n  remove(node: Node): Node {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    return node;\n  }\n  insertBefore(parent: Node, ref: Node, node: Node) { parent.insertBefore(node, ref); }\n  insertAllBefore(parent: Node, ref: Node, nodes: Node[]) {\n    nodes.forEach((n: any) => parent.insertBefore(n, ref));\n  }\n  insertAfter(parent: Node, ref: Node, node: any) { parent.insertBefore(node, ref.nextSibling); }\n  setInnerHTML(el: Element, value: string) { el.innerHTML = value; }\n  getText(el: Node): string|null { return el.textContent; }\n  setText(el: Node, value: string) { el.textContent = value; }\n  getValue(el: any): string { return el.value; }\n  setValue(el: any, value: string) { el.value = value; }\n  getChecked(el: any): boolean { return el.checked; }\n  setChecked(el: any, value: boolean) { el.checked = value; }\n  createComment(text: string): Comment { return this.getDefaultDocument().createComment(text); }\n  createTemplate(html: any): HTMLElement {\n    const t = this.getDefaultDocument().createElement('template');\n    t.innerHTML = html;\n    return t;\n  }\n  createElement(tagName: string, doc?: Document): HTMLElement {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createElementNS(ns: string, tagName: string, doc?: Document): Element {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElementNS(ns, tagName);\n  }\n  createTextNode(text: string, doc?: Document): Text {\n    doc = doc || this.getDefaultDocument();\n    return doc.createTextNode(text);\n  }\n  createScriptTag(attrName: string, attrValue: string, doc?: Document): HTMLScriptElement {\n    doc = doc || this.getDefaultDocument();\n    const el = <HTMLScriptElement>doc.createElement('SCRIPT');\n    el.setAttribute(attrName, attrValue);\n    return el;\n  }\n  createStyleElement(css: string, doc?: Document): HTMLStyleElement {\n    doc = doc || this.getDefaultDocument();\n    const style = <HTMLStyleElement>doc.createElement('style');\n    this.appendChild(style, this.createTextNode(css, doc));\n    return style;\n  }\n  createShadowRoot(el: HTMLElement): DocumentFragment { return (<any>el).createShadowRoot(); }\n  getShadowRoot(el: HTMLElement): DocumentFragment { return (<any>el).shadowRoot; }\n  getHost(el: HTMLElement): HTMLElement { return (<any>el).host; }\n  clone(node: Node): Node { return node.cloneNode(true); }\n  getElementsByClassName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByClassName(name);\n  }\n  getElementsByTagName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByTagName(name);\n  }\n  classList(element: any): any[] { return Array.prototype.slice.call(element.classList, 0); }\n  addClass(element: any, className: string) { element.classList.add(className); }\n  removeClass(element: any, className: string) { element.classList.remove(className); }\n  hasClass(element: any, className: string): boolean {\n    return element.classList.contains(className);\n  }\n  setStyle(element: any, styleName: string, styleValue: string) {\n    element.style[styleName] = styleValue;\n  }\n  removeStyle(element: any, stylename: string) {\n    // IE requires '' instead of null\n    // see https://github.com/angular/angular/issues/7916\n    element.style[stylename] = '';\n  }\n  getStyle(element: any, stylename: string): string { return element.style[stylename]; }\n  hasStyle(element: any, styleName: string, styleValue?: string|null): boolean {\n    const value = this.getStyle(element, styleName) || '';\n    return styleValue ? value == styleValue : value.length > 0;\n  }\n  tagName(element: any): string { return element.tagName; }\n  attributeMap(element: any): Map<string, string> {\n    const res = new Map<string, string>();\n    const elAttrs = element.attributes;\n    for (let i = 0; i < elAttrs.length; i++) {\n      const attrib = elAttrs.item(i);\n      res.set(attrib.name, attrib.value);\n    }\n    return res;\n  }\n  hasAttribute(element: Element, attribute: string): boolean {\n    return element.hasAttribute(attribute);\n  }\n  hasAttributeNS(element: Element, ns: string, attribute: string): boolean {\n    return element.hasAttributeNS(ns, attribute);\n  }\n  getAttribute(element: Element, attribute: string): string|null {\n    return element.getAttribute(attribute);\n  }\n  getAttributeNS(element: Element, ns: string, name: string): string|null {\n    return element.getAttributeNS(ns, name);\n  }\n  setAttribute(element: Element, name: string, value: string) { element.setAttribute(name, value); }\n  setAttributeNS(element: Element, ns: string, name: string, value: string) {\n    element.setAttributeNS(ns, name, value);\n  }\n  removeAttribute(element: Element, attribute: string) { element.removeAttribute(attribute); }\n  removeAttributeNS(element: Element, ns: string, name: string) {\n    element.removeAttributeNS(ns, name);\n  }\n  templateAwareRoot(el: Node): any { return this.isTemplateElement(el) ? this.content(el) : el; }\n  createHtmlDocument(): HTMLDocument {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument(): Document { return document; }\n  getBoundingClientRect(el: Element): any {\n    try {\n      return el.getBoundingClientRect();\n    } catch {\n      return {top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0};\n    }\n  }\n  getTitle(doc: Document): string { return doc.title; }\n  setTitle(doc: Document, newTitle: string) { doc.title = newTitle || ''; }\n  elementMatches(n: any, selector: string): boolean {\n    if (this.isElementNode(n)) {\n      return n.matches && n.matches(selector) ||\n          n.msMatchesSelector && n.msMatchesSelector(selector) ||\n          n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n\n    return false;\n  }\n  isTemplateElement(el: Node): boolean {\n    return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n  }\n  isTextNode(node: Node): boolean { return node.nodeType === Node.TEXT_NODE; }\n  isCommentNode(node: Node): boolean { return node.nodeType === Node.COMMENT_NODE; }\n  isElementNode(node: Node): boolean { return node.nodeType === Node.ELEMENT_NODE; }\n  hasShadowRoot(node: any): boolean {\n    return node.shadowRoot != null && node instanceof HTMLElement;\n  }\n  isShadowRoot(node: any): boolean { return node instanceof DocumentFragment; }\n  importIntoDoc(node: Node): any { return document.importNode(this.templateAwareRoot(node), true); }\n  adoptNode(node: Node): any { return document.adoptNode(node); }\n  getHref(el: Element): string { return el.getAttribute('href') !; }\n\n  getEventKey(event: any): string {\n    let key = event.key;\n    if (key == null) {\n      key = event.keyIdentifier;\n      // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n      // Safari cf\n      // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n      if (key == null) {\n        return 'Unidentified';\n      }\n      if (key.startsWith('U+')) {\n        key = String.fromCharCode(parseInt(key.substring(2), 16));\n        if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n          // There is a bug in Chrome for numeric keypad keys:\n          // https://code.google.com/p/chromium/issues/detail?id=155654\n          // 1, 2, 3 ... are reported as A, B, C ...\n          key = (_chromeNumKeyPadMap as any)[key];\n        }\n      }\n    }\n\n    return _keyMap[key] || key;\n  }\n  getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getHistory(): History { return window.history; }\n  getLocation(): Location { return window.location; }\n  getBaseHref(doc: Document): string|null {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement(): void { baseElement = null; }\n  getUserAgent(): string { return window.navigator.userAgent; }\n  setData(element: Element, name: string, value: string) {\n    this.setAttribute(element, 'data-' + name, value);\n  }\n  getData(element: Element, name: string): string|null {\n    return this.getAttribute(element, 'data-' + name);\n  }\n  getComputedStyle(element: any): any { return getComputedStyle(element); }\n  // TODO(tbosch): move this into a separate environment class once we have it\n  supportsWebAnimation(): boolean {\n    return typeof(<any>Element).prototype['animate'] === 'function';\n  }\n  performanceNow(): number {\n    // performance.now() is not available in all browsers, see\n    // http://caniuse.com/#search=performance.now\n    return window.performance && window.performance.now ? window.performance.now() :\n                                                          new Date().getTime();\n  }\n\n  supportsCookies(): boolean { return true; }\n\n  getCookie(name: string): string|null { return parseCookieValue(document.cookie, name); }\n\n  setCookie(name: string, value: string) {\n    // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n    // not clear other cookies.\n    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n  }\n}\n\nlet baseElement: HTMLElement|null = null;\nfunction getBaseElementHref(): string|null {\n  if (!baseElement) {\n    baseElement = document.querySelector('base') !;\n    if (!baseElement) {\n      return null;\n    }\n  }\n  return baseElement.getAttribute('href');\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode: any;\nfunction relativePath(url: any): string {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n  urlParsingNode.setAttribute('href', url);\n  return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n                                                       '/' + urlParsingNode.pathname;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT as commonDOCUMENT} from '@angular/common';\nimport {InjectionToken} from '@angular/core';\n\n\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @deprecated import from `@angular/common` instead.\n * @publicApi\n */\nexport const DOCUMENT = commonDOCUMENT;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function supportsState(): boolean {\n  return !!window.history.pushState;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../../dom/dom_adapter';\nimport {DOCUMENT} from '../../dom/dom_tokens';\n\nimport {supportsState} from './history';\n\n\n\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n */\n@Injectable()\nexport class BrowserPlatformLocation extends PlatformLocation {\n  // TODO(issue/24571): remove '!'.\n  public readonly location !: Location;\n  // TODO(issue/24571): remove '!'.\n  private _history !: History;\n\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._init();\n  }\n\n  // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n  /** @internal */\n  _init() {\n    (this as{location: Location}).location = getDOM().getLocation();\n    this._history = getDOM().getHistory();\n  }\n\n  getBaseHrefFromDOM(): string { return getDOM().getBaseHref(this._doc) !; }\n\n  onPopState(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n  }\n\n  onHashChange(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n  }\n\n  get pathname(): string { return this.location.pathname; }\n  get search(): string { return this.location.search; }\n  get hash(): string { return this.location.hash; }\n  set pathname(newPath: string) { this.location.pathname = newPath; }\n\n  pushState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.pushState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  replaceState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.replaceState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  forward(): void { this._history.forward(); }\n\n  back(): void { this._history.back(); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationInitStatus, Inject, InjectionToken, Injector, StaticProvider} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nexport const TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nexport function appInitializerFactory(transitionId: string, document: any, injector: Injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = getDOM();\n      const styles: any[] =\n          Array.prototype.slice.apply(dom.querySelectorAll(document, `style[ng-transition]`));\n      styles.filter(el => dom.getAttribute(el, 'ng-transition') === transitionId)\n          .forEach(el => dom.remove(el));\n    });\n  };\n}\n\nexport const SERVER_TRANSITION_PROVIDERS: StaticProvider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInitializerFactory,\n    deps: [TRANSITION_ID, DOCUMENT, Injector],\n    multi: true\n  },\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter, Éµglobal as global} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n\nexport class BrowserGetTestability implements GetTestability {\n  static init() { setTestabilityGetter(new BrowserGetTestability()); }\n\n  addToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback: any /** TODO #9100 */) => {\n      const testabilities = global['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n    }\n    return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Éµglobal as global} from '@angular/core';\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n\n\nexport function camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: string[]) => '-' + m[1].toLowerCase());\n}\n\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: string[]) => m[1].toUpperCase());\n}\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nexport function exportNgVar(name: string, value: any): void {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = global['ng'] = (global['ng'] as{[key: string]: any} | undefined) || {};\n    ng[name] = value;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as core from '@angular/core';\nimport {exportNgVar} from '../util';\n\nconst CORE_TOKENS = {\n  'ApplicationRef': core.ApplicationRef,\n  'NgZone': core.NgZone,\n};\n\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElement(element: any): core.DebugNode|null {\n  return core.getDebugNode(element);\n}\n\nexport function _createNgProbe(coreTokens: core.NgProbeToken[]): any {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, {...CORE_TOKENS, ..._ngProbeTokensToMap(coreTokens || [])});\n  return () => inspectNativeElement;\n}\n\nfunction _ngProbeTokensToMap(tokens: core.NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS: core.Provider[] = [\n  {\n    provide: core.APP_INITIALIZER,\n    useFactory: _createNgProbe,\n    deps: [\n      [core.NgProbeToken, new core.Optional()],\n    ],\n    multi: true,\n  },\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>('EventManagerPlugins');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n@Injectable()\nexport class EventManager {\n  private _plugins: EventManagerPlugin[];\n  private _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(@Inject(EVENT_MANAGER_PLUGINS) plugins: EventManagerPlugin[], private _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   */\n  addGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone(): NgZone { return this._zone; }\n\n  /** @internal */\n  _findPluginFor(eventName: string): EventManagerPlugin {\n    const plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n}\n\nexport abstract class EventManagerPlugin {\n  constructor(private _doc: any) {}\n\n  // TODO(issue/24571): remove '!'.\n  manager !: EventManager;\n\n  abstract supports(eventName: string): boolean;\n\n  abstract addEventListener(element: HTMLElement, eventName: string, handler: Function): Function;\n\n  addGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const target: HTMLElement = getDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {getDOM} from './dom_adapter';\nimport {DOCUMENT} from './dom_tokens';\n\n@Injectable()\nexport class SharedStylesHost {\n  /** @internal */\n  protected _stylesSet = new Set<string>();\n\n  addStyles(styles: string[]): void {\n    const additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions: Set<string>): void {}\n\n  getAllStyles(): string[] { return Array.from(this._stylesSet); }\n}\n\n@Injectable()\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\n  private _hostNodes = new Set<Node>();\n  private _styleNodes = new Set<Node>();\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._hostNodes.add(_doc.head);\n  }\n\n  private _addStylesToHost(styles: Set<string>, host: Node): void {\n    styles.forEach((style: string) => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode: Node): void {\n    this._addStylesToHost(this._stylesSet, hostNode);\n    this._hostNodes.add(hostNode);\n  }\n\n  removeHost(hostNode: Node): void { this._hostNodes.delete(hostNode); }\n\n  onStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n\n  ngOnDestroy(): void { this._styleNodes.forEach(styleNode => getDOM().remove(styleNode)); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_ID, Inject, Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {EventManager} from './events/event_manager';\nimport {DomSharedStylesHost} from './shared_styles_host';\n\nexport const NAMESPACE_URIS: {[ns: string]: string} = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\n\nconst COMPONENT_REGEX = /%COMP%/g;\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function flattenStyles(\n    compId: string, styles: Array<any|any[]>, target: string[]): string[] {\n  for (let i = 0; i < styles.length; i++) {\n    let style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler: Function): Function {\n  return (event: any) => {\n    const allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n  };\n}\n\n@Injectable()\nexport class DomRendererFactory2 implements RendererFactory2 {\n  private rendererByCompId = new Map<string, Renderer2>();\n  private defaultRenderer: Renderer2;\n\n  constructor(\n      private eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      @Inject(APP_ID) private appId: string) {\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  createRenderer(element: any, type: RendererType2|null): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer = new EmulatedEncapsulationDomRenderer2(\n              this.eventManager, this.sharedStylesHost, type, this.appId);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        (<EmulatedEncapsulationDomRenderer2>renderer).applyToHost(element);\n        return renderer;\n      }\n      case ViewEncapsulation.Native:\n      case ViewEncapsulation.ShadowDom:\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const styles = flattenStyles(type.id, type.styles, []);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\n\n  begin() {}\n  end() {}\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n\n  constructor(private eventManager: EventManager) {}\n\n  destroy(): void {}\n\n  destroyNode: null;\n\n  createElement(name: string, namespace?: string): any {\n    if (namespace) {\n      return document.createElementNS(NAMESPACE_URIS[namespace], name);\n    }\n\n    return document.createElement(name);\n  }\n\n  createComment(value: string): any { return document.createComment(value); }\n\n  createText(value: string): any { return document.createTextNode(value); }\n\n  appendChild(parent: any, newChild: any): void { parent.appendChild(newChild); }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    let el: any = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n\n  parentNode(node: any): any { return node.parentNode; }\n\n  nextSibling(node: any): any { return node.nextSibling; }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      name = `${namespace}:${name}`;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el: any, name: string): void { el.classList.add(name); }\n\n  removeClass(el: any, name: string): void { el.classList.remove(name); }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.setProperty(\n          style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node: any, value: string): void { node.nodeValue = value; }\n\n  listen(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return <() => void>this.eventManager.addGlobalEventListener(\n          target, event, decoratePreventDefault(callback));\n    }\n    return <() => void>this.eventManager.addEventListener(\n               target, event, decoratePreventDefault(callback)) as() => void;\n  }\n}\n\nconst AT_CHARCODE = '@'.charCodeAt(0);\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\n        `Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(\n      eventManager: EventManager, sharedStylesHost: DomSharedStylesHost,\n      private component: RendererType2, appId: string) {\n    super(eventManager);\n    const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n\n  applyToHost(element: any) { super.setAttribute(element, this.hostAttr, ''); }\n\n  createElement(parent: any, name: string): Element {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  private shadowRoot: any;\n\n  constructor(\n      eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      private hostEl: any, private component: RendererType2) {\n    super(eventManager);\n    if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n      this.shadowRoot = (hostEl as any).attachShadow({mode: 'open'});\n    } else {\n      this.shadowRoot = (hostEl as any).createShadowRoot();\n    }\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  private nodeOrShadowRoot(node: any): any { return node === this.hostEl ? this.shadowRoot : node; }\n\n  destroy() { this.sharedStylesHost.removeHost(this.shadowRoot); }\n\n  appendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  parentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPlatformServer} from '@angular/common';\nimport {Inject, Injectable, NgZone, Optional, PLATFORM_ID} from '@angular/core';\n\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nconst __symbol__ =\n    (typeof Zone !== 'undefined') && (Zone as any)['__symbol__'] || function(v: string): string {\n      return '__zone_symbol__' + v;\n    };\nconst ADD_EVENT_LISTENER: 'addEventListener' = __symbol__('addEventListener');\nconst REMOVE_EVENT_LISTENER: 'removeEventListener' = __symbol__('removeEventListener');\n\nconst symbolNames: {[key: string]: string} = {};\n\nconst FALSE = 'FALSE';\nconst ANGULAR = 'ANGULAR';\nconst NATIVE_ADD_LISTENER = 'addEventListener';\nconst NATIVE_REMOVE_LISTENER = 'removeEventListener';\n\n// use the same symbol string which is used in zone.js\nconst stopSymbol = '__zone_symbol__propagationStopped';\nconst stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\n\nconst blackListedEvents: string[] =\n    (typeof Zone !== 'undefined') && (Zone as any)[__symbol__('BLACK_LISTED_EVENTS')];\nlet blackListedMap: {[eventName: string]: string};\nif (blackListedEvents) {\n  blackListedMap = {};\n  blackListedEvents.forEach(eventName => { blackListedMap[eventName] = eventName; });\n}\n\nconst isBlackListedEvent = function(eventName: string) {\n  if (!blackListedMap) {\n    return false;\n  }\n  return blackListedMap.hasOwnProperty(eventName);\n};\n\ninterface TaskData {\n  zone: any;\n  handler: Function;\n}\n\n// a global listener to handle all dom event,\n// so we do not need to create a closure every time\nconst globalListener = function(event: Event) {\n  const symbolName = symbolNames[event.type];\n  if (!symbolName) {\n    return;\n  }\n  const taskDatas: TaskData[] = this[symbolName];\n  if (!taskDatas) {\n    return;\n  }\n  const args: any = [event];\n  if (taskDatas.length === 1) {\n    // if taskDatas only have one element, just invoke it\n    const taskData = taskDatas[0];\n    if (taskData.zone !== Zone.current) {\n      // only use Zone.run when Zone.current not equals to stored zone\n      return taskData.zone.run(taskData.handler, this, args);\n    } else {\n      return taskData.handler.apply(this, args);\n    }\n  } else {\n    // copy tasks as a snapshot to avoid event handlers remove\n    // itself or others\n    const copiedTasks = taskDatas.slice();\n    for (let i = 0; i < copiedTasks.length; i++) {\n      // if other listener call event.stopImmediatePropagation\n      // just break\n      if ((event as any)[stopSymbol] === true) {\n        break;\n      }\n      const taskData = copiedTasks[i];\n      if (taskData.zone !== Zone.current) {\n        // only use Zone.run when Zone.current not equals to stored zone\n        taskData.zone.run(taskData.handler, this, args);\n      } else {\n        taskData.handler.apply(this, args);\n      }\n    }\n  }\n};\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any, private ngZone: NgZone,\n      @Optional() @Inject(PLATFORM_ID) platformId: {}|null) {\n    super(doc);\n\n    if (!platformId || !isPlatformServer(platformId)) {\n      this.patchEvent();\n    }\n  }\n\n  private patchEvent() {\n    if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n      return;\n    }\n    if ((Event.prototype as any)[stopMethodSymbol]) {\n      // already patched by zone.js\n      return;\n    }\n    const delegate = (Event.prototype as any)[stopMethodSymbol] =\n        Event.prototype.stopImmediatePropagation;\n    Event.prototype.stopImmediatePropagation = function() {\n      if (this) {\n        this[stopSymbol] = true;\n      }\n\n      // should call native delegate in case\n      // in some environment part of the application\n      // will not use the patched Event\n      delegate && delegate.apply(this, arguments);\n    };\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean { return true; }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    /**\n     * This code is about to add a listener to the DOM. If Zone.js is present, than\n     * `addEventListener` has been patched. The patched code adds overhead in both\n     * memory and speed (3x slower) than native. For this reason if we detect that\n     * Zone.js is present we use a simple version of zone aware addEventListener instead.\n     * The result is faster registration and the zone will be restored.\n     * But ZoneSpec.onScheduleTask, ZoneSpec.onInvokeTask, ZoneSpec.onCancelTask\n     * will not be invoked\n     * We also do manual zone restoration in element.ts renderEventHandlerClosure method.\n     *\n     * NOTE: it is possible that the element is from different iframe, and so we\n     * have to check before we execute the method.\n     */\n    const self = this;\n    const zoneJsLoaded = element[ADD_EVENT_LISTENER];\n    let callback: EventListener = handler as EventListener;\n    // if zonejs is loaded and current zone is not ngZone\n    // we keep Zone.current on target for later restoration.\n    if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n      let symbolName = symbolNames[eventName];\n      if (!symbolName) {\n        symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n      }\n      let taskDatas: TaskData[] = (element as any)[symbolName];\n      const globalListenerRegistered = taskDatas && taskDatas.length > 0;\n      if (!taskDatas) {\n        taskDatas = (element as any)[symbolName] = [];\n      }\n\n      const zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n      if (taskDatas.length === 0) {\n        taskDatas.push({zone: zone, handler: callback});\n      } else {\n        let callbackRegistered = false;\n        for (let i = 0; i < taskDatas.length; i++) {\n          if (taskDatas[i].handler === callback) {\n            callbackRegistered = true;\n            break;\n          }\n        }\n        if (!callbackRegistered) {\n          taskDatas.push({zone: zone, handler: callback});\n        }\n      }\n\n      if (!globalListenerRegistered) {\n        element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n      }\n    } else {\n      element[NATIVE_ADD_LISTENER](eventName, callback, false);\n    }\n    return () => this.removeEventListener(element, eventName, callback);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    let underlyingRemove = target[REMOVE_EVENT_LISTENER];\n    // zone.js not loaded, use native removeEventListener\n    if (!underlyingRemove) {\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    let symbolName = symbolNames[eventName];\n    let taskDatas: TaskData[] = symbolName && target[symbolName];\n    if (!taskDatas) {\n      // addEventListener not using patched version\n      // just call native removeEventListener\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    // fix issue 20532, should be able to remove\n    // listener which was added inside of ngZone\n    let found = false;\n    for (let i = 0; i < taskDatas.length; i++) {\n      // remove listener from taskDatas if the callback equals\n      if (taskDatas[i].handler === callback) {\n        found = true;\n        taskDatas.splice(i, 1);\n        break;\n      }\n    }\n    if (found) {\n      if (taskDatas.length === 0) {\n        // all listeners are removed, we can remove the globalListener from target\n        underlyingRemove.apply(target, [eventName, globalListener, false]);\n      }\n    } else {\n      // not found in taskDatas, the callback may be added inside of ngZone\n      // use native remove listener to remove the callback\n      target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken, Optional, ÉµConsole as Console} from '@angular/core';\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n};\n\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @publicApi\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\n\n/**\n * Function that loads HammerJS, returning a promise that is resolved once HammerJs is loaded.\n *\n * @publicApi\n */\nexport type HammerLoader = () => Promise<void>;\n\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nexport const HAMMER_LOADER = new InjectionToken<HammerLoader>('HammerLoader');\n\nexport interface HammerInstance {\n  on(eventName: string, callback?: Function): void;\n  off(eventName: string, callback?: Function): void;\n  destroy?(): void;\n}\n\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n@Injectable()\nexport class HammerGestureConfig {\n  /**\n   * A set of supported event names for gestures to be used in Angular.\n   * Angular supports all built-in recognizers, as listed in\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  events: string[] = [];\n\n  /**\n  * Maps gesture event names to a set of configuration options\n  * that specify overrides to the default values for specific properties.\n  *\n  * The key is a supported event name to be configured,\n  * and the options object contains a set of properties, with override values\n  * to be applied to the named recognizer event.\n  * For example, to disable recognition of the rotate event, specify\n  *  `{\"rotate\": {\"enable\": false}}`.\n  *\n  * Properties that are not present take the HammerJS default values.\n  * For information about which properties are supported for which events,\n  * and their allowed and default values, see\n  * [HammerJS documentation](http://hammerjs.github.io/).\n  *\n  */\n  overrides: {[key: string]: Object} = {};\n\n  /**\n   * Properties whose default values can be overridden for a given event.\n   * Different sets of properties apply to different events.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  options?: {\n    cssProps?: any; domEvents?: boolean; enable?: boolean | ((manager: any) => boolean);\n    preset?: any[];\n    touchAction?: string;\n    recognizers?: any[];\n    inputClass?: any;\n    inputTarget?: EventTarget;\n  };\n\n  /**\n   * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new Hammer !(element, this.options);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n}\n\n@Injectable()\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any,\n      @Inject(HAMMER_GESTURE_CONFIG) private _config: HammerGestureConfig, private console: Console,\n      @Optional() @Inject(HAMMER_LOADER) private loader?: HammerLoader|null) {\n    super(doc);\n  }\n\n  supports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!(window as any).Hammer && !this.loader) {\n      this.console.warn(\n          `The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n          `loaded and no custom loader has been specified.`);\n      return false;\n    }\n\n    return true;\n  }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!(window as any).Hammer && this.loader) {\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister: Function = () => { cancelRegistration = true; };\n\n      this.loader()\n          .then(() => {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!(window as any).Hammer) {\n              this.console.warn(\n                  `The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n              deregister = () => {};\n              return;\n            }\n\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to removal.\n              deregister = this.addEventListener(element, eventName, handler);\n            }\n          })\n          .catch(() => {\n            this.console.warn(\n                `The \"${eventName}\" event cannot be bound because the custom ` +\n                `Hammer.JS loader failed.`);\n            deregister = () => {};\n          });\n\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => { deregister(); };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() { handler(eventObj); });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName: string): boolean { return this._config.events.indexOf(eventName) > -1; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n@Injectable()\nexport class KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(@Inject(DOCUMENT) doc: any) { super(doc); }\n\n  /**\n    * Reports whether a named key event is supported.\n    * @param eventName The event name to query.\n    * @return True if the named key event is supported.\n   */\n  supports(eventName: string): boolean { return KeyEventsPlugin.parseEventName(eventName) != null; }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n  */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName) !;\n\n    const outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  static parseEventName(eventName: string): {[key: string]: string}|null {\n    const parts: string[] = eventName.toLowerCase().split('.');\n\n    const domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop() !);\n\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    const result: {[k: string]: string} = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  static getEventFullKey(event: KeyboardEvent): string {\n    let fullKey = '';\n    let key = getDOM().getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space';  // for readability\n    } else if (key === '.') {\n      key = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey: any, handler: Function, zone: NgZone): Function {\n    return (event: any /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Sanitizer, SecurityContext, Éµ_sanitizeHtml as _sanitizeHtml, Éµ_sanitizeStyle as _sanitizeStyle, Éµ_sanitizeUrl as _sanitizeUrl} from '@angular/core';\n\nimport {DOCUMENT} from '../dom/dom_tokens';\n\nexport {SecurityContext};\n\n\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @publicApi\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @publicApi\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @publicApi\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @publicApi\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @publicApi\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @publicApi\n */\nexport interface SafeResourceUrl extends SafeValue {}\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\nexport abstract class DomSanitizer implements Sanitizer {\n  /**\n   * Sanitizes a value for use in the given SecurityContext.\n   *\n   * If value is trusted for the context, this method will unwrap the contained safe value and use\n   * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n   * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n   * is responsible to make sure that the value can definitely be safely used in the given context.\n   */\n  abstract sanitize(context: SecurityContext, value: SafeValue|string|null): string|null;\n\n  /**\n   * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n   * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n   * leave safe HTML intact, so in most situations this method should not be used.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustHtml(value: string): SafeHtml;\n\n  /**\n   * Bypass security and trust the given value to be safe style value (CSS).\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustStyle(value: string): SafeStyle;\n\n  /**\n   * Bypass security and trust the given value to be safe JavaScript.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustScript(value: string): SafeScript;\n\n  /**\n   * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n   * in hyperlinks or `<img src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustUrl(value: string): SafeUrl;\n\n  /**\n   * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n   * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl;\n}\n\n\n@Injectable()\nexport class DomSanitizerImpl extends DomSanitizer {\n  constructor(@Inject(DOCUMENT) private _doc: any) { super(); }\n\n  sanitize(ctx: SecurityContext, value: SafeValue|string|null): string|null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value as string;\n      case SecurityContext.HTML:\n        if (value instanceof SafeHtmlImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'HTML');\n        return _sanitizeHtml(this._doc, String(value));\n      case SecurityContext.STYLE:\n        if (value instanceof SafeStyleImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Style');\n        return _sanitizeStyle(value as string);\n      case SecurityContext.SCRIPT:\n        if (value instanceof SafeScriptImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Script');\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n          // Allow resource URLs in URL contexts, they are strictly more trusted.\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'URL');\n        return _sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (value instanceof SafeResourceUrlImpl) {\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'ResourceURL');\n        throw new Error(\n            'unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n    }\n  }\n\n  private checkNotSafeValue(value: any, expectedType: string) {\n    if (value instanceof SafeValueImpl) {\n      throw new Error(\n          `Required a safe ${expectedType}, got a ${value.getTypeName()} ` +\n          `(see http://g.co/ng/security#xss)`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value: string): SafeHtml { return new SafeHtmlImpl(value); }\n  bypassSecurityTrustStyle(value: string): SafeStyle { return new SafeStyleImpl(value); }\n  bypassSecurityTrustScript(value: string): SafeScript { return new SafeScriptImpl(value); }\n  bypassSecurityTrustUrl(value: string): SafeUrl { return new SafeUrlImpl(value); }\n  bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return new SafeResourceUrlImpl(value);\n  }\n}\n\nabstract class SafeValueImpl implements SafeValue {\n  constructor(public changingThisBreaksApplicationSecurity: string) {\n    // empty\n  }\n\n  abstract getTypeName(): string;\n\n  toString() {\n    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity}` +\n        ` (see http://g.co/ng/security#xss)`;\n  }\n}\n\nclass SafeHtmlImpl extends SafeValueImpl implements SafeHtml {\n  getTypeName() { return 'HTML'; }\n}\nclass SafeStyleImpl extends SafeValueImpl implements SafeStyle {\n  getTypeName() { return 'Style'; }\n}\nclass SafeScriptImpl extends SafeValueImpl implements SafeScript {\n  getTypeName() { return 'Script'; }\n}\nclass SafeUrlImpl extends SafeValueImpl implements SafeUrl {\n  getTypeName() { return 'URL'; }\n}\nclass SafeResourceUrlImpl extends SafeValueImpl implements SafeResourceUrl {\n  getTypeName() { return 'ResourceURL'; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, PlatformLocation, ÉµPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, ErrorHandler, Inject, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, RendererFactory2, Sanitizer, SkipSelf, StaticProvider, Testability, createPlatformFactory, platformCore, ÉµAPP_ROOT as APP_ROOT, ÉµConsole as Console} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT]},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nexport const BROWSER_SANITIZATION_PROVIDERS: StaticProvider[] = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT]},\n];\n\n/**\n * @publicApi\n */\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  return document;\n}\n\nexport const BROWSER_MODULE_PROVIDERS: StaticProvider[] = [\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: APP_ROOT, useValue: true},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  {\n    provide: DomRendererFactory2,\n    useClass: DomRendererFactory2,\n    deps: [EventManager, DomSharedStylesHost, APP_ID]\n  },\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, useClass: Testability, deps: [NgZone]},\n  {provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  ELEMENT_PROBE_PROVIDERS,\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n@NgModule({providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule]})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BrowserModule) parentModule: BrowserModule|null) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, inject} from '@angular/core';\n\nimport {DomAdapter, getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n\n\n\n/**\n * Represents a meta element.\n *\n * @publicApi\n */\nexport type MetaDefinition = {\n  charset?: string; content?: string; httpEquiv?: string; id?: string; itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n} &\n{\n  // TODO(IgorMinar): this type looks wrong\n  [prop: string]: string;\n};\n\n/**\n * Factory to create Meta service.\n */\nexport function createMeta() {\n  return new Meta(inject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and add meta tags.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createMeta, deps: []})\nexport class Meta {\n  private _dom: DomAdapter;\n  constructor(@Inject(DOCUMENT) private _doc: any) { this._dom = getDOM(); }\n\n  addTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement|null {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n\n  addTags(tags: MetaDefinition[], forceCreation: boolean = false): HTMLMetaElement[] {\n    if (!tags) return [];\n    return tags.reduce((result: HTMLMetaElement[], tag: MetaDefinition) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n\n  getTag(attrSelector: string): HTMLMetaElement|null {\n    if (!attrSelector) return null;\n    return this._dom.querySelector(this._doc, `meta[${attrSelector}]`) || null;\n  }\n\n  getTags(attrSelector: string): HTMLMetaElement[] {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._dom.querySelectorAll(this._doc, `meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n\n  updateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement|null {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta: HTMLMetaElement = this.getTag(selector) !;\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n\n  removeTag(attrSelector: string): void { this.removeTagElement(this.getTag(attrSelector) !); }\n\n  removeTagElement(meta: HTMLMetaElement): void {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  private _getOrCreateElement(meta: MetaDefinition, forceCreation: boolean = false):\n      HTMLMetaElement {\n    if (!forceCreation) {\n      const selector: string = this._parseSelector(meta);\n      const elem: HTMLMetaElement = this.getTag(selector) !;\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      if (elem && this._containsAttributes(meta, elem)) return elem;\n    }\n    const element: HTMLMetaElement = this._dom.createElement('meta') as HTMLMetaElement;\n    this._setMetaElementAttributes(meta, element);\n    const head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n    this._dom.appendChild(head, element);\n    return element;\n  }\n\n  private _setMetaElementAttributes(tag: MetaDefinition, el: HTMLMetaElement): HTMLMetaElement {\n    Object.keys(tag).forEach((prop: string) => this._dom.setAttribute(el, prop, tag[prop]));\n    return el;\n  }\n\n  private _parseSelector(tag: MetaDefinition): string {\n    const attr: string = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  private _containsAttributes(tag: MetaDefinition, elem: HTMLMetaElement): boolean {\n    return Object.keys(tag).every((key: string) => this._dom.getAttribute(elem, key) === tag[key]);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, inject} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n\n/**\n * Factory to create Title service.\n */\nexport function createTitle() {\n  return new Title(inject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createTitle, deps: []})\nexport class Title {\n  constructor(@Inject(DOCUMENT) private _doc: any) {}\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle(): string { return getDOM().getTitle(this._doc); }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle: string) { getDOM().setTitle(this._doc, newTitle); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst win = typeof window !== 'undefined' && window || <any>{};\nexport {win as window};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, ComponentRef} from '@angular/core';\nimport {getDOM} from '../../dom/dom_adapter';\nimport {window} from './browser';\n\nexport class ChangeDetectionPerfRecord {\n  constructor(public msPerTick: number, public numTicks: number) {}\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nexport class AngularProfiler {\n  appRef: ApplicationRef;\n\n  constructor(ref: ComponentRef<any>) { this.appRef = ref.injector.get(ApplicationRef); }\n\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config: any): ChangeDetectionPerfRecord {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n    const isProfilerAvailable = window.console.profile != null;\n    if (record && isProfilerAvailable) {\n      window.console.profile(profileName);\n    }\n    const start = getDOM().performanceNow();\n    let numTicks = 0;\n    while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = getDOM().performanceNow();\n    if (record && isProfilerAvailable) {\n      window.console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    window.console.log(`ran ${numTicks} change detection cycles`);\n    window.console.log(`${msPerTick.toFixed(2)} ms per check`);\n\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentRef} from '@angular/core';\nimport {exportNgVar} from '../../dom/util';\nimport {AngularProfiler} from './common_tools';\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nexport function enableDebugTools<T>(ref: ComponentRef<T>): ComponentRef<T> {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nexport function disableDebugTools(): void {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_ID, Injectable, NgModule} from '@angular/core';\nimport {DOCUMENT} from '../dom/dom_tokens';\n\nexport function escapeHtml(text: string): string {\n  const escapedText: {[k: string]: string} = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;',\n  };\n  return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\n\nexport function unescapeHtml(text: string): string {\n  const unescapedText: {[k: string]: string} = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>',\n  };\n  return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n\n/**\n * A type-safe key to use with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport type StateKey<T> = string & {__not_a_string: never};\n\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport function makeStateKey<T = void>(key: string): StateKey<T> {\n  return key as StateKey<T>;\n}\n\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * @publicApi\n */\n@Injectable()\nexport class TransferState {\n  private store: {[k: string]: {} | undefined} = {};\n  private onSerializeCallbacks: {[k: string]: () => {} | undefined} = {};\n\n  /** @internal */\n  static init(initState: {}) {\n    const transferState = new TransferState();\n    transferState.store = initState;\n    return transferState;\n  }\n\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n  get<T>(key: StateKey<T>, defaultValue: T): T {\n    return this.store[key] !== undefined ? this.store[key] as T : defaultValue;\n  }\n\n  /**\n   * Set the value corresponding to a key.\n   */\n  set<T>(key: StateKey<T>, value: T): void { this.store[key] = value; }\n\n  /**\n   * Remove a key from the store.\n   */\n  remove<T>(key: StateKey<T>): void { delete this.store[key]; }\n\n  /**\n   * Test whether a key exists in the store.\n   */\n  hasKey<T>(key: StateKey<T>) { return this.store.hasOwnProperty(key); }\n\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   */\n  onSerialize<T>(key: StateKey<T>, callback: () => T): void {\n    this.onSerializeCallbacks[key] = callback;\n  }\n\n  /**\n   * Serialize the current state of the store to JSON.\n   */\n  toJson(): string {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n    return JSON.stringify(this.store);\n  }\n}\n\nexport function initTransferState(doc: Document, appId: string) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  const script = doc.getElementById(appId + '-state');\n  let initialState = {};\n  if (script && script.textContent) {\n    try {\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n  return TransferState.init(initialState);\n}\n\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n@NgModule({\n  providers: [{provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID]}],\n})\nexport class BrowserTransferStateModule {\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugElement, Predicate, Type} from '@angular/core';\nimport {getDOM} from '../../dom/dom_adapter';\n\n\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nexport class By {\n  /**\n   * Match all elements.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all(): Predicate<DebugElement> { return (debugElement) => true; }\n\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n          getDOM().elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n\n  /**\n   * Match elements that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type: Type<any>): Predicate<DebugElement> {\n    return (debugElement) => debugElement.providerTokens !.indexOf(type) !== -1;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('7.2.13');\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {BROWSER_MODULE_PROVIDERS as Éµangular_packages_platform_browser_platform_browser_c,_document as Éµangular_packages_platform_browser_platform_browser_b,errorHandler as Éµangular_packages_platform_browser_platform_browser_a} from './src/browser';\nexport {GenericBrowserDomAdapter as Éµangular_packages_platform_browser_platform_browser_k} from './src/browser/generic_browser_adapter';\nexport {createMeta as Éµangular_packages_platform_browser_platform_browser_d} from './src/browser/meta';\nexport {SERVER_TRANSITION_PROVIDERS as Éµangular_packages_platform_browser_platform_browser_i,appInitializerFactory as Éµangular_packages_platform_browser_platform_browser_h} from './src/browser/server-transition';\nexport {createTitle as Éµangular_packages_platform_browser_platform_browser_e} from './src/browser/title';\nexport {initTransferState as Éµangular_packages_platform_browser_platform_browser_f} from './src/browser/transfer_state';\nexport {_createNgProbe as Éµangular_packages_platform_browser_platform_browser_j} from './src/dom/debug/ng_probe';\nexport {EventManagerPlugin as Éµangular_packages_platform_browser_platform_browser_g} from './src/dom/events/event_manager';"]},"metadata":{},"sourceType":"module"}