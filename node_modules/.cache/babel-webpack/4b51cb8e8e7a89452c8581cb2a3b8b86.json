{"ast":null,"code":"import _inherits from \"/mnt/DATOS/Trabajos/jullerosoft/cooperativa/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/DATOS/Trabajos/jullerosoft/cooperativa/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/mnt/DATOS/Trabajos/jullerosoft/cooperativa/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/DATOS/Trabajos/jullerosoft/cooperativa/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { InjectionToken, Injectable, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, Input, HostBinding, Component, forwardRef, EventEmitter, ContentChildren, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {string} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"*\"];\n\nfunction NgWizardComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_li_2_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var step_r3 = ctx.$implicit;\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5._showSelectedStep($event, step_r3);\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelement(3, \"br\");\n    ɵngcc0.ɵɵelementStart(4, \"small\");\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var step_r3 = ctx.$implicit;\n    var i_r4 = ctx.index;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._getStepCssClass(step_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"href\", \"#step-\", i_r4, \"\", ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(step_r3.title);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(step_r3.description);\n  }\n}\n\nfunction NgWizardComponent_div_3_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_button_2_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10._showPreviousStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r7.styles.previousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.config.lang.previous);\n  }\n}\n\nfunction NgWizardComponent_div_3_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_button_3_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r12._showNextStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r8.styles.nextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.config.lang.next);\n  }\n}\n\nfunction NgWizardComponent_div_3_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_div_4_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var button_r15 = ctx.$implicit;\n      var ctx_r17 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r17._extraButtonClicked(button_r15);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var button_r15 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", button_r15.class);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(button_r15.text);\n  }\n}\n\nfunction NgWizardComponent_div_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_3_div_4_button_1_Template, 2, 2, \"button\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r9.config.toolbarSettings.toolbarExtraButtons);\n  }\n}\n\nfunction NgWizardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_3_button_2_Template, 2, 2, \"button\", 8);\n    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_button_3_Template, 2, 2, \"button\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_3_div_4_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.styles.toolbarTop);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showPreviousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showNextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showExtraButtons);\n  }\n}\n\nfunction NgWizardComponent_div_6_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_button_2_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r22._showPreviousStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r19.styles.previousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r19.config.lang.previous);\n  }\n}\n\nfunction NgWizardComponent_div_6_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_button_3_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r24._showNextStep($event);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r20.styles.nextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r20.config.lang.next);\n  }\n}\n\nfunction NgWizardComponent_div_6_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r30 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_div_4_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r30);\n      var button_r27 = ctx.$implicit;\n      var ctx_r29 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r29._extraButtonClicked(button_r27);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var button_r27 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", button_r27.class);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(button_r27.text);\n  }\n}\n\nfunction NgWizardComponent_div_6_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_6_div_4_button_1_Template, 2, 2, \"button\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r21.config.toolbarSettings.toolbarExtraButtons);\n  }\n}\n\nfunction NgWizardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_6_button_2_Template, 2, 2, \"button\", 8);\n    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_6_button_3_Template, 2, 2, \"button\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_6_div_4_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.styles.toolbarBottom);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showPreviousButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showNextButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.showExtraButtons);\n  }\n}\n\nvar TOOLBAR_POSITION = {\n  none: 'none',\n  top: 'top',\n  bottom: 'bottom',\n  both: 'both'\n};\n/** @enum {string} */\n\nvar TOOLBAR_BUTTON_POSITION = {\n  start: 'start',\n  end: 'end'\n};\n/** @enum {string} */\n\nvar THEME = {\n  default: 'default',\n  arrows: 'arrows',\n  circles: 'circles',\n  dots: 'dots'\n};\n/** @enum {string} */\n\nvar STEP_STATE = {\n  normal: 'normal',\n  disabled: 'disabled',\n  error: 'error',\n  hidden: 'hidden'\n};\n/** @enum {string} */\n\nvar STEP_STATUS = {\n  untouched: 'untouched',\n  done: 'done',\n  active: 'active'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar DEFAULT_CONFIG = {\n  selected: 0,\n  keyNavigation: true,\n  cycleSteps: false,\n  lang: {\n    next: 'Next',\n    previous: 'Previous'\n  },\n  toolbarSettings: {\n    toolbarPosition: TOOLBAR_POSITION.bottom,\n    toolbarButtonPosition: TOOLBAR_BUTTON_POSITION.end,\n    showNextButton: true,\n    showPreviousButton: true,\n    toolbarExtraButtons: []\n  },\n  anchorSettings: {\n    anchorClickable: true,\n    enableAllAnchors: false,\n    markDoneStep: true,\n    markAllPreviousStepsAsDone: true,\n    removeDoneStepOnNavigateBack: false,\n    enableAnchorOnDoneStep: true\n  },\n  theme: THEME.default\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar NG_WIZARD_CONFIG_TOKEN = new InjectionToken('ngWizardCustom.config');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// https://gist.github.com/ahtcx/0cd94e62691f539160b32ecda18af3d6\n// Merge a `source` object to a `target` recursively\n\n/**\n * @param {?} target\n * @param {?} source\n * @return {?}\n */\n\nfunction merge(target, source) {\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n  for (var _i = 0, _Object$keys = Object.keys(source); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (source[key] instanceof Object && key in target) {\n      Object.assign(source[key], merge(target[key], source[key]));\n    }\n  } // Join `target` and modified `source`\n\n\n  Object.assign(target || {}, source);\n  return target;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NgWizardService = /*#__PURE__*/function () {\n  /**\n   * @param {?} config\n   */\n  function NgWizardService(config) {\n    _classCallCheck(this, NgWizardService);\n\n    this.config = config;\n    this.defaultConfig = Object.assign({}, DEFAULT_CONFIG);\n\n    if (this.config) {\n      this.defaultConfig = merge(this.defaultConfig, this.config);\n    } // Observable sources\n\n\n    this.resetWizard = new Subject();\n    this.showNextStep = new Subject();\n    this.showPreviousStep = new Subject();\n    this.setTheme = new Subject(); // Observable streams\n\n    this.resetWizard$ = this.resetWizard.asObservable();\n    this.showNextStep$ = this.showNextStep.asObservable();\n    this.showPreviousStep$ = this.showPreviousStep.asObservable();\n    this.setTheme$ = this.setTheme.asObservable();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NgWizardService, [{\n    key: \"getDefaultConfig\",\n    value: function getDefaultConfig() {\n      return Object.assign({}, this.defaultConfig);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.resetWizard.next();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.showNextStep.next();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      this.showPreviousStep.next();\n    }\n    /**\n     * @param {?} theme\n     * @return {?}\n     */\n\n  }, {\n    key: \"theme\",\n    value: function theme(_theme) {\n      this.setTheme.next(_theme);\n    }\n  }]);\n\n  return NgWizardService;\n}();\n\nNgWizardService.ɵfac = function NgWizardService_Factory(t) {\n  return new (t || NgWizardService)(ɵngcc0.ɵɵinject(NG_WIZARD_CONFIG_TOKEN, 8));\n};\n\nNgWizardService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgWizardService,\n  factory: NgWizardService.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nNgWizardService.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_WIZARD_CONFIG_TOKEN]\n    }]\n  }];\n};\n/** @nocollapse */\n\n\nNgWizardService.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function NgWizardService_Factory() {\n    return new NgWizardService(ɵɵinject(NG_WIZARD_CONFIG_TOKEN, 8));\n  },\n  token: NgWizardService,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgWizardService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NG_WIZARD_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n */\n\n\nvar NgWizardStep = /*#__PURE__*/function () {\n  function NgWizardStep() {\n    _classCallCheck(this, NgWizardStep);\n  }\n\n  _createClass(NgWizardStep, [{\n    key: \"hidden\",\n\n    /**\n     * @return {?}\n     */\n    get: function get() {\n      return this.status != STEP_STATUS.active;\n    }\n  }]);\n\n  return NgWizardStep;\n}();\n\nNgWizardStep.ɵfac = function NgWizardStep_Factory(t) {\n  return new (t || NgWizardStep)();\n};\n\nNgWizardStep.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgWizardStep,\n  hostVars: 1,\n  hostBindings: function NgWizardStep_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"hidden\", ctx.hidden);\n    }\n  },\n  inputs: {\n    title: \"title\",\n    description: \"description\",\n    state: \"state\"\n  }\n});\nNgWizardStep.propDecorators = {\n  title: [{\n    type: Input\n  }],\n  description: [{\n    type: Input\n  }],\n  state: [{\n    type: Input\n  }],\n  hidden: [{\n    type: HostBinding,\n    args: ['hidden']\n  }]\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar NgWizardStepComponent = /*#__PURE__*/function (_NgWizardStep) {\n  _inherits(NgWizardStepComponent, _NgWizardStep);\n\n  var _super = _createSuper(NgWizardStepComponent);\n\n  function NgWizardStepComponent() {\n    _classCallCheck(this, NgWizardStepComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  return NgWizardStepComponent;\n}(NgWizardStep);\n\nNgWizardStepComponent.ɵfac = function NgWizardStepComponent_Factory(t) {\n  return ɵNgWizardStepComponent_BaseFactory(t || NgWizardStepComponent);\n};\n\nNgWizardStepComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgWizardStepComponent,\n  selectors: [[\"ng-wizard-step\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NgWizardStep,\n    useExisting: forwardRef(\n    /**\n    * @return {?}\n    */\n    function () {\n      return NgWizardStepComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"tab-pane\", \"step-content\", 2, \"display\", \"block\"]],\n  template: function NgWizardStepComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\"]\n});\nvar ɵNgWizardStepComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NgWizardStepComponent);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgWizardStepComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-wizard-step',\n      template: \"<div class=\\\"tab-pane step-content\\\" style=\\\"display: block\\\">\\n    <ng-content></ng-content>\\n</div>\",\n      providers: [{\n        provide: NgWizardStep,\n        useExisting: forwardRef(\n        /**\n        * @return {?}\n        */\n        function () {\n          return NgWizardStepComponent;\n        })\n      }],\n      styles: [\"\"]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NgWizardComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} ngService\n   */\n  function NgWizardComponent(ngService) {\n    _classCallCheck(this, NgWizardComponent);\n\n    this.ngService = ngService;\n    this.stepChanged = new EventEmitter();\n    this.themeChanged = new EventEmitter();\n    this.reseted = new EventEmitter();\n    this.styles = {};\n    this.showToolbarTop = false;\n    this.showPreviousButton = false;\n    this.showNextButton = false;\n    this.showToolbarBottom = false;\n    this.showExtraButtons = false;\n    this.current_index = null; // Active step index\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NgWizardComponent, [{\n    key: \"ngAfterContentInit\",\n\n    /**\n     * @return {?}\n     */\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this._backupStepStates();\n\n      this._init(); // Set toolbar\n\n\n      this._setToolbar(); // Assign plugin events\n\n\n      this._setEvents();\n\n      this.resetWizardWatcher = this.ngService.resetWizard$.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this._reset();\n      });\n      this.showNextStepWatcher = this.ngService.showNextStep$.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this._showNextStep();\n      });\n      this.showPreviousStepWatcher = this.ngService.showPreviousStep$.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this._showPreviousStep();\n      });\n      this.setThemeWatcher = this.ngService.setTheme$.subscribe(\n      /**\n      * @param {?} theme\n      * @return {?}\n      */\n      function (theme) {\n        _this._setTheme(theme);\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      // set config\n\n      /** @type {?} */\n      var defaultConfig = this.ngService.getDefaultConfig();\n      this.config = merge(defaultConfig, this.pConfig); // set step states\n\n      this._initSteps(); // Set the elements\n\n\n      this._initStyles(); // Show the initial step\n\n\n      this._showStep(this.config.selected);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_initSteps\",\n    value: function _initSteps() {\n      var _this2 = this;\n\n      this.steps.forEach(\n      /**\n      * @param {?} step\n      * @param {?} index\n      * @return {?}\n      */\n      function (step, index) {\n        step.index = index;\n        step.status = step.status || STEP_STATUS.untouched;\n        step.state = step.state || STEP_STATE.normal;\n      }); // Mark previous steps of the active step as done\n\n      if (this.config.selected > 0 && this.config.anchorSettings.markDoneStep && this.config.anchorSettings.markAllPreviousStepsAsDone) {\n        this.steps.forEach(\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n        function (step) {\n          if (step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden) {\n            step.status = step.index < _this2.config.selected ? STEP_STATUS.done : step.status;\n          }\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_backupStepStates\",\n    value: function _backupStepStates() {\n      this.steps.forEach(\n      /**\n      * @param {?} step\n      * @return {?}\n      */\n      function (step) {\n        step.initialStatus = step.status;\n        step.initialState = step.state;\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_restoreStepStates\",\n    value: function _restoreStepStates() {\n      this.steps.forEach(\n      /**\n      * @param {?} step\n      * @return {?}\n      */\n      function (step) {\n        step.status = step.initialStatus;\n        step.state = step.initialState;\n      });\n    } // PRIVATE FUNCTIONS\n\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_initStyles\",\n    value: function _initStyles() {\n      // Set the main element\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme; // Set anchor elements\n\n      this.styles.step = 'nav-item'; // li\n      // Make the anchor clickable\n\n      if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n        this.styles.step += ' clickable';\n      } // Set the toolbar styles\n\n\n      this.styles.toolbarTop = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-top justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;\n      this.styles.toolbarBottom = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-bottom justify-content-' + this.config.toolbarSettings.toolbarButtonPosition; // Set previous&next buttons \n\n      this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n      this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setToolbar\",\n    value: function _setToolbar() {\n      this.showToolbarTop = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.top || this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n      this.showToolbarBottom = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.bottom || this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n      this.showPreviousButton = this.config.toolbarSettings.showPreviousButton;\n      this.showNextButton = this.config.toolbarSettings.showNextButton;\n      this.showExtraButtons = this.config.toolbarSettings.toolbarExtraButtons && this.config.toolbarSettings.toolbarExtraButtons.length > 0;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setEvents\",\n    value: function _setEvents() {\n      //TODO: keyNavigation\n      // Keyboard navigation event\n      if (this.config.keyNavigation) ;\n    }\n    /**\n     * @param {?} selectedStep\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getStepCssClass\",\n    value: function _getStepCssClass(selectedStep) {\n      /** @type {?} */\n      var stepClass = this.styles.step;\n\n      switch (selectedStep.state) {\n        case STEP_STATE.disabled:\n          stepClass += ' disabled';\n          break;\n\n        case STEP_STATE.error:\n          stepClass += ' danger';\n          break;\n\n        case STEP_STATE.hidden:\n          stepClass += ' hidden';\n          break;\n      }\n\n      switch (selectedStep.status) {\n        case STEP_STATUS.done:\n          stepClass += ' done';\n          break;\n\n        case STEP_STATUS.active:\n          stepClass += ' active';\n          break;\n      }\n\n      return stepClass;\n    }\n    /**\n     * @param {?} event\n     * @param {?} selectedStep\n     * @return {?}\n     */\n\n  }, {\n    key: \"_showSelectedStep\",\n    value: function _showSelectedStep(event, selectedStep) {\n      event.preventDefault();\n\n      if (!this.config.anchorSettings.anchorClickable) {\n        return;\n      }\n\n      if (!this.config.anchorSettings.enableAnchorOnDoneStep && selectedStep.status == STEP_STATUS.done) {\n        return true;\n      }\n\n      if (selectedStep.index != this.current_index) {\n        if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n          this._showStep(selectedStep.index);\n        } else {\n          if (selectedStep.status == STEP_STATUS.done) {\n            this._showStep(selectedStep.index);\n          }\n        }\n      }\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_showNextStep\",\n    value: function _showNextStep(event) {\n      var _this3 = this;\n\n      if (event) {\n        event.preventDefault();\n      } // Find the next not disabled & hidden step\n\n      /** @type {?} */\n\n\n      var filteredSteps = this.steps.filter(\n      /**\n      * @param {?} step\n      * @return {?}\n      */\n      function (step) {\n        return step.index > (_this3.current_index == null ? -1 : _this3.current_index) && step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden;\n      });\n\n      if (filteredSteps.length == 0) {\n        if (!this.config.cycleSteps) {\n          return;\n        }\n\n        this._showStep(0);\n      } else {\n        this._showStep(filteredSteps.shift().index);\n      }\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_showPreviousStep\",\n    value: function _showPreviousStep(event) {\n      var _this4 = this;\n\n      if (event) {\n        event.preventDefault();\n      } // Find the previous not disabled & hidden step\n\n      /** @type {?} */\n\n\n      var filteredSteps = this.steps.filter(\n      /**\n      * @param {?} step\n      * @return {?}\n      */\n      function (step) {\n        return step.index < (_this4.current_index == null && _this4.config.cycleSteps ? _this4.steps.length : _this4.current_index) && step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden;\n      });\n\n      if (filteredSteps.length == 0) {\n        if (!this.config.cycleSteps) {\n          return;\n        }\n\n        this._showStep(this.steps.length - 1);\n      } else {\n        this._showStep(filteredSteps.pop().index);\n      }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"_showStep\",\n    value: function _showStep(index) {\n      // If step not found, skip\n      if (index >= this.steps.length || index < 0) {\n        return;\n      } // If current step is requested again, skip\n\n\n      if (index == this.current_index) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var selectedStep = this.steps.toArray()[index]; // If it is a disabled or hidden step, skip\n\n      if (selectedStep.state == STEP_STATE.disabled || selectedStep.state == STEP_STATE.hidden) {\n        return;\n      } // Load step content\n\n\n      this._loadStepContent(selectedStep);\n    }\n    /**\n     * @param {?} selectedStep\n     * @return {?}\n     */\n\n  }, {\n    key: \"_loadStepContent\",\n    value: function _loadStepContent(selectedStep) {\n      // Get the direction of step navigation\n\n      /** @type {?} */\n      var stepDirection = this.current_index != null && this.current_index != selectedStep.index ? this.current_index < selectedStep.index ? \"forward\" : \"backward\" : '';\n      /** @type {?} */\n\n      var stepPosition = selectedStep.index == 0 ? 'first' : selectedStep.index == this.steps.length - 1 ? 'final' : 'middle'; // Update controls\n\n      this._setAnchor(selectedStep); // Set the buttons based on the step\n\n\n      this._setButtons(selectedStep.index); // Trigger \"stepChanged\" event\n\n\n      this.stepChanged.emit({\n        step: selectedStep,\n        previousStep: this.currentStep,\n        direction: stepDirection,\n        position: stepPosition\n      }); // Update the current index\n\n      this.current_index = selectedStep.index;\n      this.currentStep = selectedStep;\n    }\n    /**\n     * @param {?} selectedStep\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setAnchor\",\n    value: function _setAnchor(selectedStep) {\n      // Current step anchor > Remove other classes and add done class\n      if (this.currentStep) {\n        this.currentStep.status = STEP_STATUS.untouched;\n\n        if (this.config.anchorSettings.markDoneStep) {\n          this.currentStep.status = STEP_STATUS.done;\n\n          if (this.config.anchorSettings.removeDoneStepOnNavigateBack) {\n            this.steps.forEach(\n            /**\n            * @param {?} step\n            * @return {?}\n            */\n            function (step) {\n              if (step.index > selectedStep.index) {\n                step.status = STEP_STATUS.untouched;\n              }\n            });\n          }\n        }\n      } // Next step anchor > Remove other classes and add active class\n\n\n      selectedStep.status = STEP_STATUS.active;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setButtons\",\n    value: function _setButtons(index) {\n      // Previous/Next Button enable/disable based on step\n      if (!this.config.cycleSteps) {\n        if (0 >= index) {\n          this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev disabled';\n        } else {\n          this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n        }\n\n        if (this.steps.length - 1 <= index) {\n          this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next disabled';\n        } else {\n          this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n        }\n      }\n    }\n    /**\n     * @param {?} button\n     * @return {?}\n     */\n\n  }, {\n    key: \"_extraButtonClicked\",\n    value: function _extraButtonClicked(button) {\n      if (button.event) {\n        button.event();\n      }\n    } // HELPER FUNCTIONS\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_keyNav\",\n    value: function _keyNav(event) {\n      // Keyboard navigation\n      switch (event.which) {\n        case 37:\n          // left\n          this._showPreviousStep(event);\n\n          event.preventDefault();\n          break;\n\n        case 39:\n          // right\n          this._showNextStep(event);\n\n          event.preventDefault();\n          break;\n\n        default:\n          return;\n        // exit this handler for other keys\n      }\n    }\n    /*\n      _showLoader() {\n        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';\n      }\n    \n      _hideLoader() {\n        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n      }\n      */\n    // PUBLIC FUNCTIONS\n\n    /**\n     * @param {?} theme\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setTheme\",\n    value: function _setTheme(theme) {\n      if (this.config.theme == theme) {\n        return false;\n      }\n\n      this.config.theme = theme;\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme; // Trigger \"themeChanged\" event\n\n      this.themeChanged.emit(this.config.theme);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_reset\",\n    value: function _reset() {\n      // Reset all elements and classes\n      this.current_index = null;\n      this.currentStep = null;\n\n      this._restoreStepStates();\n\n      this._init(); // Trigger \"reseted\" event\n\n\n      this.reseted.emit();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.resetWizardWatcher) {\n        this.resetWizardWatcher.unsubscribe();\n      }\n\n      if (this.showNextStepWatcher) {\n        this.showNextStepWatcher.unsubscribe();\n      }\n\n      if (this.showPreviousStepWatcher) {\n        this.showPreviousStepWatcher.unsubscribe();\n      }\n\n      if (this.setThemeWatcher) {\n        this.setThemeWatcher.unsubscribe();\n      }\n    }\n  }, {\n    key: \"pConfig\",\n    get: function get() {\n      return this._pConfig || {};\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    ,\n    set: function set(config) {\n      this._pConfig = config;\n    }\n  }]);\n\n  return NgWizardComponent;\n}();\n\nNgWizardComponent.ɵfac = function NgWizardComponent_Factory(t) {\n  return new (t || NgWizardComponent)(ɵngcc0.ɵɵdirectiveInject(NgWizardService));\n};\n\nNgWizardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgWizardComponent,\n  selectors: [[\"ng-wizard\"]],\n  contentQueries: function NgWizardComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgWizardStep, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.steps = _t);\n    }\n  },\n  inputs: {\n    pConfig: [\"config\", \"pConfig\"]\n  },\n  outputs: {\n    stepChanged: \"stepChanged\",\n    themeChanged: \"themeChanged\",\n    reseted: \"reseted\"\n  },\n  ngContentSelectors: _c0,\n  decls: 7,\n  vars: 4,\n  consts: [[\"id\", \"ngwizard\", 3, \"ngClass\"], [1, \"nav\", \"nav-tabs\", \"step-anchor\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"ng-wizard-container\", \"tab-content\"], [3, \"ngClass\"], [1, \"nav-link\", 3, \"href\", \"click\"], [\"role\", \"group\", 1, \"btn-group\", \"mr-2\", \"ng-wizard-btn-group\"], [\"type\", \"button\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"btn-group mr-2 ng-wizard-btn-group-extra\", \"role\", \"group\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"ngClass\", \"click\"], [\"role\", \"group\", 1, \"btn-group\", \"mr-2\", \"ng-wizard-btn-group-extra\"], [\"type\", \"button\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function NgWizardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"ul\", 1);\n      ɵngcc0.ɵɵtemplate(2, NgWizardComponent_li_2_Template, 6, 4, \"li\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_Template, 5, 4, \"div\", 3);\n      ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n      ɵngcc0.ɵɵprojection(5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, NgWizardComponent_div_6_Template, 5, 4, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.styles.main);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showToolbarTop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showToolbarBottom);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf],\n  styles: [\"\"]\n});\n/** @nocollapse */\n\nNgWizardComponent.ctorParameters = function () {\n  return [{\n    type: NgWizardService\n  }];\n};\n\nNgWizardComponent.propDecorators = {\n  steps: [{\n    type: ContentChildren,\n    args: [NgWizardStep]\n  }],\n  pConfig: [{\n    type: Input,\n    args: ['config']\n  }],\n  stepChanged: [{\n    type: Output\n  }],\n  themeChanged: [{\n    type: Output\n  }],\n  reseted: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgWizardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-wizard',\n      template: \"<div id=\\\"ngwizard\\\" [ngClass]=\\\"styles.main\\\">\\n    <ul class=\\\"nav nav-tabs step-anchor\\\">\\n        <li *ngFor=\\\"let step of steps; let i = index\\\" [ngClass]=\\\"_getStepCssClass(step)\\\">\\n            <a href=\\\"#step-{{ i }}\\\" (click)=\\\"_showSelectedStep($event, step)\\\"\\n                class=\\\"nav-link\\\">{{ step.title }}<br /><small>{{ step.description }}</small></a>\\n        </li>\\n    </ul>\\n\\n    <div *ngIf=\\\"showToolbarTop\\\" [ngClass]=\\\"styles.toolbarTop\\\">\\n        <div class=\\\"btn-group mr-2 ng-wizard-btn-group\\\" role=\\\"group\\\">\\n            <button *ngIf=\\\"showPreviousButton\\\" [ngClass]=\\\"styles.previousButton\\\" type=\\\"button\\\"\\n                (click)=\\\"_showPreviousStep($event)\\\">{{ config.lang.previous }}</button>\\n            <button *ngIf=\\\"showNextButton\\\" [ngClass]=\\\"styles.nextButton\\\" type=\\\"button\\\"\\n                (click)=\\\"_showNextStep($event)\\\">{{ config.lang.next }}</button>\\n        </div>\\n\\n        <div *ngIf=\\\"showExtraButtons\\\" class=\\\"btn-group mr-2 ng-wizard-btn-group-extra\\\" role=\\\"group\\\">\\n            <button *ngFor=\\\"let button of config.toolbarSettings.toolbarExtraButtons; let j = index\\\"\\n                [ngClass]=\\\"button.class\\\" type=\\\"button\\\" (click)=\\\"_extraButtonClicked(button)\\\">{{ button.text }}</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"ng-wizard-container tab-content\\\">\\n        <ng-content></ng-content>\\n    </div>\\n\\n    <div *ngIf=\\\"showToolbarBottom\\\" [ngClass]=\\\"styles.toolbarBottom\\\">\\n        <div class=\\\"btn-group mr-2 ng-wizard-btn-group\\\" role=\\\"group\\\">\\n            <button *ngIf=\\\"showPreviousButton\\\" [ngClass]=\\\"styles.previousButton\\\" type=\\\"button\\\"\\n                (click)=\\\"_showPreviousStep($event)\\\">{{ config.lang.previous }}</button>\\n            <button *ngIf=\\\"showNextButton\\\" [ngClass]=\\\"styles.nextButton\\\" type=\\\"button\\\"\\n                (click)=\\\"_showNextStep($event)\\\">{{ config.lang.next }}</button>\\n        </div>\\n\\n        <div *ngIf=\\\"showExtraButtons\\\" class=\\\"btn-group mr-2 ng-wizard-btn-group-extra\\\" role=\\\"group\\\">\\n            <button *ngFor=\\\"let button of config.toolbarSettings.toolbarExtraButtons; let j = index\\\"\\n                [ngClass]=\\\"button.class\\\" type=\\\"button\\\" (click)=\\\"_extraButtonClicked(button)\\\">{{ button.text }}</button>\\n        </div>\\n    </div>\\n</div>\",\n      styles: [\"\"]\n    }]\n  }], function () {\n    return [{\n      type: NgWizardService\n    }];\n  }, {\n    stepChanged: [{\n      type: Output\n    }],\n    themeChanged: [{\n      type: Output\n    }],\n    reseted: [{\n      type: Output\n    }],\n    pConfig: [{\n      type: Input,\n      args: ['config']\n    }],\n    steps: [{\n      type: ContentChildren,\n      args: [NgWizardStep]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NgWizardModule = /*#__PURE__*/function () {\n  function NgWizardModule() {\n    _classCallCheck(this, NgWizardModule);\n  }\n\n  _createClass(NgWizardModule, null, [{\n    key: \"forRoot\",\n\n    /**\n     * forRoot\n     * @param {?} ngWizardConfig\n     * @return {?} A module with its provider dependencies\n     */\n    value: function forRoot(ngWizardConfig) {\n      return {\n        ngModule: NgWizardModule,\n        providers: [{\n          provide: NG_WIZARD_CONFIG_TOKEN,\n          useValue: ngWizardConfig\n        }]\n      };\n    }\n  }]);\n\n  return NgWizardModule;\n}();\n\nNgWizardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgWizardModule\n});\nNgWizardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgWizardModule_Factory(t) {\n    return new (t || NgWizardModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgWizardModule, {\n    declarations: function declarations() {\n      return [NgWizardComponent, NgWizardStepComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgWizardComponent, NgWizardStepComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgWizardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgWizardComponent, NgWizardStepComponent],\n      exports: [NgWizardComponent, NgWizardStepComponent]\n    }]\n  }], null, null);\n})();\n\nexport { NgWizardModule, NgWizardService, STEP_STATE, THEME, TOOLBAR_BUTTON_POSITION, TOOLBAR_POSITION, NgWizardStep as ɵa, NG_WIZARD_CONFIG_TOKEN as ɵb, NgWizardComponent as ɵc, NgWizardStepComponent as ɵd };","map":{"version":3,"sources":["ng:/ng-wizard/lib/utils/enums.ts","ng:/ng-wizard/lib/utils/constants.ts","ng:/ng-wizard/lib/core/ng-wizard-config.token.ts","ng:/ng-wizard/lib/utils/functions.ts","ng:/ng-wizard/lib/core/ng-wizard.service.ts","ng:/ng-wizard/lib/utils/interfaces.ts","ng:/ng-wizard/lib/core/wizard-step/ng-wizard-step.component.ts","ng:/ng-wizard/lib/core/wizard/ng-wizard.component.ts","ng:/ng-wizard/lib/core/ng-wizard.module.ts"],"names":[],"mappings":"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","sourcesContent":["export enum TOOLBAR_POSITION {\n    none = 'none',\n    top = 'top',\n    bottom = 'bottom',\n    both = 'both'\n}\n\nexport enum TOOLBAR_BUTTON_POSITION {\n    start = 'start',\n    end = 'end'\n}\n\n// export enum TRANSITION_EFFECT {\n//     none = 'none',\n//     slide = 'slide',\n//     fade = 'fade'\n// }\n\nexport enum THEME {\n    default = 'default',\n    arrows = 'arrows',\n    circles = 'circles',\n    dots = 'dots'\n}\n\nexport enum STEP_STATE {\n    normal = 'normal',\n    disabled = 'disabled',\n    error = 'error',\n    hidden = 'hidden'\n}\n\nexport enum STEP_STATUS {\n    untouched = 'untouched',\n    done = 'done',\n    active = 'active'\n}","import { NgWizardConfig } from './interfaces';\nimport { TOOLBAR_POSITION, TOOLBAR_BUTTON_POSITION/*, TRANSITION_EFFECT*/, THEME } from './enums';\n\nexport const DEFAULT_CONFIG: NgWizardConfig = {\n    selected: 0,\n    keyNavigation: true,\n    cycleSteps: false,\n    lang: {\n        next: 'Next',\n        previous: 'Previous'\n    },\n    toolbarSettings: {\n        toolbarPosition: TOOLBAR_POSITION.bottom,\n        toolbarButtonPosition: TOOLBAR_BUTTON_POSITION.end,\n        showNextButton: true,\n        showPreviousButton: true,\n        toolbarExtraButtons: []\n    },\n    anchorSettings: {\n        anchorClickable: true,\n        enableAllAnchors: false,\n        markDoneStep: true,\n        markAllPreviousStepsAsDone: true,\n        removeDoneStepOnNavigateBack: false,\n        enableAnchorOnDoneStep: true\n    },\n    theme: THEME.default,\n};","import { InjectionToken } from '@angular/core';\nimport { NgWizardConfig } from '../utils/interfaces';\n\n\nexport const NG_WIZARD_CONFIG_TOKEN = new InjectionToken<NgWizardConfig>('ngWizardCustom.config');\n","// https://gist.github.com/ahtcx/0cd94e62691f539160b32ecda18af3d6\n// Merge a `source` object to a `target` recursively\nexport function merge(target: any, source: any) {\n    // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n    for (let key of Object.keys(source)) {\n        if (source[key] instanceof Object && key in target) {\n            Object.assign(source[key], merge(target[key], source[key]));\n        }\n    }\n\n    // Join `target` and modified `source`\n    Object.assign(target || {}, source);\n\n    return target;\n}","import { Injectable, Optional, Inject } from '@angular/core';\n\nimport { DEFAULT_CONFIG } from '../utils/constants';\nimport { NG_WIZARD_CONFIG_TOKEN } from './ng-wizard-config.token';\nimport { NgWizardConfig } from '../utils/interfaces';\nimport { Observable, Subject } from 'rxjs';\nimport { THEME } from '../utils/enums';\nimport { merge } from '../utils/functions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgWizardService {\n  resetWizard$: Observable<any>; //For internal use only.\n  showNextStep$: Observable<any>; //For internal use only.\n  showPreviousStep$: Observable<any>; //For internal use only.\n  setTheme$: Observable<THEME>; //For internal use only.\n\n  private resetWizard: Subject<any>;\n  private showNextStep: Subject<any>;\n  private showPreviousStep: Subject<any>;\n  private setTheme: Subject<THEME>;\n  private defaultConfig: NgWizardConfig;\n\n  constructor(@Optional() @Inject(NG_WIZARD_CONFIG_TOKEN) private config: NgWizardConfig) {\n    this.defaultConfig = { ...DEFAULT_CONFIG };\n    if (this.config) {\n      this.defaultConfig = merge(this.defaultConfig, this.config);\n    }\n\n    // Observable sources\n    this.resetWizard = new Subject<any>();\n    this.showNextStep = new Subject<any>();\n    this.showPreviousStep = new Subject<any>();\n    this.setTheme = new Subject<THEME>();\n\n    // Observable streams\n    this.resetWizard$ = this.resetWizard.asObservable();\n    this.showNextStep$ = this.showNextStep.asObservable();\n    this.showPreviousStep$ = this.showPreviousStep.asObservable();\n    this.setTheme$ = this.setTheme.asObservable();\n  }\n\n  getDefaultConfig(): NgWizardConfig {\n    return { ...this.defaultConfig };\n  }\n\n  reset() {\n    this.resetWizard.next();\n  }\n\n  next() {\n    this.showNextStep.next();\n  }\n\n  previous() {\n    this.showPreviousStep.next();\n  }\n\n  theme(theme: THEME) {\n    this.setTheme.next(theme);\n  }\n}\n","import { TOOLBAR_POSITION, TOOLBAR_BUTTON_POSITION,/* TRANSITION_EFFECT,*/ THEME, STEP_STATE, STEP_STATUS } from './enums';\nimport { Input, HostBinding } from '@angular/core';\n\nexport interface Language {\n    next?: string;\n    previous?: string;\n}\n\nexport interface ToolbarSettings {\n    toolbarPosition?: TOOLBAR_POSITION; // none, top, bottom, both\n    toolbarButtonPosition?: TOOLBAR_BUTTON_POSITION; // start, end\n    showNextButton?: boolean; // show/hide a Next button\n    showPreviousButton?: boolean; // show/hide a Previous button\n    toolbarExtraButtons?: ToolbarButton[]; // Extra buttons to show on toolbar, array of input/buttons elements\n}\n\nexport interface ToolbarButton {\n    text: string;\n    class: string;\n    event?: () => void;\n}\n\nexport interface AnchorSettings {\n    anchorClickable?: boolean; // Enable/Disable anchor navigation\n    enableAllAnchors?: boolean; // Activates all anchors clickable all times\n    markDoneStep?: boolean; // Add done css\n    markAllPreviousStepsAsDone?: boolean; // When a step selected, all previous steps are marked done\n    removeDoneStepOnNavigateBack?: boolean; // While navigate back done step after active step will be cleared\n    enableAnchorOnDoneStep?: boolean; // Enable/Disable the done steps navigation\n}\n\nexport interface NgWizardConfig {\n    selected?: number; // Initial selected step, 0 = first step\n    keyNavigation?: boolean; // Enable/Disable keyboard navigation(left and right keys are used if enabled)\n    cycleSteps?: boolean; // Allows to cycle the navigation of steps\n    lang?: Language; // Language variables for button\n    toolbarSettings?: ToolbarSettings;\n    anchorSettings?: AnchorSettings;\n    theme?: THEME; // theme for the wizard, related css need to include for other than default theme\n}\n\nexport abstract class NgWizardStep {\n    index: number;\n\n    @Input()\n    title: string;\n\n    @Input()\n    description: string;\n\n    @Input()\n    state?: STEP_STATE;\n    initialState?: STEP_STATE;\n\n    status?: STEP_STATUS;\n    initialStatus?: STEP_STATUS;\n\n    @HostBinding('hidden')\n    public get hidden(): boolean {\n        return this.status != STEP_STATUS.active;\n    }\n}\n\nexport interface StepChangedArgs {\n    step: NgWizardStep,\n    previousStep: NgWizardStep,\n    direction: string,\n    position: string\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { NgWizardStep } from '../../utils/interfaces';\n\n@Component({\n  selector: 'ng-wizard-step',\n  templateUrl: './ng-wizard-step.component.html',\n  styleUrls: ['./ng-wizard-step.component.css'],\n  providers: [\n    { provide: NgWizardStep, useExisting: forwardRef(() => NgWizardStepComponent) }\n  ]\n})\nexport class NgWizardStepComponent extends NgWizardStep {\n}\n","import { Component, AfterContentInit, Input, OnDestroy, EventEmitter, Output, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NgWizardService } from '../ng-wizard.service';\nimport { NgWizardConfig, NgWizardStep, ToolbarButton, StepChangedArgs } from '../../utils/interfaces';\nimport { TOOLBAR_POSITION, STEP_STATE, STEP_STATUS, THEME } from '../../utils/enums';\nimport { merge } from '../../utils/functions';\n\n@Component({\n  selector: 'ng-wizard',\n  templateUrl: './ng-wizard.component.html',\n  styleUrls: ['./ng-wizard.component.css'],\n})\nexport class NgWizardComponent implements OnDestroy, AfterContentInit {\n\n  @ContentChildren(NgWizardStep)\n  public steps: QueryList<NgWizardStep>;\n\n  _pConfig: NgWizardConfig;\n  get pConfig(): NgWizardConfig {\n    return this._pConfig || {};\n  }\n\n  @Input('config')\n  set pConfig(config: NgWizardConfig) {\n    this._pConfig = config;\n  }\n\n  config: NgWizardConfig;\n\n  @Output() stepChanged = new EventEmitter<StepChangedArgs>();\n  @Output() themeChanged = new EventEmitter<THEME>();\n  @Output() reseted = new EventEmitter<void>();\n\n  styles: {\n    main?: string;\n    step?: string;\n    previousButton?: string;\n    nextButton?: string;\n    toolbarTop?: string;\n    toolbarBottom?: string;\n  } = {};\n\n  showToolbarTop: boolean = false;\n  showPreviousButton: boolean = false;\n  showNextButton: boolean = false;\n  showToolbarBottom: boolean = false;\n  showExtraButtons: boolean = false;\n  current_index: number = null; // Active step index\n  currentStep: NgWizardStep; // Active step\n\n  resetWizardWatcher: Subscription;\n  showNextStepWatcher: Subscription;\n  showPreviousStepWatcher: Subscription;\n  setThemeWatcher: Subscription;\n\n  constructor(private ngService: NgWizardService) {\n  }\n\n  ngAfterContentInit() {\n    this._backupStepStates();\n\n    this._init();\n\n    // Set toolbar\n    this._setToolbar();\n\n    // Assign plugin events\n    this._setEvents();\n\n    this.resetWizardWatcher = this.ngService.resetWizard$\n      .subscribe(() => {\n        this._reset();\n      });\n\n    this.showNextStepWatcher = this.ngService.showNextStep$\n      .subscribe(() => {\n        this._showNextStep();\n      });\n\n    this.showPreviousStepWatcher = this.ngService.showPreviousStep$\n      .subscribe(() => {\n        this._showPreviousStep();\n      });\n\n    this.setThemeWatcher = this.ngService.setTheme$\n      .subscribe(theme => {\n        this._setTheme(theme);\n      });\n  }\n\n  _init() {\n    // set config\n    var defaultConfig = this.ngService.getDefaultConfig();\n    this.config = merge(defaultConfig, this.pConfig);\n\n    // set step states\n    this._initSteps();\n\n    // Set the elements\n    this._initStyles();\n\n    // Show the initial step\n    this._showStep(this.config.selected);\n  }\n\n  _initSteps() {\n    this.steps.forEach((step, index) => {\n      step.index = index;\n      step.status = step.status || STEP_STATUS.untouched;\n      step.state = step.state || STEP_STATE.normal;\n    });\n\n    // Mark previous steps of the active step as done\n    if (this.config.selected > 0\n      && this.config.anchorSettings.markDoneStep\n      && this.config.anchorSettings.markAllPreviousStepsAsDone) {\n\n      this.steps.forEach(step => {\n        if (step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden) {\n          step.status = step.index < this.config.selected ? STEP_STATUS.done : step.status;\n        }\n      });\n    }\n  }\n\n  _backupStepStates() {\n    this.steps.forEach(step => {\n      step.initialStatus = step.status;\n      step.initialState = step.state;\n    });\n  }\n\n  _restoreStepStates() {\n    this.steps.forEach(step => {\n      step.status = step.initialStatus;\n      step.state = step.initialState;\n    });\n  }\n\n  // PRIVATE FUNCTIONS\n  _initStyles() {\n    // Set the main element\n    this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n\n    // Set anchor elements\n    this.styles.step = 'nav-item'; // li\n\n    // Make the anchor clickable\n    if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n      this.styles.step += ' clickable';\n    }\n\n    // Set the toolbar styles\n    this.styles.toolbarTop = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-top justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;\n    this.styles.toolbarBottom = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-bottom justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;\n\n    // Set previous&next buttons \n    this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n    this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n  }\n\n  _setToolbar() {\n    this.showToolbarTop = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.top ||\n      this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n\n    this.showToolbarBottom = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.bottom ||\n      this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n\n    this.showPreviousButton = this.config.toolbarSettings.showPreviousButton;\n    this.showNextButton = this.config.toolbarSettings.showNextButton;\n\n    this.showExtraButtons = this.config.toolbarSettings.toolbarExtraButtons && this.config.toolbarSettings.toolbarExtraButtons.length > 0;\n  }\n\n  _setEvents() {\n    //TODO: keyNavigation\n    // Keyboard navigation event\n    if (this.config.keyNavigation) {\n      // $(document).keyup(function (e) {\n      //   mi._keyNav(e);\n      // });\n    }\n  }\n\n  _getStepCssClass(selectedStep: NgWizardStep) {\n    var stepClass = this.styles.step;\n\n    switch (selectedStep.state) {\n      case STEP_STATE.disabled:\n        stepClass += ' disabled';\n        break;\n      case STEP_STATE.error:\n        stepClass += ' danger';\n        break;\n      case STEP_STATE.hidden:\n        stepClass += ' hidden';\n        break;\n    }\n\n    switch (selectedStep.status) {\n      case STEP_STATUS.done:\n        stepClass += ' done';\n        break;\n      case STEP_STATUS.active:\n        stepClass += ' active';\n        break;\n    }\n\n    return stepClass;\n  }\n\n  _showSelectedStep(event: Event, selectedStep: NgWizardStep) {\n    event.preventDefault();\n\n    if (!this.config.anchorSettings.anchorClickable) {\n      return;\n    }\n\n    if (!this.config.anchorSettings.enableAnchorOnDoneStep && selectedStep.status == STEP_STATUS.done) {\n      return true;\n    }\n\n    if (selectedStep.index != this.current_index) {\n      if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n        this._showStep(selectedStep.index);\n      }\n      else {\n        if (selectedStep.status == STEP_STATUS.done) {\n          this._showStep(selectedStep.index);\n        }\n      }\n    }\n  }\n\n  _showNextStep(event?: Event) {\n    if (event) {\n      event.preventDefault();\n    }\n    // Find the next not disabled & hidden step\n    var filteredSteps = this.steps.filter(step => {\n      return step.index > (this.current_index == null ? -1 : this.current_index)\n        && step.state != STEP_STATE.disabled\n        && step.state != STEP_STATE.hidden;\n    });\n\n    if (filteredSteps.length == 0) {\n      if (!this.config.cycleSteps) {\n        return;\n      }\n\n      this._showStep(0)\n    }\n    else {\n      this._showStep(filteredSteps.shift().index)\n    }\n  }\n\n  _showPreviousStep(event?: Event) {\n    if (event) {\n      event.preventDefault();\n    }\n    // Find the previous not disabled & hidden step\n    var filteredSteps = this.steps.filter(step => {\n      return step.index < (this.current_index == null && this.config.cycleSteps ? this.steps.length : this.current_index)\n        && step.state != STEP_STATE.disabled\n        && step.state != STEP_STATE.hidden;\n    });\n\n    if (filteredSteps.length == 0) {\n      if (!this.config.cycleSteps) {\n        return;\n      }\n\n      this._showStep(this.steps.length - 1)\n    }\n    else {\n      this._showStep(filteredSteps.pop().index)\n    }\n  }\n\n  _showStep(index: number) {\n    // If step not found, skip\n    if (index >= this.steps.length || index < 0) {\n      return;\n    }\n    // If current step is requested again, skip\n    if (index == this.current_index) {\n      return;\n    }\n    var selectedStep = this.steps.toArray()[index];\n    // If it is a disabled or hidden step, skip\n    if (selectedStep.state == STEP_STATE.disabled || selectedStep.state == STEP_STATE.hidden) {\n      return;\n    }\n\n    // Load step content\n    this._loadStepContent(selectedStep);\n  }\n\n  _loadStepContent(selectedStep: NgWizardStep) {\n    // Get the direction of step navigation\n    var stepDirection = (this.current_index != null && this.current_index != selectedStep.index) ? (this.current_index < selectedStep.index ? \"forward\" : \"backward\") : '';\n    var stepPosition = (selectedStep.index == 0) ? 'first' : (selectedStep.index == this.steps.length - 1 ? 'final' : 'middle');\n\n    // Update controls\n    this._setAnchor(selectedStep);\n    // Set the buttons based on the step\n    this._setButtons(selectedStep.index);\n\n    // Trigger \"stepChanged\" event\n    this.stepChanged.emit({\n      step: selectedStep,\n      previousStep: this.currentStep,\n      direction: stepDirection,\n      position: stepPosition\n    });\n\n    // Update the current index\n    this.current_index = selectedStep.index;\n    this.currentStep = selectedStep;\n  }\n\n  _setAnchor(selectedStep: NgWizardStep) {\n    // Current step anchor > Remove other classes and add done class\n    if (this.currentStep) {\n      this.currentStep.status = STEP_STATUS.untouched;\n\n      if (this.config.anchorSettings.markDoneStep) {\n        this.currentStep.status = STEP_STATUS.done;\n\n        if (this.config.anchorSettings.removeDoneStepOnNavigateBack) {\n          this.steps.forEach(step => {\n            if (step.index > selectedStep.index) {\n              step.status = STEP_STATUS.untouched;\n            }\n          });\n        }\n      }\n    }\n\n    // Next step anchor > Remove other classes and add active class\n    selectedStep.status = STEP_STATUS.active;\n  }\n\n  _setButtons(index: number) {\n    // Previous/Next Button enable/disable based on step\n    if (!this.config.cycleSteps) {\n      if (0 >= index) {\n        this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev disabled';\n      }\n      else {\n        this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n      }\n\n      if (this.steps.length - 1 <= index) {\n        this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next disabled';\n      }\n      else {\n        this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n      }\n    }\n  }\n\n  _extraButtonClicked(button: ToolbarButton) {\n    if (button.event) {\n      button.event();\n    }\n  }\n\n  // HELPER FUNCTIONS\n  _keyNav(event: KeyboardEvent) {\n    // Keyboard navigation\n    switch (event.which) {\n      case 37:\n        // left\n        this._showPreviousStep(event);\n        event.preventDefault();\n        break;\n      case 39:\n        // right\n        this._showNextStep(event);\n        event.preventDefault();\n        break;\n      default:\n        return; // exit this handler for other keys\n    }\n  }\n\n  /*\n  _showLoader() {\n    this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';\n  }\n\n  _hideLoader() {\n    this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n  }\n  */\n\n  // PUBLIC FUNCTIONS\n  _setTheme(theme: THEME) {\n    if (this.config.theme == theme) {\n      return false;\n    }\n\n    this.config.theme = theme;\n    this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n\n    // Trigger \"themeChanged\" event\n    this.themeChanged.emit(this.config.theme);\n  }\n\n  _reset() {\n    // Reset all elements and classes\n    this.current_index = null;\n    this.currentStep = null;\n    this._restoreStepStates();\n    this._init();\n\n    // Trigger \"reseted\" event\n    this.reseted.emit();\n  }\n\n  ngOnDestroy() {\n    if (this.resetWizardWatcher) {\n      this.resetWizardWatcher.unsubscribe();\n    }\n\n    if (this.showNextStepWatcher) {\n      this.showNextStepWatcher.unsubscribe();\n    }\n\n    if (this.showPreviousStepWatcher) {\n      this.showPreviousStepWatcher.unsubscribe();\n    }\n\n    if (this.setThemeWatcher) {\n      this.setThemeWatcher.unsubscribe();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgWizardConfig } from '../utils/interfaces';\nimport { NG_WIZARD_CONFIG_TOKEN } from './ng-wizard-config.token';\nimport { NgWizardStepComponent } from './wizard-step/ng-wizard-step.component';\nimport { NgWizardComponent } from './wizard/ng-wizard.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgWizardComponent, NgWizardStepComponent],\n  exports: [NgWizardComponent, NgWizardStepComponent]\n})\nexport class NgWizardModule {\n  /**\n   * forRoot\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(ngWizardConfig: NgWizardConfig): ModuleWithProviders {\n    return {\n      ngModule: NgWizardModule,\n      providers: [\n        {\n          provide: NG_WIZARD_CONFIG_TOKEN,\n          useValue: ngWizardConfig\n        }\n      ]\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}