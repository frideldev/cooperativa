{"version":3,"file":"ngx-spinner.js","sources":["ng:/ngx-spinner/lib/ngx-spinner.enum.ts","ng:/ngx-spinner/lib/ngx-spinner.service.ts","ng:/ngx-spinner/lib/ngx-spinner.component.ts","ng:/ngx-spinner/lib/ngx-spinner.module.ts"],"names":[],"mappings":"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AAA,AAAA,AAMA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAoCA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAnCA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAMA,AAAA,AAAA,AAAA,AAaA,AAZA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAqBA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AACA,AAMA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAMA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAMA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAvLA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AATA,AAAA,AAsFA,AAAA,AAAA,AAAA,AAhEA,AAAA,AAMA,AAAA,AAMA,AAAA,AAMA,AAAA,AAMA,AAAA,AA+IA,AAAA,AAxLA,ACNA,AAIA,AAOA,AAPA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAPA","sourcesContent":["export const LOADERS = {\n  'ball-8bits': 16,\n  'ball-atom': 4,\n  'ball-beat': 3,\n  'ball-circus': 5,\n  'ball-climbing-dot': 4,\n  'ball-clip-rotate': 1,\n  'ball-clip-rotate-multiple': 2,\n  'ball-clip-rotate-pulse': 2,\n  'ball-elastic-dots': 5,\n  'ball-fall': 3,\n  'ball-fussion': 4,\n  'ball-grid-beat': 9,\n  'ball-grid-pulse': 9,\n  'ball-newton-cradle': 4,\n  'ball-pulse': 3,\n  'ball-pulse-rise': 5,\n  'ball-pulse-sync': 3,\n  'ball-rotate': 1,\n  'ball-running-dots': 5,\n  'ball-scale': 1,\n  'ball-scale-multiple': 3,\n  'ball-scale-pulse': 2,\n  'ball-scale-ripple': 1,\n  'ball-scale-ripple-multiple': 3,\n  'ball-spin': 8,\n  'ball-spin-clockwise': 8,\n  'ball-spin-clockwise-fade': 8,\n  'ball-spin-clockwise-fade-rotating': 8,\n  'ball-spin-fade': 8,\n  'ball-spin-fade-rotating': 8,\n  'ball-spin-rotate': 2,\n  'ball-square-clockwise-spin': 8,\n  'ball-square-spin': 8,\n  'ball-triangle-path': 3,\n  'ball-zig-zag': 2,\n  'ball-zig-zag-deflect': 2,\n  'cog': 1,\n  'cube-transition': 2,\n  'fire': 3,\n  'line-scale': 5,\n  'line-scale-party': 5,\n  'line-scale-pulse-out': 5,\n  'line-scale-pulse-out-rapid': 5,\n  'line-spin-clockwise-fade': 8,\n  'line-spin-clockwise-fade-rotating': 8,\n  'line-spin-fade': 8,\n  'line-spin-fade-rotating': 8,\n  'pacman': 6,\n  'square-jelly-box': 2,\n  'square-loader': 1,\n  'square-spin': 1,\n  'timer': 1,\n  'triangle-skew-spin': 1\n};\n\nexport const DEFAULTS = {\n  BD_COLOR: 'rgba(51,51,51,0.8)',\n  SPINNER_COLOR: '#fff',\n  SPINNER_TYPE: 'ball-scale-multiple',\n};\n\nexport const PRIMARY_SPINNER = 'primary';\n\nexport type Size = 'default' | 'small' | 'medium' | 'large';\n\nexport interface Spinner {\n  bdColor?: string;\n  size?: Size;\n  color?: string;\n  type?: string;\n  fullScreen?: boolean;\n}\n\nexport class NgxSpinner {\n  name: string;\n  bdColor: string;\n  size: Size;\n  color: string;\n  type: string;\n  class: string;\n  divCount: number;\n  divArray: Array<number>;\n  fullScreen: boolean;\n  show: boolean;\n\n  constructor(init?: Partial<NgxSpinner>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { NgxSpinner, PRIMARY_SPINNER, Spinner } from './ngx-spinner.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSpinnerService {\n  /**\n   * Spinner observable\n   *\n   * @memberof NgxSpinnerService\n   */\n  private spinnerObservable = new Subject<NgxSpinner>();\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() { }\n  /**\n  * Get subscription of desired spinner\n  * @memberof NgxSpinnerService\n  **/\n  getSpinner(name: string): Observable<NgxSpinner> {\n    return this.spinnerObservable.asObservable().pipe(filter((x: NgxSpinner) => x && x.name === name));\n  }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show(name: string = PRIMARY_SPINNER, spinner?: Spinner) {\n    const showPromise = new Promise((resolve, reject) => {\n      if (spinner && Object.keys(spinner).length) {\n        spinner['name'] = name;\n        this.spinnerObservable.next(new NgxSpinner({ ...spinner, show: true }));\n        resolve(true);\n      } else {\n        this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\n        resolve(true);\n      }\n    });\n    return showPromise;\n  }\n  /**\n  * To hide spinner\n  *\n  * @memberof NgxSpinnerService\n  */\n  hide(name: string = PRIMARY_SPINNER) {\n    const hidePromise = new Promise((resolve, reject) => {\n      this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\n      resolve(true);\n    });\n    return hidePromise;\n  }\n}\n","import { Component, OnDestroy, Input, OnInit, OnChanges, SimpleChanges, SimpleChange, Attribute } from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LOADERS, DEFAULTS, Size, NgxSpinner, PRIMARY_SPINNER } from './ngx-spinner.enum';\n\n@Component({\n  selector: 'ngx-spinner',\n  templateUrl: 'ngx-spinner.component.html',\n  styleUrls: ['ngx-spinner.component.css']\n})\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n\n  /**\n   * Spinner name\n   * @memberof NgxSpinnerComponent\n   */\n  private name: string;\n  /**\n   * To set backdrop color(DEFAULTS.BD_COLOR)\n   * Only supports RGBA color format\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() bdColor = DEFAULTS.BD_COLOR;\n  /**\n   * To set spinner size\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() size: Size = 'large';\n  /**\n   * To set spinner color(DEFAULTS.SPINNER_COLOR)\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() color = DEFAULTS.SPINNER_COLOR;\n  /**\n   * To set type of spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() type = DEFAULTS.SPINNER_TYPE;\n  /**\n   * To toggle fullscreen mode\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() fullScreen = true;\n  /**\n   * Spinner Object\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinner: NgxSpinner = new NgxSpinner();\n  /**\n   * Array for spinner's divs\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divArray: Array<number> = [];\n  /**\n   * Counter for div\n   *\n   * @memberof NgxSpinnerComponent\n   *\n   */\n  divCount = 0;\n  /**\n   * Show spinner\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  show = false;\n  /**\n   * Unsubscribe from spinner's observable\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  ngUnsubscribe: Subject<void> = new Subject();\n\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(\n    private spinnerService: NgxSpinnerService,\n    @Attribute('name') name: string) {\n    this.name = name || PRIMARY_SPINNER;\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.setDefaultOptions();\n    this.spinnerService.getSpinner(this.name)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe((spinner: NgxSpinner) => {\n        this.setDefaultOptions();\n        Object.assign(this.spinner, spinner);\n        this.show = spinner.show;\n        if (this.show) {\n          this.fullScreen = spinner.fullScreen;\n          this.onInputChange();\n        }\n      });\n  }\n  /**\n   * To set default ngx-spinner options\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  setDefaultOptions = () => {\n    this.spinner = new NgxSpinner({\n      name: this.name,\n      bdColor: this.bdColor,\n      size: this.size,\n      color: this.color,\n      type: this.type,\n      fullScreen: this.fullScreen\n    });\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange: SimpleChange = changes.type;\n    const sizeChange: SimpleChange = changes.size;\n\n    if (typeChange) {\n      if (typeof typeChange.currentValue !== 'undefined' && typeChange.currentValue !== typeChange.previousValue) {\n        if (typeChange.currentValue !== '') {\n          this.spinner.type = typeChange.currentValue;\n        }\n      }\n    }\n\n    if (sizeChange) {\n      if (typeof sizeChange.currentValue !== 'undefined' && sizeChange.currentValue !== sizeChange.previousValue) {\n        if (sizeChange.currentValue !== '') {\n          this.spinner.size = sizeChange.currentValue;\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type: string, size: Size): string {\n    this.spinner.divCount = LOADERS[type];\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((x, i) => i);\n    let sizeClass = '';\n    switch (size.toLowerCase()) {\n      case 'small':\n        sizeClass = 'la-sm';\n        break;\n      case 'medium':\n        sizeClass = 'la-2x';\n        break;\n      case 'large':\n        sizeClass = 'la-3x';\n        break;\n      default:\n        break;\n    }\n    return 'la-' + type + ' ' + sizeClass;\n  }\n  /**\n   * Check if input variables have changed\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxSpinnerComponent],\n  exports: [NgxSpinnerComponent]\n})\nexport class NgxSpinnerModule { }\n"]}